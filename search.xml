<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2016年终总结与新年畅想</title>
    <url>/2016-year-end-summary/</url>
    <content><![CDATA[<p>2016最后的一个工作日，窗外阳光明媚，蓝天白云下，平时熙熙攘攘的街道，此时显得空旷而整洁，公司同事们也走的差不多了，楼道里少闻人声，只有玻璃门上的福字还在诉说着当初的喧嚣热闹，在这人心思归的日子里，一切显得和谐而宁静，于是我定下心来，决定回忆下过往的一年，为即将过去的2016作个总结，同时也希望自己能以一个更积极的心态来面对新的一年，2017相信自己会更好。<a id="more"></a></p>
<p>2016，是平凡而重要的一年。</p>
<p><strong>工作方面：</strong> 依旧保持着和上一年一样的状态，压力不大，偶尔会很忙，多数时候是凭良心在认真做事，时常会告诉自己要调整心态、控制情绪、保持耐心，不计较得失，与同事和睦相处。</p>
<p><strong>兴趣方面：</strong> 业余空的时间，会折腾些自己感兴趣的东西，当然主要在IT这块儿，比如自己的网站，或者VPS等，有好的想法就去做，纯粹的喜好，感觉还不错</p>
<p><strong>运动方面：</strong> 打球的频率没有上一年高了，要么没有伴儿，要么找不到合适的场地；然后本来每天固定半小时的健身，现在被洗碗替代了╮(๑•́ ₃•̀๑)╭；</p>
<p><strong>阅读方面：</strong> 看完了《三体》三部曲、《北京折叠》，刷新了自己的世界观，对人类的使命有了新的认识；然而，书架上、kindle里，很多买的书都没读完。</p>
<p><strong>生活方面：</strong> 上半年考了驾照，算是学的有点晚了，因为从小晕车，总是对车有点惧怕，好在学车的过程中，还算比较顺利，和同批的学员一起，一次性通过了最后的考试，教练也为我们高兴。下半年则迎来了人生重要的转变，10月份和初恋女友步入了婚姻的殿堂，从此入了“围城”，开始相对独立自主的生活，这一切的背后，都离不开含辛茹苦的父母，当然这样的变化，也是自己渴望已久的，在婚礼发言中，自己说“这是一次机会，是一次新生”，希望从这一刻起，能真正为自己代言，做自己人生的主人。</p>
<p><strong>旅行方面：</strong> 值得一提的，是人生第一次出国，当然是因为蜜月游啦，去了趟日本，感觉对天朝未来又有了希望，后续会整理下旅行照片，单独写一篇游记。</p>
<p><strong>学习方面：</strong> 12月开始学习前端领域的知识，希望能乘着互联网这股东风，未来找到自己真正的价值所在。</p>
<p>简简单单几句，就把过去一年的经历概括了，人生有时就是如此匆匆易逝，不经意间已韶华白首，所以需要好好规划下。那么新的一年，希望自己做些什么，或者有什么变化呢？</p>
<p>2017，会是人生新的起点。</p>
<p><strong>工作上：</strong> 继续保持，稳中求变</p>
<p><strong>兴趣上：</strong> 抽空想多练练字吧，对自己的字实在不满意</p>
<p><strong>运动上：</strong> 把家务当成一种运动吧，然后周末尽量能抽一个下午打打球，或者晚上出去走走</p>
<p><strong>阅读上：</strong> 希望2017年能把书柜里、和kindle里，那些没看的书，都看完吧</p>
<p><strong>生活上：</strong> 因为年前已经定了车，估计2月底会提车，之后就要抽空多练练，虽然上班的地方不远，感觉也应该多开开，这样能更快熟练，也希望今后能带上家人，多到周边游玩</p>
<p><strong>旅行上：</strong> 自从去年日本蜜月游回来，发现自己晕车的状况好很多了，所以突然对旅行有了很大向往，毕竟这么多年，除了学校/公司组织的，都很少外出游玩，希望2017能把周边城市的景点都开车玩一遍吧</p>
<p><strong>学习上：</strong> 继续学习前端领域的知识，先从财务自由着眼，一步步踏踏实实，向着人身自由进发，最终实现意志/精神自由，这是最为重要，也是长期的目标。</p>
<p>最后借用一句广告词来收尾：</p>
<blockquote>
<p>时间，就应该留给生命中的美好</p>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2019年终总结与来年规划</title>
    <url>/2019-year-end-summary/</url>
    <content><![CDATA[<p>2019年过的很快，回望这一年，能想起的，主要有两件事情，一个是上半年的跳槽，一个是下半年老婆怀孕。跳槽的事，可以说是迫不得已，加班强度超过了生理心理承受的极限，最终选择了放弃，但我并不后悔，因为从一开始，公司的操作方式，就是一种明显的、不可持续的压榨，如果选择继续坚持，也只是期望某天能有转机，能吃到别人画的“饼”，这种思维方式，寄希望于他人<a id="more"></a>，结果却使自己越来越被动，最终导致了工作和生活的失衡，从中也明白了两个道理：坚持不一定会胜利，前提是“道”（方向）要正确；遇事当积极化被动为主动，不能抱有不切实际的幻想；好在目前的新公司，还是比较人性化的，希望新的一年，能在这里工作顺利顺心</p>
<p>下半年老婆的怀孕，真的是很意外，也很惊喜，努力了这么久，虽然有些煎熬，但好在终于得到了老天的回应，人生的一件重要任务完成了，命运之轮又可以继续向前转动，开启新的篇章；对于宝宝，无论男女，只希望他/她能健康平安的出生，老爸会为你加油，家里所有人也都会为你祈祷</p>
<p>2019年过的很快，其他很多当时看似劳心劳力的事情，现在已经都记不起来了，所以遇事，不必过分在意，因为大部分都会随着时间而消逝，而那些会影响“道”的，才是大事，才值得全力把握，才是真正的人生之“道”，希望自己在新的一年，能更好的去领悟和实践</p>
<p>2019年还有一个来自工作上的感悟，当然同样适用于家庭和生活：尝试改变自己，而不是奢望改变他人。不同人有不同的观念，不同的观念，容易引发意见的分歧，与其费力说服别人，不如把精力放在调整自己，特别是调整自己的心态上，因为这是自己能切实掌控的，心态决定一切，也许问题就会迎刃而解；其次，人无完人，尝试化敌为友，接受这个不完美的世界，人生在世不过几十年，有太多美好的东西值得去关注，而不是那些无足轻重的“小”事，希望新的一年，能学会和自己、和生活和解</p>
<p>2020年，还是希望把精力放在健康、学习和提升阅历三个方面，虽然回看前三年的《来年规划》，都反复提到了，但实际执行的都不理想，主要还是懒惰吧，或者缺乏合适的契机，总之需要转变</p>
<p><strong>健康饮食：</strong></p>
<ul>
<li>减少盐、糖、油的摄入</li>
<li>少吃米饭，多吃蔬菜</li>
<li>减少豆制品、菌菇摄入</li>
<li>早餐饮料改成燕麦片+奶粉</li>
<li>少吃零食</li>
<li>每天吃水果</li>
<li>不吃海鲜、辛辣</li>
<li>洗牙</li>
</ul>
<p><strong>锻炼与休息：</strong></p>
<ul>
<li>10点上床</li>
<li>每天在家锻炼半小时，也可以小区里跑步</li>
<li>周末争取打球</li>
<li>走街串巷</li>
</ul>
<p><strong>阅读：</strong></p>
<ul>
<li>题材不限，前提是感兴趣，能看得下去</li>
<li>晚上或周末阅读</li>
</ul>
<p><strong>学习：</strong></p>
<ul>
<li>webpack</li>
<li>react</li>
<li>typescript</li>
<li>node</li>
</ul>
<p><strong>兴趣：</strong></p>
<ul>
<li>学吹笛子</li>
<li>学游泳</li>
<li>吃遍苏城各大面馆</li>
<li>开源项目重构</li>
</ul>
<p>最后希望自己能多出去走走看看，这个世界很大很美好，值得花一辈子去欣赏</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2017年终总结与来年规划</title>
    <url>/2017-year-end-summary/</url>
    <content><![CDATA[<p>不知不觉又是一年，猛然回想，竟然想不出自己这一年都做了哪些事，只能先去翻翻微信朋友圈，看每个月自己都分享了些什么，然而结果大多数都是豆瓣影评，今年除了看了海量的电影（每周2~3部），似乎并没有太多值得记录的，回过神来，这才觉得人生匆匆，转瞬即逝啊，还是应该给自己的人生作个小结，对来年有个规划。<a id="more"></a></p>
<p>2017年，依旧是平凡的一年</p>
<p><strong>工作方面：</strong>因为2016年底开始自学前端开发，恰巧今年遇到公司有移动定位app的需求，于是接到任务，在半个月的内训后，4月份，开始了ASUS EasyWork app的独立开发，使用Ionic 2框架，因为是第一次上手，前后大约花了半年时间，最终开发出了安卓端app，从功能-&gt;设计-&gt;美工-&gt;前端app-&gt;后端server-&gt;DB，甚至包括文案（SOP、ppt）等，都是自己一手完成，现在回过头来看，的确很锻炼人，但和专业的FE相比，还有很大距离，对Angular/ES6还要多学习。</p>
<p>之后，为了方便公司员工了解和掌握app，又做了配套的 <a href="https://easywork.asus.com.cn/" target="_blank" rel="noopener">Demo站点</a>，从编写网页-&gt;申请域名-&gt;源码黑盒/白盒测试-&gt;申请SSL证书-&gt;后端server配置，一路下来，不得不说，台北总公司在这方面，表现的还是相当专业的。</p>
<p>因为这个project，得到了台北Boss的高度评价，说实话，高兴之余，我还是希望公司能有些实际的奖励，但依公司目前的情况，似乎希望并不大</p>
<p><strong>兴趣方面：</strong>就是决定把常年“动荡”的博客，最终落户到Git Page上，实在是懒得折腾了，还是这样安心写博最好，定期把学习笔记做个归纳整理，一些心得想法也会写在上面</p>
<p><strong>运动方面：</strong>很惭愧，今年也基本没怎么打球，由于上半年周末都在上课，没时间，下半年10月份开始想打球了，又找不到同伴（老婆？天天喊着要减肥，却一直不想动），只能在家看电影，略苦恼，明年这块儿需要改变下</p>
<p><strong>阅读方面：</strong>除了专业书，以及每月订的《读者》，基本没看什么书吧，都是碎片阅读。惭愧，明年这方面也要加强</p>
<p><strong>生活方面：</strong>由于每周三天上班开车，目前驾驶水平还算过得去；婚后一年的生活，过了磨合期，感觉还比较平静，就是家务有些琐碎（特别是周末），每周去趟超市买东西，周末去双方父母家吃饭，都比较固定</p>
<p><strong>旅行方面：</strong>今年和家人去了上方山森林动物园、同里古镇，然后很高兴的是，人生第一次坐了回高铁，虽然是去常州吊丧，中间公交还乘了1个多小时，但基本没有什么不舒服，感觉从小的束缚就此解开了，未来可以去更多的地方玩了</p>
<p><strong>学习方面：</strong>继续前端之路，感觉进度有些慢，每天固定刷题、解决疑问，项目做的较少</p>
<p>2018年，希望自己继续追求变化，不断提升自己</p>
<p>拟定2018计划如下：</p>
<ol>
<li><del>车险续保(1.8完成)</del></li>
<li><del>尝试加入开源项目（1.3完成）</del></li>
<li>教会老婆开车 （未达成）</li>
<li>寻找长期固定伙伴，每周打一次球（未达成）</li>
<li>有可能的话，想学游泳（未达成）</li>
<li>每月去一个休闲卡景点（未达成）</li>
<li>长假和老婆去旅行（未达成）</li>
<li>购买重疾险、寿险（未达成）</li>
<li>家中长期闲置物品在闲鱼出售（未达成）</li>
<li><del>老婆买意外险（1.25确认公司有购买）</del></li>
<li>一周三次晚饭后散步（未达成）</li>
<li>减少零食，少盐少糖少油（未达成）</li>
<li><del>2月份统计去年家庭开销（2.18完成）</del></li>
<li><del>旅行照片整理（2.20完成）</del></li>
<li>带父亲去体检（未达成）</li>
<li>带家人去洗牙（未达成）</li>
<li><del>淋浴房贴防爆膜（2.16完成）</del></li>
<li><del>外公助听器（5.19完成）</del></li>
<li><del>转行（7.4完成）</del></li>
<li>生娃（未达成）</li>
<li>练打字（未达成）</li>
<li>尝试增加收入（未达成）</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2020年终总结与来年规划</title>
    <url>/2020-year-end-summary/</url>
    <content><![CDATA[<p>“年年岁岁花相似，岁岁年年人不同”，生活虽然似水流年，但每到岁末回首过往，记忆中总会有点点涟漪勾起不一样的回味。</p>
<a id="more"></a>

<p>用三个词概括2020年的生活：新冠、添丁、“动”起来。</p>
<p>第一个众所周知，是过年那会儿发生的全球性新冠肺炎疫情，到年末了，很多国家还是没能有效控制住，而国内已基本趋于稳定，偶有零发。回想新冠给自己生活带来的影响，最难忘的莫过于”超长”的春节假期，延长放假加上居家办公，差不多有一个月。一开始听到延长春节假期还是挺开心的，但慢慢发现疫情的严重性超乎了自己的想象，大小餐厅关门歇业，大家开始囤货，超市的蔬菜、方便面一扫而光；新闻每天都有新增的病例，朋友圈里到处是某某小区被封锁的消息，搞得人心惶惶，不过这样的状况并没持续很久，在疫情控制之后，很快就复工复产了。期间自己也是第一次体验了一回远程办公，说实在有点累的，因为工作和生活的边界模糊了，二者交织在同一个空间里，难免有些混乱；其次就是口罩不离身，养成了戴口罩的习惯，为了自己，也是为了家人。当然，这些都只是表面的影响，深层次的还要看今年的疫情发展情况。</p>
<p>第二个是7月份家里多了一位新成员，宝宝的到来，说实在还是有点突然的，比预产期早了20天。我依旧记得那天凌晨老婆把我叫醒时，睡眼惺忪的我，一脸懵，手忙脚乱地打包东西，幸亏老婆比较淡定，让我不要着急，说还有时间。之后开车到医院，做完检查确定要准备生产了，我才意识到宝宝真的要降生了。之后的事就比较顺利了，晚上7点多老婆顺产诞下一名男婴，之后住了二天就出院了。宝宝的降临，自然给家里增添了很多喜悦，亲戚朋友探望、送红包礼物，家里忙着置办各种婴儿用品、请月嫂、起名、办准生证、拍照、百日宴等等，大家忙并快乐着。说到起名，也挺仓促的，之前和老婆一直没确定下来，因为第二天马上要办准生证，于是前一天晚上老婆临时想了一个，感觉还不错，至于那两句诗“两袖风云约春霖，一蓑烟雨洒庭轩”，是我后面根据名字配的，有点事后诸葛了哈。关于宝宝，其实还有很多想说的，我会单独写一篇文章来记录，这里就不再展开了。</p>
<p>第三个是“动”起来，这里用了引号，因为不光是身体的动，更是思维观念的“动”。从今年夏天开始尝试学游泳，到进入健身房跟着专业教练锻炼身体，以及下半年的几次自驾出游，旁人看来我是工作之余的运动休闲，实际内在的驱动是自己观念的变化：希望以一种更加积极的心态，去尝试改变生活，体验不一样的人和事。积极的心态很重要，因为它能给我带来勇气与动力，抛弃畏首畏尾、瞻前顾后的“温腾水”状态，敢于做一些之前不敢做的事；尝试改变，可以让我看到更多不一样的可能，看到更多不一样的“路”，“路”多了，生活的选择自然也就多了，人就不会活得固执狭隘，同时心态也会变好，这就是我说的“动”起来。</p>
<p>另外值得一提的，是今年元旦和老婆去看的一部动画电影《心灵奇旅》，里面说到了一个人生“火花”(spark)的概念，它不是人生目标，虽然电影里并没有给出明确的解释，但却发人深思，一个问题是：追求人生目标的实现固然重要，它能让人进入忘我的境界，实现自身价值的同时，也带来了很多物质精神上的满足。但过于执着于目标的追求，也可能形成一种执念，求而不得，郁郁寡欢，同时忽视了与周围的联系，脱离了生活本身，就像电影中那位基金经理，执念于“完成一个交易”，过于投入在工作中，迷失了自我，而忘记了自己工作到底是为了什么。另一个问题是：目标实现了之后呢？在短暂的愉悦和自我满足之后是什么？电影里的男主在完成了自己梦寐以求的精彩演出后，显得有些怅然若失，就像叔本华所说：“生命是一团欲望，欲望不能满足便痛苦，满足便无聊”，人生目标已经达成，但生活还要继续，下一步该怎么走？重新设立目标，开始新一轮循环吗？</p>
<p>上面的两个问题很难，用影评里的话说“很多人一辈子都没能参透”。以我目前的阅历来思考，“火花”可能比较像生活中的“美”，是“爱”的点滴，它偶尔闪现，当我们注意到它时，便会得到心灵的愉悦与精神的满足。虽然是由外而内的过程，但很可能会在内心逐渐积累，到达一种长期的幸福感，那自然会比实现目标带来的短暂快感更能让人热爱生活。至于该不该有个目标，或者说梦想去追求？我觉得还是要的，但在追求的过程中，不能脱离了生活，这就需要做到“平衡”，平衡，我个人认为是绝大部分人生问题的解决之道，在这个问题上，就是需要做到“既不要洒了手里的油勺，又不忘欣赏宫殿的壮美”，要求很简单，但要做到很难</p>
<p>去年的回顾就到这里，今年的目标，会从职业、家庭、健康、心智、人脉五个纬度，以一个季度为区间，分阶段来推进</p>
<p><strong>职业上</strong>：稳中求进。先稳住饭碗，毕竟目前大环境不是很好，疫情对今年经济的影响还不可知，保住饭碗，才能持续输出；然后技术上，考虑往node方向发展，重新发掘自己的兴趣点，webpack和react为辅，继续学习。</p>
<p><strong>家庭上</strong>：关爱家人。保险上齐；家人已知的一些疾病，重点关注，督促就医；父母孩子的体检；不定期的出游、聚餐，放松身心，调节气氛；了解住房</p>
<p><strong>健康上</strong>：继续健身房锻炼身体；对自己已经发现的疾病，主动就医检查</p>
<p><strong>心智上</strong>：通过阅读一些人生哲理书籍来修心</p>
<p><strong>人脉上</strong>：继续通过点赞、送勋章、聚会等方式，与同学同事保持联系</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2018年终总结与来年规划</title>
    <url>/2018-year-end-summary/</url>
    <content><![CDATA[<p>原本想在元旦时写的，但马上又有新项目，怕到时加班没有时间，还是趁现在写了吧</p>
<p>一年过的很快，转眼已经12月，今年最值得骄傲的，应该是7月份完成了转行，从一个IT打杂工，到前端程序员，3年时间的学习与磨砺，只为这一刻的华丽转身，回头看看自己一路走来，多少次想放弃，多少次客服困难继续前行，真的很不容易。<a id="more"></a></p>
<p>虽然说进入了自己心仪的行业，但依旧面临着巨大的挑战和压力。从7月提离职，到入职新公司，前后一周时间，马不停蹄，办手续做交接，适应新环境，还来不及品尝一下喜悦的滋味，就得重新调整心态，迎接新工作，期间没有任何休整，立刻要面对紧张的节奏、繁重的加班，非常不适应</p>
<p>有时候也会怀疑，这个行业是否真的适合自己，是否还要继续坚持，或者与生活和解，另寻出路。几番挣扎，决定还是先咬咬牙，积累经验，毕竟放弃的代价非常高昂，自己也不再是初出茅庐的小年轻，需要更谨慎行事</p>
<p>好在人最大的本能就是适应环境，习惯了996，往后也就没什么好担忧的，如果真的累，就主动给自己放个假，调整下心态，继续战斗，毕竟成年人的世界里，没有容易二字，困难的事和该做的事，往往是同一件</p>
<p>回过头来重新看2017年的规划，发现有很多没能达成的内容，对比运动、阅读、旅行等方面，完全没有改变，很惭愧。思考原因，一方面可能是下半年开始，大部分时间都投入到新工作中（加班严重，就算偶尔休息，也不想做其他事情），另一方面，生活没有变化，无论是主观还是客观，都没有积极想方设法去改变，而且根据目前的情况看，这样的处境，可能还要持续至少半年</p>
<p>2019年，希望自己能继续做出改变，有能力选择自己想要的生活，拟定计划如下：</p>
<h4 id="一、职业规划"><a href="#一、职业规划" class="headerlink" title="一、职业规划"></a>一、职业规划</h4><p>1.机器学习：了解现状、学习理论</p>
<p>2.远程办公/自由职业：了解现状</p>
<p>3.现阶段学习方向：js深入、计算机基础</p>
<h4 id="二、学习计划"><a href="#二、学习计划" class="headerlink" title="二、学习计划"></a>二、学习计划</h4><p>1.知识归纳总结：积累的技巧、echarts配置、常用函数代码</p>
<p>2.js继续学习：es6</p>
<p>3.vue继续学习</p>
<p>4.计算机基础：算法、数据结构、网络</p>
<p>5.开源项目维护</p>
<h4 id="三、阅读计划"><a href="#三、阅读计划" class="headerlink" title="三、阅读计划"></a>三、阅读计划</h4><p>1.专题阅读：世界史</p>
<h4 id="四、健身计划"><a href="#四、健身计划" class="headerlink" title="四、健身计划"></a>四、健身计划</h4><p>1.如果工作日不加班，就在家锻炼1小时</p>
<p>2.如果周末不加班，就找人打球</p>
<p>3.如果周末找不到人打球，就骑自行车锻炼</p>
<h4 id="五、生活与兴趣"><a href="#五、生活与兴趣" class="headerlink" title="五、生活与兴趣"></a>五、生活与兴趣</h4><p>1.学吹笛子</p>
<p>2.学游泳</p>
<p>3.吃遍苏城各大面馆</p>
<p>4.旅行</p>
<p>5.重新布置家居环境</p>
<p>6.生孩子</p>
<p>7.保险</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>AES-GCM 加密简介</title>
    <url>/aes-gcm-introduction/</url>
    <content><![CDATA[<h3 id="一、什么是AES加密？"><a href="#一、什么是AES加密？" class="headerlink" title="一、什么是AES加密？"></a>一、什么是AES加密？</h3><p>常见的加密主要分为两类：<a href="https://zh.wikipedia.org/zh-cn/%E5%B0%8D%E7%A8%B1%E5%AF%86%E9%91%B0%E5%8A%A0%E5%AF%86" target="_blank" rel="noopener">对称加密</a>和<a href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86" target="_blank" rel="noopener">非对称加密</a>，AES加密就是对称加密的一种，即加密和解密使用相同的一把密钥。它的全称是Advanced Encryption Standard(高级加密标准)，主要是用来取代DES加密算法，目前已经被全世界广泛采用，各大处理器厂商也在各自的CPU中，集成了专门的<a href="https://zh.wikipedia.org/wiki/AES%E6%8C%87%E4%BB%A4%E9%9B%86" target="_blank" rel="noopener">AES指令集</a>，从而在硬件层面提升了AES加解密的速度。</p>
<a id="more"></a>

<h3 id="二、AES基本构成"><a href="#二、AES基本构成" class="headerlink" title="二、AES基本构成"></a>二、AES基本构成</h3><p>因为AES属于对称加密，我们可以先了解一下对称加密的流程</p>
<p><img src="../images/aes1.jpeg" alt="对称加密"></p>
<h4 id="1-对称加密相关概念"><a href="#1-对称加密相关概念" class="headerlink" title="1.对称加密相关概念"></a>1.对称加密相关概念</h4><ul>
<li>明文P(plainText)：未经加密的数据</li>
<li>密钥K(key)：用来加密明文的密码。在对称加密算法中，加密与解密的密钥是相同的，由双方协商产生，绝不可以泄漏</li>
<li>密文C(cipherText): 经过加密的数据</li>
<li>加密函数E(encrypt)：C = E(K, P)，即将明文和密钥作为参数，传入加密函数中，就可以获得密文</li>
<li>解密函数D(decrypt)：P = D(K, C)，即将密文和密钥作为参数，传入解密函数中，就可以获得明文</li>
</ul>
<p>说到这里，你可能会觉得加解密函数很神奇，他们是如何实现数据转换的呢？一种简单的做法是<a href="http://www.ruanyifeng.com/blog/2017/05/xor.html" target="_blank" rel="noopener">XOR运算</a>(异或运算)，XOR运算的神奇之处是：如果对一个值连续做两次XOR，会返回这个值本身</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一次 XOR</span></span><br><span class="line"><span class="number">1010</span> ^ <span class="number">1111</span> <span class="comment">// 0101</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二次 XOR</span></span><br><span class="line"><span class="number">0101</span> ^ <span class="number">1111</span> <span class="comment">// 1010</span></span><br></pre></td></tr></table></figure>
<p>XOR 的这个特点，使得它可以用于信息的加密</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">plainText XOR key <span class="comment">// cipherText</span></span><br><span class="line">cipherText XOR key <span class="comment">// plainText</span></span><br></pre></td></tr></table></figure>

<p>了解了上述概念，我们再来看AES的构成</p>
<h4 id="2-AES加密相关概念"><a href="#2-AES加密相关概念" class="headerlink" title="2.AES加密相关概念"></a>2.AES加密相关概念</h4><ul>
<li><strong>分组(或者叫块)</strong>：AES是一种<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">分组加密技术</a>，分组加密就是把明文分成一组一组的，每组长度相等，每次加密一组数据，直到加密完整个明文。那你可能要问：为何要进行分组呢？比如一个应用程序总共就只能获得3M的内存空间来执行，而需要加密的文件是100M，这个时候就不得不进行文件拆解加密。在AES标准规范中，分组长度只能是128 bits，也就是每个分组为16个bytes</li>
<li><strong>密钥长度</strong>：AES支持的密钥长度可以是128 bits、192 bits或256 bits。密钥的长度不同，推荐加密轮数也不同，如下表：<br><img src="../images/aes2.png" alt="密钥长度与加密轮数"><br>加密轮数越多，当然安全性越好，但也更耗费时间</li>
<li><strong>加密模式</strong>：因为分组加密只能加密固定长度的分组，而实际需要加密的明文可能超过分组长度，此时就要对分组密码算法进行迭代，以完成整个明文加密，迭代的方法就是加密模式。它有<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">很多种</a>，常见的工作模式如下图：<br><img src="../images/aes3.png" alt="工作模式"></li>
<li><strong>初始向量(IV，Initialization Vector)</strong>：它的作用和MD5的“加盐”有些类似，目的是防止同样的明文块，始终加密成同样的密文块，以CBC模式为例：<br><img src="../images/aes4.png" alt="初始向量"><br>在每一个明文块加密前，会让明文块和一个值先做异或操作。IV作为初始化变量，参与第一个明文块的异或，后续的每一个明文块和它前一个明文块所加密出的密文块相异或，从而保证加密出的密文块都不同。</li>
<li><strong>填充方式(Padding)</strong>：由于密钥只能对确定长度的数据块进行处理，而数据的长度通常是可变的，因此需要对最后一块做额外处理，在加密前进行数据填充。常用的模式有PKCS5, PKCS7, NOPADDING</li>
<li><strong>附加消息(AAD,Additional Authenticated Data)</strong>：附加消息不是重要数据，它只是可以包含在协议中的纯数据，需要对其进行完整性保护，但不需要加密。一个很好的例子是加密IP数据包的标头。如果对它进行加密，则不能将其用于路由；如果不保护它的完整性，则攻击者可能会更改消息的长度或源地址，而收件人却不知道</li>
</ul>
<p>上述这些概念，通常会以参数的形式，出现在前后端的加密工具中，在使用之前，我们需要协商统一，才不会出现问题。</p>
<h3 id="三、AES-GCM模式"><a href="#三、AES-GCM模式" class="headerlink" title="三、AES GCM模式"></a>三、AES GCM模式</h3><p>上文提到了AES工作模式的概念，在介绍GCM之前，我们需要先了解下CTR模式</p>
<h4 id="1-CTR-Counter-Mode，计数器模式"><a href="#1-CTR-Counter-Mode，计数器模式" class="headerlink" title="1.CTR(Counter Mode，计数器模式)"></a>1.CTR(Counter Mode，计数器模式)</h4><p><img src="../images/ctr1.png" alt="CTR"><br>图中可以看出，加密过程使用了密钥、Nonce(类似IV)、Counter(一个从0到n的编号)，与上文提及的CBC模式相比，CTR最大的优势是可以并行执行，因为所有的块只依赖于Nonce与Counter，并不会依赖于前一个密文块，适合高速传输需求。但CTR不能提供密文消息完整性校验的功能(未被篡改)，所以我们需要引入另一个概念：MAC(消息认证码)</p>
<h4 id="2-MAC-Message-Authentication-Code-消息认证码"><a href="#2-MAC-Message-Authentication-Code-消息认证码" class="headerlink" title="2.MAC(Message Authentication Code, 消息认证码)"></a>2.MAC(Message Authentication Code, 消息认证码)</h4><p>是一种用来确认消息完整性并进行认证的技术。通过输入消息与共享密钥，可以生成一段固定长度的数据(MAC值)<br><img src="../images/mac.png" alt="MAC"><br>收发双方需要提前共享一个密钥，发送者使用密钥生成消息的MAC值，并随消息一起发送，接收者通过共享密钥计算收到消息的MAC值，与随附的MAC值做比较，从而判断消息是否被改过(完整性)，对于篡改者，由于没有密钥(认证)，也就无法对篡改后的消息计算MAC值</p>
<h4 id="3-GMAC-Galois-message-authentication-code-mode-伽罗华消息认证码"><a href="#3-GMAC-Galois-message-authentication-code-mode-伽罗华消息认证码" class="headerlink" title="3.GMAC (Galois message authentication code mode, 伽罗华消息认证码)"></a>3.GMAC (Galois message authentication code mode, 伽罗华消息认证码)</h4><p>GMAC就是利用伽罗华域(Galois Field，GF，有限域)乘法运算来计算消息的MAC值</p>
<h4 id="4-GCM-Galois-Counter-Mode"><a href="#4-GCM-Galois-Counter-Mode" class="headerlink" title="4.GCM(Galois/Counter Mode)"></a>4.<a href="https://en.wikipedia.org/wiki/Galois/Counter_Mode" target="_blank" rel="noopener">GCM</a>(Galois/Counter Mode)</h4><p>GCM是<a href="https://zh.wikipedia.org/zh-cn/%E8%AE%A4%E8%AF%81%E5%8A%A0%E5%AF%86" target="_blank" rel="noopener">认证加密</a>模式中的一种，它结合了上述两者的特点(GCM中的G就是指GMAC，C就是指CTR)，能同时确保数据的保密性、完整性及真实性，另外，它还可以提供附加消息的完整性校验，加密流程如下图:<br><img src="../images/gcm.png" alt="GCM"><br>就像CTR模式下一样，先对块进行顺序编号，然后将该块编号与初始向量(IV)组合，并使用密钥k，对输入做AES加密，然后，将加密的结果与明文进行XOR运算来生成密文。像CTR模式下一样，应该对每次加密使用不同的IV。对于附加消息，会使用密钥H(由密钥K得出)，运行GMAC，将结果与密文进行XOR运算，从而生成可用于验证数据完整性的身份验证标签。最后，密文接收者会收到一条完整的消息，包含密文、IV(计数器CTR的初始值)、身份验证标签(MAC值)。</p>
<h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>随着科学的发展，加密技术已经融入到了我们生活的方方面面，而AES更是在IT互联网领域，有着广泛的应用，配合上GCM模式，能够为数据的保密性、完整性、真实性提供全面的支持，了解上面这些概念，可以帮忙我们更好地掌握和使用这项技术。</p>
<p>由于文章中涉及的知识点较多，本人阅读材料有限，行文中难免疏漏，还望大家不吝指正。</p>
<p>参考文章：</p>
<p><a href="https://en.wikipedia.org/wiki/Galois/Counter_Mode" target="_blank" rel="noopener">Galois/Counter Mode on Wikipedia</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1161339" target="_blank" rel="noopener">最佳安全实战：在 Java 和 Android 里用 AES 进行对称加密</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1350186" target="_blank" rel="noopener">AES加密算法的详细介绍</a></p>
<p><a href="https://blog.csdn.net/T0mato_/article/details/53160772" target="_blank" rel="noopener">什么是 AES-GCM加密算法</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2017/05/xor.html" target="_blank" rel="noopener">XOR 加密简介</a></p>
]]></content>
      <categories>
        <category>加解密</category>
      </categories>
      <tags>
        <tag>aes</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】AdminLTE body高度异常问题解决</title>
    <url>/angular-adminlte-body-height-cut-off-fix/</url>
    <content><![CDATA[<h3 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h3><p>如下图，从登录页进入主页后，body高度异常，此issue应该不限于angular与adminLTE的组合<br><img src="../images/cutoff%20.PNG" alt="cutoff .PNG"></p>
<a id="more"></a>
<p><strong>版本：</strong></p>
<ul>
<li>Angular : 5</li>
<li>AdminLTE: 2.4.3</li>
</ul>
<h3 id="二、解决"><a href="#二、解决" class="headerlink" title="二、解决"></a>二、解决</h3><p>参考 <a href="https://github.com/almasaeed2010/AdminLTE/issues/1033" target="_blank" rel="noopener">AdminLTE官方issue</a></p>
<p>在对应的组件类中添加如下代码，即可修复</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">var</span> $:<span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">ngOnInit() &#123;</span><br><span class="line">    $(<span class="string">'body'</span>).layout(<span class="string">'fix'</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>对应的模板：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Main Header --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-header</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Left side column. contains the logo and sidebar --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-menu</span>&gt;</span><span class="tag">&lt;/<span class="name">app-menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Content Wrapper. Contains page content --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-content</span>&gt;</span><span class="tag">&lt;/<span class="name">app-content</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- /.content-wrapper --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Main Footer --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-footer</span>&gt;</span><span class="tag">&lt;/<span class="name">app-footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Control Sidebar --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!----&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- /.control-sidebar --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Add the sidebar's background. This div must be placed</span></span><br><span class="line"><span class="comment">  immediately after the control sidebar --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ./wrapper --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】数据绑定</title>
    <url>/angular-data-bind/</url>
    <content><![CDATA[<h3 id="一、事件绑定"><a href="#一、事件绑定" class="headerlink" title="一、事件绑定"></a>一、事件绑定</h3><p><code>&lt;button (click)= &quot;onButtonClick($event)&quot;&gt;&lt;/button&gt;</code></p>
<h3 id="二、DOM属性绑定（插值表达式）"><a href="#二、DOM属性绑定（插值表达式）" class="headerlink" title="二、DOM属性绑定（插值表达式）"></a>二、DOM属性绑定（插值表达式）</h3><p><code>&lt;img [src]=&quot;imgUrl&quot;&gt;</code><br><code>&lt;img src=&quot;&quot;&gt;</code></p>
<a id="more"></a>
<h3 id="三、HTML属性绑定"><a href="#三、HTML属性绑定" class="headerlink" title="三、HTML属性绑定"></a>三、HTML属性绑定</h3><h4 id="1-基本HTML属性绑定"><a href="#1-基本HTML属性绑定" class="headerlink" title="1.基本HTML属性绑定"></a>1.基本HTML属性绑定</h4><p><code>&lt;td [attr.colspan]=&quot;tableColspan&quot;&gt;&lt;/td&gt;</code></p>
<h4 id="2-CSS类绑定"><a href="#2-CSS类绑定" class="headerlink" title="2.CSS类绑定"></a>2.CSS类绑定</h4><table>
<thead>
<tr>
<th align="left">动态效果</th>
<th align="left">代码</th>
</tr>
</thead>
<tbody><tr>
<td align="left">全部替换</td>
<td align="left"><code>&lt;div class=&quot;aaa bbb&quot; [class]=&quot;someVarible&quot;&gt;</code></td>
</tr>
<tr>
<td align="left">增加/删除一个类</td>
<td align="left"><code>&lt;div [class.ccc]=&quot;isDev&quot; &gt;</code></td>
</tr>
<tr>
<td align="left">增加/删除多个类</td>
<td align="left"><code>&lt;div [ngClass]=&quot;obj&quot; &gt;</code> //obj = {aaa:true, bbb:false, ccc:false}</td>
</tr>
</tbody></table>
<h4 id="3-样式绑定"><a href="#3-样式绑定" class="headerlink" title="3.样式绑定"></a>3.样式绑定</h4><table>
<thead>
<tr>
<th align="left">动态效果</th>
<th align="left">代码</th>
</tr>
</thead>
<tbody><tr>
<td align="left">增加一个样式</td>
<td align="left"><code>&lt;button [style.color]=&quot;isDev? &#39;red&#39;:&#39;green&#39;&quot; &gt;</code> ; <code>&lt;button [style.font-size.em]=&quot;isDev? 3:1&quot; &gt;</code></td>
</tr>
<tr>
<td align="left">增加多个样式</td>
<td align="left"><code>&lt;div [ngStyle]=&quot;obj&quot;&gt;</code> //obj={color:’red’,background:’yellow’}</td>
</tr>
</tbody></table>
<h3 id="四、双向绑定（适合表单元素）"><a href="#四、双向绑定（适合表单元素）" class="headerlink" title="四、双向绑定（适合表单元素）"></a>四、双向绑定（适合表单元素）</h3><p><code>&lt;input [(ngModel)]=&quot;name&quot;&gt; </code></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】依赖注入归纳</title>
    <url>/angular-dependency-injection-summary/</url>
    <content><![CDATA[<h3 id="一、基本配置"><a href="#一、基本配置" class="headerlink" title="一、基本配置"></a>一、基本配置</h3><h4 id="1-创建服务并在根模块注册"><a href="#1-创建服务并在根模块注册" class="headerlink" title="1.创建服务并在根模块注册"></a>1.创建服务并在根模块注册</h4><p><code>ng g service stock-info</code><br><code>providers: [StockInfoService]</code></p>
<a id="more"></a>
<h4 id="2-配置服务类逻辑"><a href="#2-配置服务类逻辑" class="headerlink" title="2.配置服务类逻辑"></a>2.配置服务类逻辑</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> StockInfoService &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span>) &#123; &#125;</span><br><span class="line">  getStock()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Stock(<span class="number">1</span>,<span class="string">'IBM'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> Stock&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> id:<span class="built_in">number</span>,<span class="keyword">public</span> name:<span class="built_in">string</span></span>)&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-在组件中注入服务"><a href="#3-在组件中注入服务" class="headerlink" title="3.在组件中注入服务"></a>3.在组件中注入服务</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  title = <span class="string">'app'</span>;</span><br><span class="line">  <span class="keyword">private</span> stock:Stock;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> stockInfo:StockInfoService</span>) &#123;<span class="comment">//依赖注入</span></span><br><span class="line">  &#125;</span><br><span class="line">  ngOnInit()&#123;</span><br><span class="line">    <span class="keyword">this</span>.stock = <span class="keyword">this</span>.stockInfo.getStock();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>服务是否可注入，取决于其是否在根模块的providers中声明</li>
<li>而@Injectable修饰符表示其他的组件或服务，可以注入到此服务</li>
<li>一般优先在根模块中声明，这样对模块包含的所有组件都可见；在组件中声明的话，则只对该组件及其子组件可见</li>
</ul>
<h3 id="二、使用类、工厂方式、值，声明提供器"><a href="#二、使用类、工厂方式、值，声明提供器" class="headerlink" title="二、使用类、工厂方式、值，声明提供器"></a>二、使用类、工厂方式、值，声明提供器</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">providers: [</span><br><span class="line">    &#123;provide: StockService, useFactory:</span><br><span class="line">      (logger: LoggerService, isDev) =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(isDev);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(isDev) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> StockService(logger);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AnotherStockService(logger);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, deps: [LoggerService, <span class="string">"IS_DEV_ENV"</span>]&#125;</span><br><span class="line">    , LoggerService,</span><br><span class="line">    &#123;provide: <span class="string">"IS_DEV_ENV"</span>, useValue: &#123;isDev: <span class="literal">true</span>&#125;&#125;],</span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li>类声明：<code>providers:[ProductService]</code>等价于<code>providers:[{provide:ProductService, useClass:ProductService}]</code></li>
<li>useFactory:使用工厂方法</li>
<li>useValue:使用值或变量声明，值或变量必须在之前已存在</li>
<li>deps中的内容，对应useFactory方法的参数</li>
</ul>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】配合php-jwt实现跨域的用户授权及验证</title>
    <url>/angular-jwt-authentication/</url>
    <content><![CDATA[<h3 id="一、流程图"><a href="#一、流程图" class="headerlink" title="一、流程图"></a>一、流程图</h3><p>此项目为员工考勤查询系统，前端为angular 5，后端为php、MySQL(LNMP)，前端页面包含登录页、首页（考勤数据查询页），主要在用户访问首页时进行校验。用户登录所需相关信息已提前录入数据库，故这里只涉及登录，不讨论注册流程。因在开发环境下，涉及跨域测试，故还通过后端php实现了CORS。<a id="more"></a></p>
<p><em>如下内容，是本人参考多篇文章后，自己的理解与实现，可能与实际使用有出入</em></p>
<p><img src="../images/jwt.png" alt="流程图.png"></p>
<p><strong>流程文字说明：</strong></p>
<ul>
<li>用户第一次访问首页时，因客户端没有token，会被首页的路由守卫拦截，然后引导至登录页</li>
<li>用户输入工号、密码，post提交给后端授权服务器</li>
<li>授权服务器拿着工号、密码，到MySQL中比对，如果正确，则使用secret key（签名）、工号、时间戳，生成jwt，并返回给客户端；如果MySQL中查询错误，则将错误信息返回给客户端</li>
<li>客户端根据返回数据中的result字段，判断授权是否通过；通过则将其中的token、工号、英文名存入LocalStorage，以备后续使用，然后再次尝试访问首页；如果不通过，则在登录页显示错误信息，告知用户重新输入</li>
<li>路由守卫得知用户需访问首页，先检查token，发现存在，则将此token放入http header中（Authorization: Bearer）发送给后端验证服务器</li>
<li>验证服务器解包，读取token字串，比对三项信息：secret key是否正确、token是否过期、工号是否是对应的客户端，只要三项中任一出错，则返回给路由守卫false；如果都正确则返回true</li>
<li>路由守卫获得验证服务器发来的信息，如果为true，则表示验证通过，允许用户访问首页；如果为false，表示用户token错误（一般是过期），则引导用户至登录页，重新登录获取新的token</li>
</ul>
<h3 id="二、实现步骤"><a href="#二、实现步骤" class="headerlink" title="二、实现步骤"></a>二、实现步骤</h3><h4 id="1-php配置CORS"><a href="#1-php配置CORS" class="headerlink" title="1.php配置CORS"></a>1.php配置CORS</h4><p>后端的授权、验证服务，都配置上，方便测试；实际生产环境，要按需修改</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization'</span>);</span><br></pre></td></tr></table></figure>

<h4 id="2-配置前端auth-service-ts"><a href="#2-配置前端auth-service-ts" class="headerlink" title="2.配置前端auth.service.ts"></a>2.配置前端auth.service.ts</h4><p>此服务包含向后端请求的登录授权、token验证服务</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Injectable&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'rxjs/Rx'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;HttpClient&#125; <span class="keyword">from</span> <span class="string">'@angular/common/http'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthService &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> http: HttpClient</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  login(uwid: <span class="built_in">string</span>, upwd: <span class="built_in">any</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> postData = <span class="keyword">new</span> FormData();</span><br><span class="line">    postData.append(<span class="string">'uwid'</span> , uwid);</span><br><span class="line">    postData.append(<span class="string">'upwd'</span> , upwd);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.http.post(<span class="string">'https://test.com/backend/authentication.php'</span>, postData);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  validate(uwid: <span class="built_in">string</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> postData = <span class="keyword">new</span> FormData();</span><br><span class="line">    postData.append(<span class="string">'uwid'</span> , uwid);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.http.post(<span class="string">'https://test.com/validation.php'</span>, postData);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  logout()&#123;</span><br><span class="line">    localStorage.clear();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>http.post数据，需以formdata形式传送，否则后端无法获取到</p>
<h4 id="3-配置首页的路由守卫服务"><a href="#3-配置首页的路由守卫服务" class="headerlink" title="3.配置首页的路由守卫服务"></a>3.配置首页的路由守卫服务</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Injectable&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;AuthService&#125; <span class="keyword">from</span> <span class="string">'./auth.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Observable&#125; <span class="keyword">from</span> <span class="string">'rxjs/Observable'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AuthGuardService <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line">  validate;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> router: Router,</span></span><br><span class="line"><span class="params">              <span class="keyword">private</span> authService: AuthService</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable&lt;<span class="built_in">boolean</span>&gt; | <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (localStorage.getItem(<span class="string">'token'</span>)) &#123;</span><br><span class="line">      <span class="keyword">const</span> uwid = localStorage.getItem(<span class="string">'uwid'</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.authService.validate(uwid).map(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">        <span class="keyword">if</span>(data[<span class="string">'result'</span>]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.router.navigate([<span class="string">'/login'</span>], &#123;queryParams: &#123;returnUrl: state.url&#125;&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// not logged in so redirect to login page with the return url</span></span><br><span class="line">      <span class="keyword">this</span>.router.navigate([<span class="string">'/login'</span>], &#123;queryParams: &#123;returnUrl: state.url&#125;&#125;);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>由于验证动作是异步返回数据，故路由守卫需返回Observable类型的布尔值，这样才能正常判断</p>
<h4 id="4-前端登录组件"><a href="#4-前端登录组件" class="headerlink" title="4.前端登录组件"></a>4.前端登录组件</h4><p>接收授权服务返回的数据，并存入LocalStorage，如有错误，提示用户</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Component, OnInit&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;FormBuilder, FormGroup, Validators&#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;AuthService&#125; <span class="keyword">from</span> <span class="string">'../services/auth.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ActivatedRoute, Router&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Md5&#125; <span class="keyword">from</span> <span class="string">'ts-md5/dist/md5'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'app-login'</span>,</span><br><span class="line">  templateUrl: <span class="string">'./login.component.html'</span>,</span><br><span class="line">  styleUrls: [<span class="string">'./login.component.css'</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> LoginComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  formModel: FormGroup;</span><br><span class="line">  returnUrl: <span class="built_in">string</span>;</span><br><span class="line">  loginErrInfo = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService,</span></span><br><span class="line"><span class="params">              <span class="keyword">private</span> route: ActivatedRoute,</span></span><br><span class="line"><span class="params">              <span class="keyword">private</span> router: Router,</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">const</span> fb = <span class="keyword">new</span> FormBuilder;</span><br><span class="line">    <span class="keyword">this</span>.formModel = fb.group(&#123;</span><br><span class="line">      uwid: [<span class="string">''</span>, [Validators.required]],</span><br><span class="line">      upwd: [<span class="string">''</span>, [Validators.required]]</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">this</span>.returnUrl = <span class="keyword">this</span>.route.snapshot.queryParams[<span class="string">'returnUrl'</span>] || <span class="string">'/'</span>;</span><br><span class="line">    <span class="keyword">this</span>.authService.logout();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  login() &#123;</span><br><span class="line">    <span class="keyword">const</span> uid = <span class="keyword">this</span>.formModel.value.uwid;</span><br><span class="line">    <span class="keyword">const</span> password = Md5.hashStr(<span class="keyword">this</span>.formModel.value.upwd);</span><br><span class="line">    <span class="keyword">this</span>.authService.login(uid, password).subscribe(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="keyword">if</span> (data[<span class="string">'result'</span>] === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.loginErrInfo = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.setSession(data);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.loginErrInfo = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setSession(data) &#123;</span><br><span class="line">    localStorage.setItem(<span class="string">'token'</span>, data.token);</span><br><span class="line">    localStorage.setItem(<span class="string">'uwid'</span>, data.uwid);</span><br><span class="line">    localStorage.setItem(<span class="string">'uename'</span>, data.uename);</span><br><span class="line">    <span class="keyword">this</span>.router.navigate([<span class="keyword">this</span>.returnUrl]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-前端Http拦截器服务"><a href="#5-前端Http拦截器服务" class="headerlink" title="5.前端Http拦截器服务"></a>5.前端Http拦截器服务</h4><p>用于将token插入每个http request header中，方便后端获取token</p>
<h5 id="1-需先在根模块中声明"><a href="#1-需先在根模块中声明" class="headerlink" title="(1)需先在根模块中声明"></a>(1)需先在根模块中声明</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;HTTP_INTERCEPTORS, HttpClientModule&#125; <span class="keyword">from</span> <span class="string">'@angular/common/http'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;TokenInterceptorService&#125; <span class="keyword">from</span> <span class="string">'./services/token-interceptor.service'</span>;</span><br><span class="line"></span><br><span class="line">providers: [</span><br><span class="line">    RecordService,</span><br><span class="line">    AuthService,</span><br><span class="line">    AuthGuardService,</span><br><span class="line">    &#123;</span><br><span class="line">      provide: HTTP_INTERCEPTORS,</span><br><span class="line">      useClass: TokenInterceptorService,</span><br><span class="line">      multi: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure>
<h5 id="2-实现"><a href="#2-实现" class="headerlink" title="(2)实现"></a>(2)实现</h5><p>如果有token，则更新request；如果没有，则直接发送</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Injectable&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;HttpEvent, HttpHandler, HttpRequest&#125; <span class="keyword">from</span> <span class="string">'@angular/common/http'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Observable&#125; <span class="keyword">from</span> <span class="string">'rxjs/Observable'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> TokenInterceptorService &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  intercept(req: HttpRequest&lt;<span class="built_in">any</span>&gt;,</span><br><span class="line">            next: HttpHandler): Observable&lt;HttpEvent&lt;<span class="built_in">any</span>&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> token = localStorage.getItem(<span class="string">'token'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      <span class="keyword">const</span> cloned = req.clone(&#123;</span><br><span class="line">        headers: req.headers.set(<span class="string">'Authorization'</span>,</span><br><span class="line">          <span class="string">'Bearer '</span> + token)</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> next.handle(cloned);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> next.handle(req);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="6-配置后端php安装jwt库"><a href="#6-配置后端php安装jwt库" class="headerlink" title="6.配置后端php安装jwt库"></a>6.配置后端php安装jwt库</h4><h5 id="（1）这里使用-lcobucci-jwt实现php-jwt，按照文档说明，先安装composer"><a href="#（1）这里使用-lcobucci-jwt实现php-jwt，按照文档说明，先安装composer" class="headerlink" title="（1）这里使用 lcobucci/jwt实现php-jwt，按照文档说明，先安装composer"></a>（1）这里使用 <a href="https://github.com/lcobucci/jwt/blob/3.2/README.md" target="_blank" rel="noopener">lcobucci/jwt</a>实现php-jwt，按照文档说明，先安装composer</h5><h5 id="（2）按照-composer官网，在Linux中输入如下命令，获取composer-phar"><a href="#（2）按照-composer官网，在Linux中输入如下命令，获取composer-phar" class="headerlink" title="（2）按照 composer官网，在Linux中输入如下命令，获取composer.phar"></a>（2）按照 <a href="https://getcomposer.org/download/" target="_blank" rel="noopener">composer官网</a>，在Linux中输入如下命令，获取composer.phar</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"</span><br><span class="line">php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') &#123; echo 'Installer verified'; &#125; else &#123; echo 'Installer corrupt'; unlink('composer-setup.php'); &#125; echo PHP_EOL;"</span><br><span class="line">php composer-setup.php</span><br></pre></td></tr></table></figure>

<h5 id="3-将composer-phar拷贝至项目相关目录下，比如test-backend，运行composer-phar-require-lcobucci-jwt，这里将安装lcobucci-jwt"><a href="#3-将composer-phar拷贝至项目相关目录下，比如test-backend，运行composer-phar-require-lcobucci-jwt，这里将安装lcobucci-jwt" class="headerlink" title="(3)将composer.phar拷贝至项目相关目录下，比如test/backend，运行composer.phar require lcobucci/jwt，这里将安装lcobucci/jwt"></a>(3)将composer.phar拷贝至项目相关目录下，比如test/backend，运行<code>composer.phar require lcobucci/jwt</code>，这里将安装lcobucci/jwt</h5><p>更新（2018/05/21）: ubuntu可以直接运行<code>sudo apt-get install composer</code>来安装，然后在php文件相关目录下安装jwt<code>sudo composer require lcobucci/jwt</code></p>
<h4 id="7-配置php授权服务器"><a href="#7-配置php授权服务器" class="headerlink" title="7.配置php授权服务器"></a>7.配置php授权服务器</h4><p>用于获取用户发来的工号、密码信息，并与MySQL比对后，生成jwt返回客户端</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization'</span>);</span><br><span class="line">header(<span class="string">"Content-Type:application/json;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'vendor/autoload.php'</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Builder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Parser</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">ValidationData</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Signer</span>\<span class="title">Hmac</span>\<span class="title">Sha256</span>;</span><br><span class="line"></span><br><span class="line">  $uwid = $_REQUEST[<span class="string">'uwid'</span>];</span><br><span class="line">  $upwd = $_REQUEST[<span class="string">'upwd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">  $link = mysqli_connect($db_url,$db_user,$db_pwd,$db_name,$db_port);</span><br><span class="line"></span><br><span class="line">  $sql = <span class="string">"set names utf8"</span>;</span><br><span class="line">  mysqli_query($link,$sql);</span><br><span class="line"></span><br><span class="line">  $sql = <span class="string">"select * from asus_user where uwid='$uwid' and upwd='$upwd'"</span>;</span><br><span class="line">  $result = mysqli_query($link,$sql);</span><br><span class="line">  $list = mysqli_fetch_assoc($result);</span><br><span class="line">  $uename = $list[<span class="string">'uename'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>($list)&#123;</span><br><span class="line">  $signer = <span class="keyword">new</span> Sha256();</span><br><span class="line">  $token = (<span class="keyword">new</span> Builder())-&gt;setIssuer(<span class="string">'test.com'</span>)</span><br><span class="line">        -&gt;setAudience(<span class="string">'test.com'</span>)</span><br><span class="line">        -&gt;setIssuedAt(time())</span><br><span class="line">        -&gt;setId($uwid, <span class="keyword">true</span>)</span><br><span class="line">        -&gt;setExpiration(time() + <span class="number">3600</span>) <span class="comment">//一小时后过期</span></span><br><span class="line">        -&gt;sign($signer, <span class="string">'your secret key'</span>)</span><br><span class="line">        -&gt;getToken();</span><br><span class="line">        <span class="keyword">echo</span> json_encode([<span class="string">'result'</span> =&gt; <span class="number">1</span>, <span class="string">'message'</span> =&gt; <span class="string">'Token generated successfully'</span>, <span class="string">'uwid'</span> =&gt; $uwid, <span class="string">'uename'</span> =&gt; $uename, <span class="string">'token'</span> =&gt; <span class="string">''</span> . $token]);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> json_encode([<span class="string">'result'</span> =&gt; <span class="number">0</span>, <span class="string">'message'</span> =&gt; <span class="string">'Invalid username and/or password'</span>]);</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure>

<h4 id="8-配置验证服务器"><a href="#8-配置验证服务器" class="headerlink" title="8.配置验证服务器"></a>8.配置验证服务器</h4><p>用于获取http request header中的token字串，并做校验，然后返回结果</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization'</span>);</span><br><span class="line">header(<span class="string">"Content-Type:application/json;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'vendor/autoload.php'</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Builder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Parser</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">ValidationData</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Lcobucci</span>\<span class="title">JWT</span>\<span class="title">Signer</span>\<span class="title">Hmac</span>\<span class="title">Sha256</span>;</span><br><span class="line"></span><br><span class="line">$uwid = $_REQUEST[<span class="string">'uwid'</span>];</span><br><span class="line">$fetchToken = <span class="string">''</span>;</span><br><span class="line">$validateMsg = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_SERVER <span class="keyword">as</span> $name =&gt; $value)&#123;</span><br><span class="line">           <span class="keyword">if</span> ($name == <span class="string">'HTTP_AUTHORIZATION'</span>)&#123;</span><br><span class="line">               $fetchToken = substr($value, <span class="number">7</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">$token = (<span class="keyword">new</span> Parser())-&gt;parse($fetchToken);</span><br><span class="line">$signer = <span class="keyword">new</span> Sha256();</span><br><span class="line">$signerCheck = $token-&gt;verify($signer, <span class="string">'your secret key'</span>);</span><br><span class="line">$expireCheck = $token-&gt;getClaim(<span class="string">'exp'</span>) &gt; time();</span><br><span class="line">$uwidCheck = $token-&gt;getClaim(<span class="string">'jti'</span>) == $uwid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$signerCheck) $validateMsg .= <span class="string">'签名已被篡改！'</span>;</span><br><span class="line"><span class="keyword">if</span>(!$expireCheck) $validateMsg .= <span class="string">' token已过期！'</span>;</span><br><span class="line"><span class="keyword">if</span>(!$uwidCheck) $validateMsg .= <span class="string">' 非当前用户的token！'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$signerCheck || !$expireCheck || !$uwidCheck)&#123;</span><br><span class="line">  <span class="keyword">echo</span> json_encode([<span class="string">'result'</span> =&gt; <span class="keyword">false</span>, <span class="string">'message'</span> =&gt; $validateMsg]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> json_encode([<span class="string">'result'</span> =&gt; <span class="keyword">true</span>, <span class="string">'message'</span> =&gt; <span class="string">'验证通过！'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考链接：</p>
<p><a href="https://blog.angular-university.io/angular-jwt-authentication/" target="_blank" rel="noopener">Angular Security - Authentication With JSON Web Tokens (JWT): The Complete Guide</a></p>
<p><a href="http://jasonwatmore.com/post/2016/09/29/angular-2-user-registration-and-login-example-tutorial" target="_blank" rel="noopener">Angular 2/5 User Registration and Login Example &amp; Tutorial</a></p>
<p><a href="https://medium.freecodecamp.org/how-to-make-authentication-easier-with-json-web-token-cc15df3f2228" target="_blank" rel="noopener">How to simplify your app’s authentication by using JSON Web Token</a></p>
<p><a href="https://blog.csdn.net/HobHunter/article/details/78524922" target="_blank" rel="noopener">php使用jwt的例子</a></p>
<p><a href="https://codereview.stackexchange.com/questions/111402/jwt-simple-api-example" target="_blank" rel="noopener">JWT - Simple API example</a></p>
<p><a href="http://www.cnblogs.com/leestar54/p/7242165.html" target="_blank" rel="noopener">JWT（Json Web Token）初探与实践</a></p>
<p><a href="https://github.com/lcobucci/jwt/blob/3.2/README.md" target="_blank" rel="noopener">lcobucci/jwt</a></p>
<p><a href="https://blog.csdn.net/qq_34438958/article/details/72792977" target="_blank" rel="noopener">angular 中使用md5</a></p>
<p><a href="https://stackoverflow.com/questions/38425461/angular2-canactivate-calling-async-function" target="_blank" rel="noopener">Angular2 canActivate() calling async function
</a></p>
<p><a href="https://medium.com/@ryanchenkie_40935/angular-authentication-using-the-http-client-and-http-interceptors-2f9d1540eb8" target="_blank" rel="noopener">Angular Authentication: Using the Http Client and Http Interceptors</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】Angular 5 整合 AdminLTE 2.4.3</title>
    <url>/angular-integrated-with-adminlte/</url>
    <content><![CDATA[<p><del>1.下载 <a href="https://github.com/almasaeed2010/AdminLTE/releases" target="_blank" rel="noopener">Admin LTE</a>，并解压到本地</del></p>
<p><del>2.将解压所得的三个文件夹：bower_components、dist、plugins，拷贝至ng目录的src/assets下</del></p>
<p><strong>更新（2018/05/18）：原方法会造成ng serve缓慢，并在build后，在assets文件夹下产生大量文件，不利于部署</strong><br>1.分别npm install bootstrap/jQuery/adminlte三个依赖包</p>
<a id="more"></a>
<p>3.用编辑器打开admin LTE解压文件夹内的index2.html</p>
<p>4.拷贝引用的css内容至ng目录下angular-cli.json的styles内，同时修改为正确的路径，如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"styles": [</span><br><span class="line">                "styles.css",</span><br><span class="line">                "../node_modules/bootstrap/dist/css/bootstrap.min.css",</span><br><span class="line">                "../node_modules/font-awesome/css/font-awesome.min.css",</span><br><span class="line">                "../node_modules/adminlte/dist/css/AdminLTE.min.css",</span><br><span class="line">                <span class="string">"../node_modules/adminlte/dist/css/skins/_all-skins.min.css"</span></span><br><span class="line">      ],</span><br></pre></td></tr></table></figure>
<p>5.拷贝index2.html内的js引用，至angular-cli.json的scripts内（可根据用到的功能自行增删），同时修改为正确的路径，如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": [</span><br><span class="line">    "../node_modules/jquery/dist/jquery.min.js",</span><br><span class="line">    "../node_modules/bootstrap/dist/js/bootstrap.min.js",</span><br><span class="line">    "../node_modules/fastclick/lib/fastclick.js",</span><br><span class="line">    <span class="string">"../node_modules/adminlte/dist/js/adminlte.min.js"</span></span><br><span class="line">      ],</span><br></pre></td></tr></table></figure>

<p>6.【可选】拷贝index2.html内的google fonts引用，至ng目录src/index.html的head标签内</p>
<p>7.为src/index.html的body标签添加class（此处依据index2.html的body拥有的class），如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"hold-transition skin-blue sidebar-mini"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-root</span>&gt;</span><span class="tag">&lt;/<span class="name">app-root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>8.拷贝index2.html中body下div.wrapper全部内容，至ng目录下src/app/app.component.html中</p>
<p>9.运行ng serve –open</p>
<p>10.依据页面情况，调整缺失图片的相关路径即可</p>
<p>11.创建各部分组件，将对应内容分配到组件中，如下（app.component.html）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Main Header --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-header</span>&gt;</span><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Left side column. contains the logo and sidebar --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-menu</span>&gt;</span><span class="tag">&lt;/<span class="name">app-menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Content Wrapper. Contains page content --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-content</span>&gt;</span><span class="tag">&lt;/<span class="name">app-content</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- /.content-wrapper --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Main Footer --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-footer</span>&gt;</span><span class="tag">&lt;/<span class="name">app-footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Control Sidebar --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">app-sidebar</span>&gt;</span><span class="tag">&lt;/<span class="name">app-sidebar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://www.youtube.com/watch?v=4YRVuRN5k04" target="_blank" rel="noopener">ANGULAR 4 Admin LTE Theme Integration Advanced</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】HTTP通信</title>
    <url>/angular-http/</url>
    <content><![CDATA[<h4 id="一、在根模块导入HttpModule"><a href="#一、在根模块导入HttpModule" class="headerlink" title="一、在根模块导入HttpModule"></a>一、在根模块导入HttpModule</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;HttpModule &#125; <span class="keyword">from</span> <span class="string">"@angular/http"</span>;</span><br><span class="line">imports: [</span><br><span class="line">    HttpModule</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="二、在组件中导入Http服务"><a href="#二、在组件中导入Http服务" class="headerlink" title="二、在组件中导入Http服务"></a>二、在组件中导入Http服务</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Http &#125; <span class="keyword">from</span> <span class="string">'@angular/http'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"rxjs/Rx"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Observable&#125; <span class="keyword">from</span> <span class="string">"rxjs"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line"></span><br><span class="line">  dataSource:Observable&lt;<span class="built_in">any</span>&gt;;</span><br><span class="line">  stocks = [];</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> http:Http</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.dataSource =  <span class="keyword">this</span>.http.get(<span class="string">'/stock'</span>).map(<span class="function"><span class="params">response</span> =&gt;</span> response.json());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">   <span class="keyword">this</span>.dataSource.subscribe(<span class="function"><span class="params">data</span> =&gt;</span> <span class="keyword">this</span>.stocks = data);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="三、使用proxy实现跨域调用API，方便开发"><a href="#三、使用proxy实现跨域调用API，方便开发" class="headerlink" title="三、使用proxy实现跨域调用API，方便开发"></a>三、使用proxy实现跨域调用API，方便开发</h4><h5 id="1-在客户端新增proxy-conf-json"><a href="#1-在客户端新增proxy-conf-json" class="headerlink" title="1.在客户端新增proxy.conf.json"></a>1.在客户端新增proxy.conf.json</h5><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"/api"</span>:&#123;</span><br><span class="line">        <span class="attr">"target"</span>:<span class="string">"http://localhost:8000"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-修改http组件中的url，前面增加api"><a href="#2-修改http组件中的url，前面增加api" class="headerlink" title="2.修改http组件中的url，前面增加api"></a>2.修改http组件中的url，前面增加api</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> http:Http</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.dataSource =  <span class="keyword">this</span>.http.get(<span class="string">'/api/stock'</span>).map(<span class="function"><span class="params">response</span> =&gt;</span> response.json());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-server端修改响应url，前面增加api"><a href="#3-server端修改响应url，前面增加api" class="headerlink" title="3.server端修改响应url，前面增加api"></a>3.server端修改响应url，前面增加api</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> express <span class="keyword">from</span> <span class="string">"express"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>,<span class="function">(<span class="params">request,response</span>) =&gt;</span> response.send(<span class="string">"这里是首页!"</span>));</span><br><span class="line">app.get(<span class="string">'/api/stock'</span>,<span class="function">(<span class="params">request,response</span>) =&gt;</span> response.json(stocks));</span><br><span class="line">app.get(<span class="string">'/api/stock/:id'</span>,<span class="function">(<span class="params">request,response</span>) =&gt;</span> response.json(stocks.find(<span class="function">(<span class="params">stock</span>) =&gt;</span> stock.id == request.params.id )));</span><br><span class="line"><span class="keyword">const</span> server = app.listen(<span class="number">8000</span>, <span class="string">'localhost'</span>, <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"服务器已启动"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> Stock &#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> id:<span class="built_in">number</span>,</span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> name:<span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> price:<span class="built_in">number</span>,</span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> rating:<span class="built_in">number</span>,</span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> desc:<span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">        <span class="keyword">public</span> categories:<span class="built_in">Array</span>&lt;<span class="built_in">string</span>&gt;</span></span><br><span class="line"><span class="params">    </span>)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stocks: Stock[] = [</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">1</span>, <span class="string">'第一只股票'</span>, <span class="number">1.99</span>, <span class="number">3.5</span>, <span class="string">'第1只股票，大牛股'</span>, [<span class="string">'IT'</span>, <span class="string">'互联网'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">2</span>, <span class="string">'第二只股票'</span>, <span class="number">2.99</span>, <span class="number">4.5</span>, <span class="string">'第2只股票，大牛股'</span>, [<span class="string">'IT'</span>, <span class="string">'金融'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">3</span>, <span class="string">'第三只股票'</span>, <span class="number">3.99</span>, <span class="number">3.5</span>, <span class="string">'第3只股票，大牛股'</span>, [<span class="string">'金融'</span>, <span class="string">'IT'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">4</span>, <span class="string">'第四只股票'</span>, <span class="number">4.99</span>, <span class="number">1.5</span>, <span class="string">'第4只股票，大牛股'</span>, [<span class="string">'金融'</span>, <span class="string">'互联网'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">5</span>, <span class="string">'第五只股票'</span>, <span class="number">5.99</span>, <span class="number">2.5</span>, <span class="string">'第5只股票，大牛股'</span>, [<span class="string">'IT'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">6</span>, <span class="string">'第六只股票'</span>, <span class="number">6.99</span>, <span class="number">3.5</span>, <span class="string">'第6只股票，大牛股'</span>, [<span class="string">'IT'</span>, <span class="string">'互联网'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">7</span>, <span class="string">'第七只股票'</span>, <span class="number">7.99</span>, <span class="number">2.5</span>, <span class="string">'第7只股票，大牛股'</span>, [<span class="string">'互联网'</span>]),</span><br><span class="line">    <span class="keyword">new</span> Stock(<span class="number">8</span>, <span class="string">'第八只股票'</span>, <span class="number">8.99</span>, <span class="number">1.5</span>, <span class="string">'第8只股票，大牛股'</span>, [<span class="string">'金融'</span>]),</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h5 id="4-在package-json的启动脚本start中添加proxy配置"><a href="#4-在package-json的启动脚本start中添加proxy配置" class="headerlink" title="4.在package.json的启动脚本start中添加proxy配置"></a>4.在package.json的启动脚本start中添加proxy配置</h5><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "ng": "ng",</span><br><span class="line">    "start": "ng serve --proxy-config proxy.conf.json",</span><br><span class="line">    "build": "ng build --prod",</span><br><span class="line">    "test": "ng test",</span><br><span class="line">    "lint": "ng lint",</span><br><span class="line">    "e2e": "ng e2e"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<h4 id="四、使用async管道接收并展示数据"><a href="#四、使用async管道接收并展示数据" class="headerlink" title="四、使用async管道接收并展示数据"></a>四、使用async管道接收并展示数据</h4><h5 id="1-模板修改为："><a href="#1-模板修改为：" class="headerlink" title="1.模板修改为："></a>1.模板修改为：</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  股票信息</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> *<span class="attr">ngFor</span>=<span class="string">"let stock of stocks | async"</span>&gt;</span></span><br><span class="line">      &#123;&#123;stock.name&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-组件类修改为："><a href="#2-组件类修改为：" class="headerlink" title="2.组件类修改为："></a>2.组件类修改为：</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line"></span><br><span class="line">  stocks:Observable&lt;<span class="built_in">any</span>&gt;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> http:Http</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.stocks =  <span class="keyword">this</span>.http.get(<span class="string">'/api/stock'</span>).map(<span class="function"><span class="params">response</span> =&gt;</span> response.json());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="五、增加Request-Header内容"><a href="#五、增加Request-Header内容" class="headerlink" title="五、增加Request Header内容"></a>五、增加Request Header内容</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Http , Headers&#125; <span class="keyword">from</span> <span class="string">'@angular/http'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line"></span><br><span class="line">  stocks:Observable&lt;<span class="built_in">any</span>&gt;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> http:Http</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> myHeaders:Headers = <span class="keyword">new</span> Headers();</span><br><span class="line">    myHeaders.append(<span class="string">"Authorization"</span>,<span class="string">"Basic 123456"</span>);</span><br><span class="line">    <span class="keyword">this</span>.stocks =  <span class="keyword">this</span>.http.get(<span class="string">'/api/stock'</span>,&#123;headers:myHeaders&#125;).map(<span class="function"><span class="params">response</span> =&gt;</span> response.json());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】分页组件</title>
    <url>/angular-pagination-component/</url>
    <content><![CDATA[<h4 id="一、流程说明"><a href="#一、流程说明" class="headerlink" title="一、流程说明"></a>一、流程说明</h4><ul>
<li>record.service负责从后端server获取数据</li>
<li>父组件table.component通过依赖注入，从record.service订阅实时变更的数据</li>
<li>子组件pagination.component通过@Input，获取父组件传入的分页相关变量值，从而在模板中显示正确的分页信息</li>
<li>然后根据用户点击的page值，子组件通过@Output属性，将page值传回父组件</li>
<li>父组件依据page值将数组数据分片展示<a id="more"></a>

</li>
</ul>
<h4 id="二、相关代码"><a href="#二、相关代码" class="headerlink" title="二、相关代码"></a>二、相关代码</h4><h5 id="1-record-service-ts"><a href="#1-record-service-ts" class="headerlink" title="1.record.service.ts"></a>1.record.service.ts</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;EventEmitter, Injectable&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> RecordService &#123;</span><br><span class="line">  records = [];</span><br><span class="line">  recordChange: EventEmitter&lt;<span class="built_in">any</span>&gt; = <span class="keyword">new</span> EventEmitter();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getRecord() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.records;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setRecord(arr) &#123;</span><br><span class="line">    <span class="keyword">this</span>.records = arr;</span><br><span class="line">    <span class="keyword">this</span>.recordChange.emit(<span class="keyword">this</span>.records);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-pagination-component-html"><a href="#2-pagination-component-html" class="headerlink" title="2.pagination.component.html"></a>2.pagination.component.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"padding-top: 8px;"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>第 &#123;&#123; getMin() &#125;&#125; 到 &#123;&#123; getMax() &#125;&#125; 条，<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>共 &#123;&#123; total &#125;&#125; 条(&#123;&#123; totalPages() &#125;&#125;页)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-7"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination pagination-sm no-margin pull-right"</span> *<span class="attr">ngIf</span>=<span class="string">"total &gt; 0"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"paginate_button previous"</span> [<span class="attr">class.disabled</span>]=<span class="string">"page === 1"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> (<span class="attr">click</span>)=<span class="string">"onPrev()"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"paginate_button"</span> *<span class="attr">ngFor</span>=<span class="string">"let pageNum of getPages()"</span> (<span class="attr">click</span>)=<span class="string">"onPage(pageNum)"</span> [<span class="attr">class.active</span>]=<span class="string">"pageNum === page"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span>&#123;&#123;pageNum&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"paginate_button next"</span> [<span class="attr">class.disabled</span>]=<span class="string">"lastPage()"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> (<span class="attr">click</span>)=<span class="string">"onNext()"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="3-pagination-component-ts"><a href="#3-pagination-component-ts" class="headerlink" title="3.pagination.component.ts"></a>3.pagination.component.ts</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Component, EventEmitter, Input, OnInit, Output&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'app-pagination'</span>,</span><br><span class="line">  templateUrl: <span class="string">'./pagination.component.html'</span>,</span><br><span class="line">  styleUrls: [<span class="string">'./pagination.component.css'</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> PaginationComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  <span class="meta">@Input</span>() page: <span class="built_in">number</span>; <span class="comment">// 传入用户点击的页数</span></span><br><span class="line">  <span class="meta">@Input</span>() total: <span class="built_in">number</span>; <span class="comment">// 数据总个数</span></span><br><span class="line">  <span class="meta">@Input</span>() perPage: <span class="built_in">number</span>; <span class="comment">// 每页展示的数据个数</span></span><br><span class="line">  <span class="meta">@Input</span>() pagesToShow: <span class="built_in">number</span>; <span class="comment">// 需要显示的分页个数</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Output</span>() goPrev = <span class="keyword">new</span> EventEmitter();</span><br><span class="line">  <span class="meta">@Output</span>() goNext = <span class="keyword">new</span> EventEmitter();</span><br><span class="line">  <span class="meta">@Output</span>() goPage = <span class="keyword">new</span> EventEmitter&lt;<span class="built_in">number</span>&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 当前页的最小编号</span></span><br><span class="line">  getMin(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">this</span>.perPage * <span class="keyword">this</span>.page) - <span class="keyword">this</span>.perPage) + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 当前页的最大编号</span></span><br><span class="line">  getMax(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> max = <span class="keyword">this</span>.perPage * <span class="keyword">this</span>.page;</span><br><span class="line">    <span class="keyword">if</span> (max &gt; <span class="keyword">this</span>.total) &#123;</span><br><span class="line">      max = <span class="keyword">this</span>.total;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onPage(n: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.goPage.emit(n);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onPrev(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.goPrev.emit();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onNext(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.goNext.emit();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  totalPages(): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.ceil(<span class="keyword">this</span>.total / <span class="keyword">this</span>.perPage) || <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  lastPage(): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.perPage * <span class="keyword">this</span>.page &gt;= <span class="keyword">this</span>.total;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getPages(): <span class="built_in">number</span>[] &#123;</span><br><span class="line">    <span class="keyword">const</span> c = <span class="built_in">Math</span>.ceil(<span class="keyword">this</span>.total / <span class="keyword">this</span>.perPage);</span><br><span class="line">    <span class="keyword">const</span> p = <span class="keyword">this</span>.page || <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> pagesToShow = <span class="keyword">this</span>.pagesToShow || <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> pages: <span class="built_in">number</span>[] = [];</span><br><span class="line">    pages.push(p);</span><br><span class="line">    <span class="keyword">const</span> times = pagesToShow - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; times; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (pages.length &lt; pagesToShow) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, pages) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">          pages.push(<span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, pages) - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (pages.length &lt; pagesToShow) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, pages) &lt; c) &#123;</span><br><span class="line">          pages.push(<span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, pages) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pages.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">    <span class="keyword">return</span> pages;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-table-component-html"><a href="#4-table-component-html" class="headerlink" title="4.table.component.html"></a>4.table.component.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> *<span class="attr">ngIf</span>=<span class="string">"records.length &gt; 0"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- /.box-header --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"width: 10px"</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>工号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>上班时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>上班地点<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>下班时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>下班地点<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>出勤时数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> *<span class="attr">ngFor</span>=<span class="string">"let record of recordsGroup;let i = index;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;(i+1)+(page-1)*limit&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.cwid&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.ccname&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.cdate&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.cintime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.cinpos&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.cofftime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.coffpos&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;record.chour&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- /.box-body --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">app-pagination</span> (<span class="attr">goPage</span>)=<span class="string">"goToPage($event)"</span></span></span><br><span class="line"><span class="tag">                    (<span class="attr">goNext</span>)=<span class="string">"onNext()"</span></span></span><br><span class="line"><span class="tag">                    (<span class="attr">goPrev</span>)=<span class="string">"onPrev()"</span></span></span><br><span class="line"><span class="tag">                    [<span class="attr">pagesToShow</span>]=<span class="string">"3"</span></span></span><br><span class="line"><span class="tag">                    [<span class="attr">page</span>]=<span class="string">"page"</span></span></span><br><span class="line"><span class="tag">                    [<span class="attr">perPage</span>]=<span class="string">"limit"</span></span></span><br><span class="line"><span class="tag">                    [<span class="attr">total</span>]=<span class="string">"total"</span>&gt;</span><span class="tag">&lt;/<span class="name">app-pagination</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>&#123;&#123;noRecodesInfo&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="5-table-component-ts"><a href="#5-table-component-ts" class="headerlink" title="5.table.component.ts"></a>5.table.component.ts</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Component, OnInit&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;RecordService&#125; <span class="keyword">from</span> <span class="string">'../services/record.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  selector: <span class="string">'app-table'</span>,</span><br><span class="line">  templateUrl: <span class="string">'./table.component.html'</span>,</span><br><span class="line">  styleUrls: [<span class="string">'./table.component.css'</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> TableComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line"></span><br><span class="line">  records = [];</span><br><span class="line">  recordsGroup = [];</span><br><span class="line">  hasRelatedRecords = <span class="literal">false</span>;</span><br><span class="line">  noRecodesInfo: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// pagination input varible</span></span><br><span class="line">  total = <span class="number">0</span>;</span><br><span class="line">  page = <span class="number">1</span>;</span><br><span class="line">  limit = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> recordService: RecordService</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.recordService.recordChange.subscribe(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.records = data;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.records.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.noRecodesInfo = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">this</span>.total = <span class="keyword">this</span>.records.length;</span><br><span class="line">        <span class="keyword">this</span>.recordsGroup = <span class="keyword">this</span>.records.slice(<span class="number">0</span>, <span class="keyword">this</span>.limit);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.noRecodesInfo = <span class="string">'查无相关记录！'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getRecordsGroup() &#123;</span><br><span class="line">    <span class="keyword">this</span>.recordsGroup = <span class="keyword">this</span>.records.slice((<span class="keyword">this</span>.page - <span class="number">1</span>) * <span class="keyword">this</span>.limit, <span class="keyword">this</span>.page * <span class="keyword">this</span>.limit);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  goToPage(n: <span class="built_in">number</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.page = n;</span><br><span class="line">    <span class="keyword">this</span>.getRecordsGroup();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onNext(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.page === <span class="built_in">Math</span>.ceil(<span class="keyword">this</span>.total / <span class="keyword">this</span>.limit)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.page++;</span><br><span class="line">    <span class="keyword">this</span>.getRecordsGroup();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onPrev(): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.page === <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.page--;</span><br><span class="line">    <span class="keyword">this</span>.getRecordsGroup();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考链接：<br><a href="http://www.bentedder.com/create-a-pagination-component-in-angular-4/" target="_blank" rel="noopener">Create a pagination component in Angular 4</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】响应式表单的使用</title>
    <url>/angular-reactive-forms/</url>
    <content><![CDATA[<h4 id="一、在根模块中引入依赖"><a href="#一、在根模块中引入依赖" class="headerlink" title="一、在根模块中引入依赖"></a>一、在根模块中引入依赖</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;FormsModule, ReactiveFormsModule &#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</span><br><span class="line"></span><br><span class="line">imports: [</span><br><span class="line">    FormsModule,</span><br><span class="line">    ReactiveFormsModule</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="二、在组件类中声明formModel"><a href="#二、在组件类中声明formModel" class="headerlink" title="二、在组件类中声明formModel"></a>二、在组件类中声明formModel</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">formModel:FormGroup;</span><br></pre></td></tr></table></figure>

<h4 id="三、在组件模板form处添加属性，使用ng接管"><a href="#三、在组件模板form处添加属性，使用ng接管" class="headerlink" title="三、在组件模板form处添加属性，使用ng接管"></a>三、在组件模板form处添加属性，使用ng接管</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> [<span class="attr">formGroup</span>]=<span class="string">"formModel"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="四、在组件类中构建数据表单模型"><a href="#四、在组件类中构建数据表单模型" class="headerlink" title="四、在组件类中构建数据表单模型"></a>四、在组件类中构建数据表单模型</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> StockFormComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  formModel:FormGroup;</span><br><span class="line">  stockId:<span class="built_in">number</span>;</span><br><span class="line">  stock:Stock;</span><br><span class="line">  categories = [<span class="string">"IT"</span>,<span class="string">"互联网"</span>,<span class="string">"金融"</span>];</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> activatedRoute: ActivatedRoute, </span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> stockService:StockService,</span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> router:Router</span></span><br><span class="line"><span class="params">  </span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.stockId = <span class="keyword">this</span>.activatedRoute.snapshot.params[<span class="string">'id'</span>];</span><br><span class="line">    <span class="keyword">this</span>.stock = <span class="keyword">this</span>.stockService.getStock(<span class="keyword">this</span>.stockId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> fb = <span class="keyword">new</span> FormBuilder;</span><br><span class="line">    <span class="keyword">this</span>.formModel = fb.group(&#123;</span><br><span class="line">      name:[<span class="keyword">this</span>.stock.name, [Validators.required, Validators.minLength(<span class="number">3</span>)]],</span><br><span class="line">      price:[<span class="keyword">this</span>.stock.price, [Validators.required]],</span><br><span class="line">      desc:[<span class="keyword">this</span>.stock.desc],</span><br><span class="line">      categories:fb.array([</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">0</span>])!== <span class="number">-1</span>),</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">1</span>])!== <span class="number">-1</span>),</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">2</span>])!== <span class="number">-1</span>)</span><br><span class="line">      ])</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  cancel()&#123;</span><br><span class="line">    <span class="keyword">this</span>.router.navigateByUrl(<span class="string">'/stock'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  save()&#123;</span><br><span class="line">      <span class="keyword">const</span> chineseCategories = [];</span><br><span class="line">          <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.formModel.value.categories[i])&#123;</span><br><span class="line">              chineseCategories[i] = <span class="keyword">this</span>.categories[i];</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">this</span>.formModel.value.categories = chineseCategories;</span><br><span class="line">          <span class="keyword">this</span>.formModel.value.rating = <span class="keyword">this</span>.stock.rating;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.formModel.value);</span><br><span class="line">          <span class="comment">//this.router.navigateByUrl('/stock');</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="五、在前台模板中绑定对应的数据模型"><a href="#五、在前台模板中绑定对应的数据模型" class="headerlink" title="五、在前台模板中绑定对应的数据模型"></a>五、在前台模板中绑定对应的数据模型</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> [<span class="attr">formGroup</span>]=<span class="string">"formModel"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">formControlName</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"股票名称"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"price"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票价格<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">formControlName</span>=<span class="string">"price"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">placeholder</span>=<span class="string">"股票价格"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票评级<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">app-star</span> [(<span class="attr">rating</span>)]=<span class="string">"stock.rating"</span>&gt;</span><span class="tag">&lt;/<span class="name">app-star</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"desc"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票描述<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">formControlName</span>=<span class="string">"desc"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"desc"</span> <span class="attr">rows</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票类型<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">formArrayName</span>=<span class="string">"categories"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-2"</span> *<span class="attr">ngFor</span>=<span class="string">"let category of categories;let i = index"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">input</span> [<span class="attr">formControlName</span>]=<span class="string">"i"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>&#123;&#123;category&#125;&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- /.box-body --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"cancel()"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"save()"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-info pull-right"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- /.box-footer --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="六、模板绑定校验器，并给出错误提示信息"><a href="#六、模板绑定校验器，并给出错误提示信息" class="headerlink" title="六、模板绑定校验器，并给出错误提示信息"></a>六、模板绑定校验器，并给出错误提示信息</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> [<span class="attr">class.has-error</span>]=<span class="string">"formModel.hasError('required','name') || formModel.hasError('minlength','name')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">formControlName</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"股票名称"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"!formModel.hasError('required','name')"</span>&gt;</span>股票名称是必填项<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"!formModel.hasError('minlength','name')"</span>&gt;</span>请至少输入三个字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> [<span class="attr">class.has-error</span>]=<span class="string">"formModel.hasError('required','price')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"price"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票价格<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">formControlName</span>=<span class="string">"price"</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">placeholder</span>=<span class="string">"股票价格"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"!formModel.hasError('required','price')"</span>&gt;</span>股票价格是必填项<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="七、自定义校验器"><a href="#七、自定义校验器" class="headerlink" title="七、自定义校验器"></a>七、自定义校验器</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">categories:fb.array([</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">0</span>])!== <span class="number">-1</span>),</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">1</span>])!== <span class="number">-1</span>),</span><br><span class="line">        <span class="keyword">new</span> FormControl(<span class="keyword">this</span>.stock.categories.indexOf(<span class="keyword">this</span>.categories[<span class="number">2</span>])!== <span class="number">-1</span>)</span><br><span class="line">      ], <span class="keyword">this</span>.categoriesSelectValidator)</span><br><span class="line">      </span><br><span class="line">      categoriesSelectValidator(control:FormArray)&#123;</span><br><span class="line">            <span class="keyword">let</span> valid:<span class="built_in">boolean</span> = !control.controls.every(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">              <span class="keyword">return</span> item.value === <span class="literal">false</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span>(valid)&#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="keyword">return</span> &#123;categoriesLength:<span class="literal">true</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>绑定前台模板</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> [<span class="attr">class.has-error</span>]=<span class="string">"formModel.hasError('categoriesLength','categories')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票类型<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">formArrayName</span>=<span class="string">"categories"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-2"</span> *<span class="attr">ngFor</span>=<span class="string">"let category of categories;let i = index"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">input</span> [<span class="attr">formControlName</span>]=<span class="string">"i"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>&#123;&#123;category&#125;&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"!formModel.hasError('categoriesLength','categories')"</span>&gt;</span>请至少选择一个类型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="八、细节完善"><a href="#八、细节完善" class="headerlink" title="八、细节完善"></a>八、细节完善</h4><h5 id="1-当表单中存在错误时，保存按钮不能点击"><a href="#1-当表单中存在错误时，保存按钮不能点击" class="headerlink" title="1.当表单中存在错误时，保存按钮不能点击"></a>1.当表单中存在错误时，保存按钮不能点击</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> (<span class="attr">click</span>)=<span class="string">"save()"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-info pull-right"</span> [<span class="attr">disabled</span>]=<span class="string">"formModel.invalid"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-表单初始时，根据状态字段实现不立即报错"><a href="#2-表单初始时，根据状态字段实现不立即报错" class="headerlink" title="2.表单初始时，根据状态字段实现不立即报错"></a>2.表单初始时，根据状态字段实现不立即报错</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> [<span class="attr">class.has-error</span>]=<span class="string">"formModel.get('name').touched &amp;&amp; (formModel.hasError('required','name') || formModel.hasError('minlength','name'))"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>股票名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">formControlName</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"股票名称"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"formModel.get('name').untouched || !formModel.hasError('required','name')"</span>&gt;</span>股票名称是必填项<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span> [<span class="attr">class.hidden</span>]=<span class="string">"!formModel.hasError('minlength','name')"</span>&gt;</span>请至少输入三个字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】路由传参</title>
    <url>/angular-routing-params/</url>
    <content><![CDATA[<h3 id="一、path传参"><a href="#一、path传参" class="headerlink" title="一、path传参"></a>一、path传参</h3><h4 id="1-路由配置（app-routing-module-ts）"><a href="#1-路由配置（app-routing-module-ts）" class="headerlink" title="1.路由配置（app-routing.module.ts）"></a>1.路由配置（app-routing.module.ts）</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;NgModule&#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Routes, RouterModule&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;AppComponent&#125; <span class="keyword">from</span> <span class="string">'./app.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;LoginComponent&#125; <span class="keyword">from</span> <span class="string">'./login/login.component'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;UserComponent&#125; <span class="keyword">from</span> <span class="string">'./user/user.component'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123;path: <span class="string">''</span>, component: LoginComponent&#125;,</span><br><span class="line">  &#123;path: <span class="string">'login'</span>, component: LoginComponent&#125;,</span><br><span class="line">  &#123;path: <span class="string">'user/:id'</span>, component: UserComponent&#125; <span class="comment">//id段传参</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  imports: [RouterModule.forRoot(routes)],</span><br><span class="line">  exports: [RouterModule]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="2-跳转链接配置-app-component-html"><a href="#2-跳转链接配置-app-component-html" class="headerlink" title="2.跳转链接配置(app.component.html)"></a>2.跳转链接配置(app.component.html)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['/login']"</span>&gt;</span>登陆页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['/user',1]"</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-outlet</span>&gt;</span><span class="tag">&lt;/<span class="name">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>或使用指令跳转配置</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> (<span class="attr">click</span>)=<span class="string">"toUser()"</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppComponent &#123;</span><br><span class="line">  title = <span class="string">'app'</span>;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> router:Router</span>)&#123;&#125;</span><br><span class="line">  toUser()&#123;</span><br><span class="line">    <span class="keyword">this</span>.router.navigate([<span class="string">'/user'</span>,<span class="number">1</span>]);<span class="comment">//or this.router.navigateByUrl(['/user/1'])</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-目的地组件类接收参数（user-component-ts）"><a href="#3-目的地组件类接收参数（user-component-ts）" class="headerlink" title="3.目的地组件类接收参数（user.component.ts）"></a>3.目的地组件类接收参数（user.component.ts）</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> activatedRoute: ActivatedRoute</span>) &#123;</span><br><span class="line">  &#125;<span class="comment">//实例化</span></span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.id = <span class="keyword">this</span>.activatedRoute.snapshot.params[<span class="string">'id'</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="二、query传参"><a href="#二、query传参" class="headerlink" title="二、query传参"></a>二、query传参</h3><h4 id="1-跳转设置queryParams参数（user-component-html）"><a href="#1-跳转设置queryParams参数（user-component-html）" class="headerlink" title="1.跳转设置queryParams参数（user.component.html）"></a>1.跳转设置queryParams参数（user.component.html）</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['/user']"</span> [<span class="attr">queryParams</span>]=<span class="string">"&#123;id:1,name:'user1'&#125;"</span>&gt;</span>用户1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>._router.nagivate([<span class="string">'/user'</span>],&#123;queryParams:&#123;&#123;id:<span class="number">1</span>,name:<span class="string">'user1'</span>&#125;&#125;&#125;);</span><br><span class="line"><span class="keyword">this</span>._router.navigateByUrl(<span class="string">'/user?id=1&amp;name=user1'</span>)</span><br></pre></td></tr></table></figure>
<h4 id="2-目的地组件类接收参数（使用参数订阅）"><a href="#2-目的地组件类接收参数（使用参数订阅）" class="headerlink" title="2.目的地组件类接收参数（使用参数订阅）"></a>2.目的地组件类接收参数（使用参数订阅）</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  id: <span class="built_in">any</span>;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> activatedRoute:ActivatedRoute</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.activatedRoute.queryParams.subscribe(<span class="function"><span class="params">params</span>  =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.id = params[<span class="string">'id'</span>];</span><br><span class="line">      <span class="built_in">console</span>.log(params);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="三、路由配置中data传参"><a href="#三、路由配置中data传参" class="headerlink" title="三、路由配置中data传参"></a>三、路由配置中data传参</h3><h4 id="1-路由配置（app-routing-module-ts）-1"><a href="#1-路由配置（app-routing-module-ts）-1" class="headerlink" title="1.路由配置（app-routing.module.ts）"></a>1.路由配置（app-routing.module.ts）</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;path: <span class="string">'user'</span>, component: UserComponent, data: [&#123;id: <span class="number">1</span>&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-目的地组件类接收参数"><a href="#2-目的地组件类接收参数" class="headerlink" title="2.目的地组件类接收参数"></a>2.目的地组件类接收参数</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  id: <span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> activatedRoute: ActivatedRoute</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.id = <span class="keyword">this</span>.activatedRoute.snapshot.data[<span class="number">0</span>][<span class="string">'id'</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、使用参数订阅解决同一页面内传参"><a href="#四、使用参数订阅解决同一页面内传参" class="headerlink" title="四、使用参数订阅解决同一页面内传参"></a>四、使用参数订阅解决同一页面内传参</h3><h4 id="1-链接跳转（user-component-html）"><a href="#1-链接跳转（user-component-html）" class="headerlink" title="1.链接跳转（user.component.html）"></a>1.链接跳转（user.component.html）</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['/user',1]"</span>&gt;</span>用户1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['/user',2]"</span>&gt;</span>用户2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-本页面组件类设置参数订阅（user-component-ts）"><a href="#2-本页面组件类设置参数订阅（user-component-ts）" class="headerlink" title="2.本页面组件类设置参数订阅（user.component.ts）"></a>2.本页面组件类设置参数订阅（user.component.ts）</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  id: <span class="built_in">any</span>;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> activatedRoute: ActivatedRoute</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.activatedRoute.params.subscribe(<span class="function"><span class="params">params</span>  =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.id = params[<span class="string">'id'</span>];</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】路由归纳</title>
    <url>/angular-routing-summary/</url>
    <content><![CDATA[<h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><table>
<thead>
<tr>
<th align="left">名词</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Routes</td>
<td align="left">路由配置，保存着哪个URL对应展示哪个组件，以及在哪个RouterOutlet中展示组件</td>
</tr>
<tr>
<td align="left">RouterOutlet</td>
<td align="left">在HTML中标记路由内容呈现位置的占位符</td>
</tr>
<tr>
<td align="left">Router</td>
<td align="left">负责在运行时执行路由的对象，可以通过调用其navigate()和navigateByUrl()方法来导航到一个指定的路由</td>
</tr>
<tr>
<td align="left">RouterLink</td>
<td align="left">在HTML中声明路由导航用的指令</td>
</tr>
<tr>
<td align="left">ActivatedRoute</td>
<td align="left">当前激活的路由对象，保存着当前路由的信息，如路由地址、路由参数等</td>
</tr>
<tr>
<td align="left"><a id="more"></a></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">### 二、路由基本配置</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">#### 1.设置路由配置文件</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">##### （1）创建项目时生成：</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>ng new xxx --routing</code>会自动生成app-routing.module.ts文件</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">##### （2）手动添加：可将路由信息手动添加到app.module.ts根模块中，使之生效</td>
<td align="left"></td>
</tr>
</tbody></table>
<h4 id="2-添加路由策略"><a href="#2-添加路由策略" class="headerlink" title="2.添加路由策略"></a>2.添加路由策略</h4><p>以添加到根模块为例：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;RouterModule, Routes&#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123;path: <span class="string">''</span>, redirectTo: <span class="string">'/dashboard'</span>, pathMatch: <span class="string">'full'</span>&#125;,</span><br><span class="line">  &#123;path: <span class="string">'dashboard'</span>, component: DashboardComponent&#125;,</span><br><span class="line">  &#123;path: <span class="string">'stock'</span>, component: StockManageComponent&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">imports: [</span><br><span class="line">    BrowserModule,</span><br><span class="line">    RouterModule.forRoot(routes)</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure>

<h4 id="3-在模板中使用路由跳转"><a href="#3-在模板中使用路由跳转" class="headerlink" title="3.在模板中使用路由跳转"></a>3.在模板中使用路由跳转</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&lt;a [routerLink]=<span class="string">"['/dashboard']"</span>&gt;首页&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">&lt;a [routerLink]="['/stock']"&gt;股票管理&lt;/</span>a&gt;</span><br><span class="line">&lt;router-outlet&gt;&lt;<span class="regexp">/router-outlet&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="三、路由传参"><a href="#三、路由传参" class="headerlink" title="三、路由传参"></a>三、路由传参</h3><p>参考 <a href="https://roubin.me/angular-routing-params/">此篇文章</a></p>
<h3 id="四、重定向路由、默认路由、404路由"><a href="#四、重定向路由、默认路由、404路由" class="headerlink" title="四、重定向路由、默认路由、404路由"></a>四、重定向路由、默认路由、404路由</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123;path: <span class="string">''</span>, redirectTo: <span class="string">'/dashboard'</span>, pathMatch: <span class="string">'full'</span>&#125;,</span><br><span class="line">  &#123;path: <span class="string">'dashboard'</span>, component: DashboardComponent&#125;,</span><br><span class="line">  &#123;path: <span class="string">'stock'</span>, component: StockManageComponent&#125;,</span><br><span class="line">  &#123;path: <span class="string">'**'</span>, component: Code404Component&#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h3 id="五、子路由"><a href="#五、子路由" class="headerlink" title="五、子路由"></a>五、子路由</h3><h4 id="1-设置子路由策略"><a href="#1-设置子路由策略" class="headerlink" title="1.设置子路由策略"></a>1.设置子路由策略</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;path: <span class="string">'user'</span>, component: UserComponent,</span><br><span class="line">  children:[</span><br><span class="line">    &#123;path: <span class="string">''</span>, component: UserInfoComponent&#125;,</span><br><span class="line">    &#123;path: <span class="string">'usermanager'</span>, component: UserManagerComponent&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-在父组件模板中使用子路由跳转-user-component-html"><a href="#2-在父组件模板中使用子路由跳转-user-component-html" class="headerlink" title="2.在父组件模板中使用子路由跳转(user.component.html)"></a>2.在父组件模板中使用子路由跳转(user.component.html)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> [<span class="attr">routerLink</span>]=<span class="string">"['./usermanager']"</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-outlet</span>&gt;</span><span class="tag">&lt;/<span class="name">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="六、辅助（附属）路由"><a href="#六、辅助（附属）路由" class="headerlink" title="六、辅助（附属）路由"></a>六、辅助（附属）路由</h3><h4 id="1-添加路由信息"><a href="#1-添加路由信息" class="headerlink" title="1.添加路由信息"></a>1.添加路由信息</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;path: <span class="string">''</span>, component: UserInfoComponent&#125;,</span><br><span class="line">&#123;path: <span class="string">'usermanager'</span>, component: UserManagerComponent, outlet:<span class="string">'aux'</span>&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-在模板中使用"><a href="#2-在模板中使用" class="headerlink" title="2.在模板中使用"></a>2.在模板中使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  [<span class="attr">routerLink</span>]=<span class="string">"[&#123;outlets:&#123;aux:'usermanager'&#125;&#125;]"</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-outlet</span>&gt;</span><span class="tag">&lt;/<span class="name">router-outlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-outlet</span> <span class="attr">name</span>=<span class="string">"aux"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="七、路由守卫（拦截）"><a href="#七、路由守卫（拦截）" class="headerlink" title="七、路由守卫（拦截）"></a>七、路由守卫（拦截）</h3><h4 id="1-CanActivate-处理导航到某路由的情况"><a href="#1-CanActivate-处理导航到某路由的情况" class="headerlink" title="1.CanActivate:处理导航到某路由的情况"></a>1.CanActivate:处理导航到某路由的情况</h4><h5 id="（1）生成CanActivateGuard服务，并导入根模块的providers中"><a href="#（1）生成CanActivateGuard服务，并导入根模块的providers中" class="headerlink" title="（1）生成CanActivateGuard服务，并导入根模块的providers中"></a>（1）生成CanActivateGuard服务，并导入根模块的providers中</h5><p><code>ng g service can-activate-guard</code><br><code>providers: [CanActivateGuardComponent]</code></p>
<h5 id="2-配置CanActivateGuard服务类逻辑"><a href="#2-配置CanActivateGuard服务类逻辑" class="headerlink" title="(2)配置CanActivateGuard服务类逻辑"></a>(2)配置CanActivateGuard服务类逻辑</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CanActivateGuardComponent <span class="keyword">implements</span> CanActivate &#123;</span><br><span class="line">  canActivate()&#123;</span><br><span class="line">    <span class="keyword">let</span> hasPermission:<span class="built_in">boolean</span> = <span class="built_in">Math</span>.random() &lt; <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">if</span>(!hasPermission)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"您无权访问用户中心"</span>);<span class="comment">//false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hasPermission;<span class="comment">//true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="3-应用到相关路由上"><a href="#3-应用到相关路由上" class="headerlink" title="(3)应用到相关路由上"></a>(3)应用到相关路由上</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;path: <span class="string">'user'</span>, component: UserComponent,canActivate:[CanActivateGuardComponent]&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-CanDeactivate-处理从当前路由离开的情况"><a href="#2-CanDeactivate-处理从当前路由离开的情况" class="headerlink" title="2.CanDeactivate:处理从当前路由离开的情况"></a>2.CanDeactivate:处理从当前路由离开的情况</h4><h5 id="1）生成CanDeactivateGuard服务，并导入根模块的providers中"><a href="#1）生成CanDeactivateGuard服务，并导入根模块的providers中" class="headerlink" title="(1）生成CanDeactivateGuard服务，并导入根模块的providers中"></a>(1）生成CanDeactivateGuard服务，并导入根模块的providers中</h5><p><code>ng g service can-deactivate-guard</code><br><code>providers: [CanDeactivateGuardService]</code></p>
<h5 id="2-配置CanDeactivateGuard服务类逻辑"><a href="#2-配置CanDeactivateGuard服务类逻辑" class="headerlink" title="(2)配置CanDeactivateGuard服务类逻辑"></a>(2)配置CanDeactivateGuard服务类逻辑</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CanDeactivateGuardService <span class="keyword">implements</span> CanDeactivate&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">  canDeactivate(component: <span class="built_in">any</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(component.isModified())&#123;<span class="comment">//调用类实例的方法</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-应用到相关路由上-1"><a href="#3-应用到相关路由上-1" class="headerlink" title="(3)应用到相关路由上"></a>(3)应用到相关路由上</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;path: <span class="string">'user'</span>, component: UserComponent,</span><br><span class="line"> canActivate:[CanActivateGuardComponent],</span><br><span class="line"> canDeactivate:[CanDeactivateGuardService]&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-Resolve-确认数据获取成功后，再激活路由，进入组件"><a href="#3-Resolve-确认数据获取成功后，再激活路由，进入组件" class="headerlink" title="3.Resolve:确认数据获取成功后，再激活路由，进入组件"></a>3.Resolve:确认数据获取成功后，再激活路由，进入组件</h4><h5 id="1）生成resolve服务，并导入根模块的providers中"><a href="#1）生成resolve服务，并导入根模块的providers中" class="headerlink" title="(1）生成resolve服务，并导入根模块的providers中"></a>(1）生成resolve服务，并导入根模块的providers中</h5><h5 id="2-配置服务类的逻辑"><a href="#2-配置服务类的逻辑" class="headerlink" title="(2) 配置服务类的逻辑"></a>(2) 配置服务类的逻辑</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router &#125; <span class="keyword">from</span> <span class="string">"@angular/router"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Data &#125; <span class="keyword">from</span> <span class="string">"../cn/cn.component"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">"@angular/core"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> DataResolve <span class="keyword">implements</span> Resolve&lt;Data&gt;&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> router: Router</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) &#123;</span><br><span class="line">        <span class="keyword">let</span> id = route.params[<span class="string">'id'</span>];</span><br><span class="line">        <span class="keyword">if</span>(id == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Data(<span class="number">1</span>, <span class="string">'IBM'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.router.navigate([<span class="string">'/home'</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="（3）配置路由应用resolve"><a href="#（3）配置路由应用resolve" class="headerlink" title="（3）配置路由应用resolve"></a>（3）配置路由应用resolve</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">    path: <span class="string">'home'</span>, </span><br><span class="line">    component: HomeComponent,</span><br><span class="line">    resolve: &#123;</span><br><span class="line">      data: DataResolve</span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<h5 id="4-目标组件类获取数据"><a href="#4-目标组件类获取数据" class="headerlink" title="(4)目标组件类获取数据"></a>(4)目标组件类获取数据</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HomeComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  <span class="keyword">private</span> info: <span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> routeInfo: ActivatedRoute</span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.routInfo.data.subscribe(<span class="function">(<span class="params">data: &#123;info: Data&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.info = data.info;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="八、根据不同路由，显示不同标题"><a href="#八、根据不同路由，显示不同标题" class="headerlink" title="八、根据不同路由，显示不同标题"></a>八、根据不同路由，显示不同标题</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'rxjs/add/operator/filter'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ContentComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  pageTitle = <span class="string">''</span>;</span><br><span class="line">  pageDesc = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">public</span> router:Router</span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.router.events.filter(<span class="function"><span class="params">event</span> =&gt;</span> event <span class="keyword">instanceof</span> NavigationEnd)</span><br><span class="line">                          .subscribe(<span class="function">(<span class="params">event:NavigationEnd</span>)=&gt;</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(event.url == <span class="string">'/dashboard'</span>)&#123;</span><br><span class="line">                              <span class="keyword">this</span>.pageTitle = <span class="string">'这里是首页'</span>;</span><br><span class="line">                              <span class="keyword">this</span>.pageDesc = <span class="string">'天天赚钱'</span>;</span><br><span class="line">                            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(event.url.startsWith(<span class="string">'/stock'</span>))&#123;</span><br><span class="line">                              <span class="keyword">this</span>.pageTitle = <span class="string">'股票信息管理'</span>;</span><br><span class="line">                              <span class="keyword">this</span>.pageDesc = <span class="string">'各方信息汇总'</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                          &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考链接：<br><a href="http://www.xinxiaoyang.com/programming/2017-11-30-angular-router/" target="_blank" rel="noopener">Angular2 路由</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】响应式编程与自定义管道</title>
    <url>/angular-rxjs-pipe/</url>
    <content><![CDATA[<h3 id="实现功能：根据用户输入内容，过滤显示匹配的信息"><a href="#实现功能：根据用户输入内容，过滤显示匹配的信息" class="headerlink" title="实现功能：根据用户输入内容，过滤显示匹配的信息"></a>实现功能：根据用户输入内容，过滤显示匹配的信息</h3><h4 id="1-创建自定义pipe"><a href="#1-创建自定义pipe" class="headerlink" title="1.创建自定义pipe"></a>1.创建自定义pipe</h4><p><code>ng g pipe stock/stockFilter</code></p>
<a id="more"></a>
<p>stock-filter.pipe.ts</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Pipe, PipeTransform &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pipe</span>(&#123;</span><br><span class="line">  name: <span class="string">'stockFilter'</span><span class="comment">//使用时的名称</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> StockFilterPipe <span class="keyword">implements</span> PipeTransform &#123;</span><br><span class="line"></span><br><span class="line">  transform(list: <span class="built_in">any</span>[], field: <span class="built_in">string</span>, keyword: <span class="built_in">string</span>): <span class="built_in">any</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(!field || !keyword)&#123;</span><br><span class="line">      <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list.filter(<span class="function"><span class="params">item</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">let</span> itemValue = item[field].toLowerCase();</span><br><span class="line">      <span class="keyword">return</span> itemValue.indexOf(keyword) &gt;= <span class="number">0</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-根模块中导入表单、响应式、pipe组件"><a href="#2-根模块中导入表单、响应式、pipe组件" class="headerlink" title="2.根模块中导入表单、响应式、pipe组件"></a>2.根模块中导入表单、响应式、pipe组件</h4><p>app.module.ts</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;FormsModule, ReactiveFormsModule &#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; StockFilterPipe &#125; <span class="keyword">from</span> <span class="string">'./stock/stock-filter.pipe'</span>;</span><br><span class="line"></span><br><span class="line">declarations: [StockFilterPipe],</span><br><span class="line">imports:[ FormsModule,ReactiveFormsModule]</span><br></pre></td></tr></table></figure>

<h4 id="3-在模板中添加FormControl标签、应用管道"><a href="#3-在模板中添加FormControl标签、应用管道" class="headerlink" title="3.在模板中添加FormControl标签、应用管道"></a>3.在模板中添加FormControl标签、应用管道</h4><p>stock-manager.component.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> [<span class="attr">formControl</span>]=<span class="string">"nameFilter"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"table_search"</span> <span class="attr">class</span>=<span class="string">"form-control pull-right"</span> <span class="attr">placeholder</span>=<span class="string">"股票名称"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> *<span class="attr">ngFor</span>=<span class="string">"let stock of stocks | stockFilter: 'name' : keyword ; let i = index"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i +1&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;stock.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;stock.price&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">app-star</span> [<span class="attr">rating</span>]=<span class="string">"stock.rating"</span>&gt;</span><span class="tag">&lt;/<span class="name">app-star</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-warning btn-xs"</span> (<span class="attr">click</span>)=<span class="string">"update(stock)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-pencil"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-xs"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-remove"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-组件类中使用rxjs监控用户输入值的变化"><a href="#4-组件类中使用rxjs监控用户输入值的变化" class="headerlink" title="4.组件类中使用rxjs监控用户输入值的变化"></a>4.组件类中使用rxjs监控用户输入值的变化</h4><p>stock-manager.component.ts</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; FormControl &#125; <span class="keyword">from</span> <span class="string">'@angular/forms'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'rxjs/Rx'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> StockManageComponent <span class="keyword">implements</span> OnInit &#123;</span><br><span class="line">  <span class="keyword">private</span> stocks: <span class="built_in">Array</span>&lt;Stock&gt;;</span><br><span class="line">  <span class="keyword">private</span> nameFilter:FormControl = <span class="keyword">new</span> FormControl();</span><br><span class="line">  <span class="keyword">private</span> keyword:<span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> router: Router, <span class="keyword">private</span> stockService: StockService</span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    <span class="keyword">this</span>.stocks = <span class="keyword">this</span>.stockService.getStocks();</span><br><span class="line">    <span class="keyword">this</span>.nameFilter.valueChanges</span><br><span class="line">    .debounceTime(<span class="number">500</span>)</span><br><span class="line">    .subscribe(<span class="function"><span class="params">value</span> =&gt;</span> <span class="keyword">this</span>.keyword =value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  create() &#123;</span><br><span class="line">    <span class="keyword">this</span>.router.navigateByUrl(<span class="string">'/stock/0'</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  update(stock) &#123;</span><br><span class="line">    <span class="keyword">this</span>.router.navigateByUrl(<span class="string">'/stock/'</span> + stock.id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】async/await</title>
    <url>/async-await/</url>
    <content><![CDATA[<h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将解决方法封装到 async 函数中</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待第一个 HTTP 请求并打印出结果</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">await</span> rp(<span class="string">'http://example.com/'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建两个 HTTP 请求，不等它们执行完 —— 让他们同时执行</span></span><br><span class="line">    <span class="keyword">const</span> call2Promise = rp(<span class="string">'http://example.com/'</span>);  <span class="comment">// Does not wait!</span></span><br><span class="line">    <span class="keyword">const</span> call3Promise = rp(<span class="string">'http://example.com/'</span>);  <span class="comment">// Does not wait!</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建完以后 —— 等待它们都执行完</span></span><br><span class="line">    <span class="keyword">const</span> response2 = <span class="keyword">await</span> call2Promise;</span><br><span class="line">    <span class="keyword">const</span> response3 = <span class="keyword">await</span> call3Promise;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(response2);</span><br><span class="line">    <span class="built_in">console</span>.log(response3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用这一 async 函数</span></span><br><span class="line">solution().then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Finished'</span>));</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="一、执行顺序"><a href="#一、执行顺序" class="headerlink" title="一、执行顺序"></a>一、执行顺序</h4><h5 id="1-继发执行"><a href="#1-继发执行" class="headerlink" title="1.继发执行"></a>1.继发执行</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例一</span></span><br><span class="line"><span class="keyword">let</span> foo = <span class="keyword">await</span> getFoo();</span><br><span class="line"><span class="keyword">let</span> bar = <span class="keyword">await</span> getBar();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例二</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logInOrder</span>(<span class="params">urls</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> url <span class="keyword">of</span> urls) &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> fetch(url);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">await</span> response.text());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-并发执行"><a href="#2-并发执行" class="headerlink" title="2.并发执行"></a>2.并发执行</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例一</span></span><br><span class="line"><span class="keyword">let</span> [foo, bar] = <span class="keyword">await</span> <span class="built_in">Promise</span>.all([getFoo(), getBar()]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例二</span></span><br><span class="line"><span class="keyword">let</span> fooPromise = getFoo();</span><br><span class="line"><span class="keyword">let</span> barPromise = getBar();</span><br><span class="line"><span class="keyword">let</span> foo = <span class="keyword">await</span> fooPromise;</span><br><span class="line"><span class="keyword">let</span> bar = <span class="keyword">await</span> barPromise;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例三</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">dbFuc</span>(<span class="params">db</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> docs = [&#123;&#125;, &#123;&#125;, &#123;&#125;];</span><br><span class="line">  <span class="keyword">let</span> promises = docs.map(<span class="function">(<span class="params">doc</span>) =&gt;</span> db.post(doc));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> results = <span class="keyword">await</span> <span class="built_in">Promise</span>.all(promises);</span><br><span class="line">  <span class="built_in">console</span>.log(results);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例四</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logInOrder</span>(<span class="params">urls</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 并发读取远程URL</span></span><br><span class="line">  <span class="keyword">const</span> textPromises = urls.map(<span class="keyword">async</span> url =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> fetch(url);</span><br><span class="line">    <span class="keyword">return</span> response.text();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 按次序输出</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> textPromise <span class="keyword">of</span> textPromises) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">await</span> textPromise);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例五</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">A2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> res = [];</span><br><span class="line">  <span class="keyword">let</span> reqs = [createPromise(), createPromise(), createPromise()];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; reqs.length; i++) &#123;</span><br><span class="line">    res[i] = <span class="keyword">await</span> reqs[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Data'</span>, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例六</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncAwaitLoopsParallel</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> api = <span class="keyword">new</span> Api()</span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> api.getUser()</span><br><span class="line">  <span class="keyword">const</span> friends = <span class="keyword">await</span> api.getFriends(user.id)</span><br><span class="line">  <span class="keyword">const</span> friendPromises = friends.map(<span class="function"><span class="params">friend</span> =&gt;</span> api.getFriends(friend.id))</span><br><span class="line">  <span class="keyword">const</span> moreFriends = <span class="keyword">await</span> <span class="built_in">Promise</span>.all(friendPromises)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'asyncAwaitLoopsParallel'</span>, moreFriends)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例七</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getLotsOfUserDataFaster</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userPromises = <span class="built_in">Array</span>(<span class="number">10</span>).fill(getUserInfo())</span><br><span class="line">    <span class="keyword">const</span> users = <span class="keyword">await</span> <span class="built_in">Promise</span>.all(userPromises)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'getLotsOfUserDataFaster'</span>, users)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="二、错误处理："><a href="#二、错误处理：" class="headerlink" title="二、错误处理："></a>二、错误处理：</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> promiseResult = <span class="keyword">await</span> <span class="built_in">Promise</span>.reject(<span class="string">'Error'</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS防火墙开启端口</title>
    <url>/centos-firewall-open-port/</url>
    <content><![CDATA[<h5 id="1-切换root"><a href="#1-切换root" class="headerlink" title="1.切换root"></a>1.切换root</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su -</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-查看当前防火墙开启的端口"><a href="#2-查看当前防火墙开启的端口" class="headerlink" title="2.查看当前防火墙开启的端口"></a>2.查看当前防火墙开启的端口</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure>

<h5 id="3-永久开启指定端口"><a href="#3-永久开启指定端口" class="headerlink" title="3.永久开启指定端口"></a>3.永久开启指定端口</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=8099/tcp</span><br></pre></td></tr></table></figure>

<h5 id="4-重启防火墙"><a href="#4-重启防火墙" class="headerlink" title="4.重启防火墙"></a>4.重启防火墙</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>firewall</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器缓存策略</title>
    <url>/browser-cache-rule/</url>
    <content><![CDATA[<p><img src="../images/browser-cache.jpeg" alt=""></p>
<a id="more"></a>

<h4 id="一、过程"><a href="#一、过程" class="headerlink" title="一、过程"></a>一、过程</h4><h5 id="1-浏览器发送第一次请求：不缓存，服务端根据设定的缓存策略，返回相应的header：cache-control，expires，last-Modified，ETag。"><a href="#1-浏览器发送第一次请求：不缓存，服务端根据设定的缓存策略，返回相应的header：cache-control，expires，last-Modified，ETag。" class="headerlink" title="1.浏览器发送第一次请求：不缓存，服务端根据设定的缓存策略，返回相应的header：cache-control，expires，last-Modified，ETag。"></a>1.浏览器发送第一次请求：不缓存，服务端根据设定的缓存策略，返回相应的header：cache-control，expires，last-Modified，ETag。</h5><h5 id="2-浏览器发送第二次请求："><a href="#2-浏览器发送第二次请求：" class="headerlink" title="2.浏览器发送第二次请求："></a>2.浏览器发送第二次请求：</h5><p><strong>强缓存阶段：</strong></p>
<ul>
<li>有cache-control且不过期。是：返回本地磁盘缓存，状态值200(from cache)；否：走下一步</li>
<li>有expires且不过期。是：返回本地磁盘缓存，状态值200(from cache)；否：走下一步</li>
</ul>
<p><strong>协商缓存阶段</strong></p>
<ul>
<li>有Etag。是的话请求头添加If-None-Match，值就是上次返回的Etag值，然后发送给服务端。服务端对比If-None-Match与现有的Etag值是否一样；一样的话只返回header，状态码304，浏览器从本地磁盘获取缓存信息；不一样走正常流程，返回header+body，状态码200。否：走下一步</li>
<li>有last-Modified。是的话添加请求头If-Modified-Since，值是上次返回的last-Modified，然后发送给服务端。服务端对比If-Modified-Since与现有的是否一样；一样的话返回只返回header，状态码304，浏览器从本地磁盘获取缓存信息；不一样走正常流程，返回header+body，状态码200。否：走下一步</li>
<li>没有缓存，正常请求</li>
</ul>
<h4 id="二、HTTP缓存控制头字段"><a href="#二、HTTP缓存控制头字段" class="headerlink" title="二、HTTP缓存控制头字段"></a>二、HTTP缓存控制头字段</h4><h5 id="1-Expires-响应头"><a href="#1-Expires-响应头" class="headerlink" title="1.Expires(响应头)"></a>1.Expires(响应头)</h5><p>包含日期/时间， 即在此时候之后，响应过期。无效的日期，比如 0, 代表着过去的日期，即该资源已经过期。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Expires: Wed, 21 Oct 2015 07:28:00 GMT</span><br></pre></td></tr></table></figure>

<h5 id="2-Cache-Control-请求-响应头-：优先级高于Expires"><a href="#2-Cache-Control-请求-响应头-：优先级高于Expires" class="headerlink" title="2.Cache-Control(请求/响应头)：优先级高于Expires"></a>2.Cache-Control(请求/响应头)：优先级高于Expires</h5><p>被用于在http请求和响应中，通过指定指令来实现缓存机制。缓存指令是单向的，这意味着在请求中设置的指令，不一定被包含在响应中。</p>
<p>常用的指令如下:</p>
<p><strong>public:</strong> 该响应可以被任何对象缓存，该对象可以是中间代理或者是发送本请求的客户端。</p>
<p><strong>private:</strong> 该响应可以被单个用户缓存，不可以被任何中间对象（如中间代理器）缓存。</p>
<p><strong>no-cache:</strong> 当客户缓存了此响应，然后在再次使用此缓存之前，必须向服务器验证此缓存的有效性。值得注意的是，此指令也可以出现在请求头中。当此指令出现在请求头中时，表示客户端强制重新请求最新的服务器资源，而不使用缓存。</p>
<p><strong>no-store:</strong> 任何对象（代理器和个人浏览器）不可以缓存该响应。</p>
<p><strong>max-age:</strong> 在指定的时间内，客户端不应该再向浏览器请求该响应，而应该使用本地缓存</p>
<p><strong>s-maxage:</strong> 覆盖max-age或者Expires头，但是仅适用于共享缓存(比如各个代理)，私有缓存会忽略它。</p>
<p><strong>must-revalidate:</strong> 一旦资源过期（比如已经超过max-age），在成功向原始服务器验证之前，缓存不能用该资源响应后续请求。</p>
<h5 id="3-Pragma-响应头"><a href="#3-Pragma-响应头" class="headerlink" title="3.Pragma(响应头)"></a>3.Pragma(响应头)</h5><p>HTTP/1.0标准中定义，效果跟Cache-Control: no-cache相同，通常定义Pragma以向后兼容基于HTTP/1.0的客户端。</p>
<h5 id="4-Last-Modified-响应头"><a href="#4-Last-Modified-响应头" class="headerlink" title="4.Last-Modified(响应头)"></a>4.Last-Modified(响应头)</h5><p>其值为一个GMT日期（时间戳），指示请求的资源最后更改时间</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Last-Modified: Wed, 21 Oct 2015 07:28:00 GMT</span><br></pre></td></tr></table></figure>

<h5 id="5-ETag-响应头-：优先级高于Last-Modified"><a href="#5-ETag-响应头-：优先级高于Last-Modified" class="headerlink" title="5.ETag(响应头)：优先级高于Last-Modified"></a>5.ETag(响应头)：优先级高于Last-Modified</h5><p>全称为entity-tag，是请求的文件的一个标识符，当文件被修改时，该标识符也会发生变化</p>
<p>如果用户再次访问给定的URL（设有ETag字段），显示资源过期了且不可用，客户端就发送值为ETag的If-None-Match header字段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If-None-Match: &quot;33a64df551425fcc55e4d42a148795d9f25f89d4&quot;</span><br></pre></td></tr></table></figure>
<p>服务器将客户端的ETag（作为If-None-Match字段的值一起发送）与其当前版本的资源的ETag进行比较，如果两个值匹配（即资源未更改），服务器将返回不带任何内容的304未修改状态，告诉客户端缓存版本可用（新鲜）。</p>
<h5 id="6-If-None-Match-请求头-：优先级高于If-Modified-Since"><a href="#6-If-None-Match-请求头-：优先级高于If-Modified-Since" class="headerlink" title="6.If-None-Match(请求头)：优先级高于If-Modified-Since"></a>6.If-None-Match(请求头)：优先级高于If-Modified-Since</h5><p>验证缓存的资源的 ETag 是否和服务器上的资源的 ETag 相匹配。匹配时，服务器返回304状态码。否则服务器返回200状态码，并向客户端发送请求的资源文件。</p>
<h5 id="7-If-Modified-Since-请求头"><a href="#7-If-Modified-Since-请求头" class="headerlink" title="7.If-Modified-Since(请求头)"></a>7.If-Modified-Since(请求头)</h5><p>验证缓存的资源在一个给定的时间后是否被修改过，此给定的时间来自服务器返回的 Last-Modified 响应头。如果资源在此时间后被修改过了，服务器会返回304状态码。否则服务器将返回200状态码，并向客户端发送请求的资源文件。</p>
<h4 id="三、缓存寿命计算"><a href="#三、缓存寿命计算" class="headerlink" title="三、缓存寿命计算"></a>三、缓存寿命计算</h4><p>对于含有特定头信息的请求，会去计算缓存寿命。比如Cache-control: max-age=N的头，相应的缓存的寿命就是N。通常情况下，对于不含这个属性的请求则会去查看是否包含Expires属性，通过比较Expires的值和头里面Date属性的值来判断是否缓存还有效。如果max-age和expires属性都没有，找找头里的Last-Modified信息。如果有，缓存的寿命就等于头里面Date的值减去Last-Modified的值除以10</p>
<p>参考：</p>
<ul>
<li><a href="https://juejin.im/post/5df886896fb9a0161104cd45" target="_blank" rel="noopener">浏览器缓存策略与webpack持久化缓存</a></li>
<li><a href="https://blog.wildcoder.me/2019/10/27/http-cache/" target="_blank" rel="noopener">HTTP缓存机制详解</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noopener">MDN Cache-Control</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching_FAQ" target="_blank" rel="noopener">MDN Caching_FAQ</a></li>
<li><a href="https://tools.ietf.org/html/rfc7234" target="_blank" rel="noopener">RFC7234</a></li>
</ul>
]]></content>
      <categories>
        <category>Cache</category>
      </categories>
      <tags>
        <tag>cache</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 6.x在MacOS/CentOS 7上的安装与配置</title>
    <url>/centos-redis-install/</url>
    <content><![CDATA[<p>环境：</p>
<blockquote>
<p>redis:6.2.5</p>
<p>macOS:10.15.7</p>
<p>CentOS:7</p>
</blockquote>
<h3 id="一、MacOS下安装与配置"><a href="#一、MacOS下安装与配置" class="headerlink" title="一、MacOS下安装与配置"></a>一、MacOS下安装与配置</h3><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install redis</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置文件：/usr/<span class="built_in">local</span>/etc/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改端口</span></span><br><span class="line">Port 6379</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 密码设置</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>

<h4 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h4><h5 id="a-启动redis服务"><a href="#a-启动redis服务" class="headerlink" title="a.启动redis服务"></a>a.启动redis服务</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew services start redis</span><br></pre></td></tr></table></figure>

<h5 id="b-卸载redis"><a href="#b-卸载redis" class="headerlink" title="b.卸载redis"></a>b.卸载redis</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew uninstall redis rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist</span><br></pre></td></tr></table></figure>


<h3 id="二、CentOS-7下安装与配置"><a href="#二、CentOS-7下安装与配置" class="headerlink" title="二、CentOS 7下安装与配置"></a>二、CentOS 7下安装与配置</h3><h4 id="1-升级gcc"><a href="#1-升级gcc" class="headerlink" title="1.升级gcc"></a>1.升级gcc</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看版本，redis6(redis 5不需要)需要较高版本的gcc编译</span></span><br><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 升级</span></span><br><span class="line">yum -y install centos-release-scl</span><br><span class="line">yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br><span class="line">scl enable devtoolset-9 bash</span><br><span class="line">echo "source /opt/rh/devtoolset-9/enable" &gt;&gt; /etc/profile  ## gcc版本永久生效</span><br></pre></td></tr></table></figure>

<h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果要安装最新的redis，需要安装Remi的软件源，官网地址：http://rpms.famillecollet.com/</span></span><br><span class="line">yum install -y http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 然后可以使用下面的命令安装最新版本的redis</span></span><br><span class="line">yum --enablerepo=remi install -y redis</span><br></pre></td></tr></table></figure>

<h4 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置文件 /etc/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注释掉绑定ip，允许远程连接</span></span><br><span class="line">bind 127.0.0.1 # 注释掉这句</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许后台运行</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭保护模式，否则外部ip无法连接</span></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改端口</span></span><br><span class="line">Port 6379</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 密码设置</span></span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>

<h4 id="4-常用命令"><a href="#4-常用命令" class="headerlink" title="4.常用命令"></a>4.常用命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动redis</span></span><br><span class="line">service redis start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止redis</span></span><br><span class="line">service redis stop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看redis运行状态</span></span><br><span class="line">service redis status</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置redis为开机自动启动</span></span><br><span class="line">chkconfig redis on</span><br></pre></td></tr></table></figure>

<h4 id="5-配置防火墙"><a href="#5-配置防火墙" class="headerlink" title="5.配置防火墙"></a>5.配置防火墙</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换root</span></span><br><span class="line">sudo su -</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前防火墙开启的端口</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久开启指定端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=6379/tcp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://www.cnblogs.com/autohome7390/p/6433956.html" target="_blank" rel="noopener">centos7 yum install redis</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1653709" target="_blank" rel="noopener">CentOS7 linux下yum安装redis以及使用</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1606701" target="_blank" rel="noopener">在Mac上安装redis</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Babel 基础</title>
    <url>/babel-basic/</url>
    <content><![CDATA[<h4 id="一、功能"><a href="#一、功能" class="headerlink" title="一、功能"></a>一、功能</h4><ul>
<li>语法转换：将ES6版本的代码转为ES5等向后兼容的JS代码，从而可以运行在低版本浏览器或其它环境中</li>
<li>补齐API：通过 Polyfill 的方式在目标环境中添加缺失的特性<a id="more"></a>
polyfill：广义上讲是为环境提供不支持的特性的一类文件或库，狭义上讲是polyfill.js文件以及@babel/polyfill这个npm包</li>
</ul>
<h4 id="二、相关依赖包"><a href="#二、相关依赖包" class="headerlink" title="二、相关依赖包"></a>二、相关依赖包</h4><ul>
<li>@babel/core：核心包，babel版本通知指代它</li>
<li>@babel/cli：命令行转码工具，如果我们使用命令行进行Babel转码就需要安装它</li>
<li>@babel/preset-env：提供了ES6转换ES5的语法转换规则，以及polyfill的部分引入功能</li>
<li>@babel/runtime：提供辅助函数模块</li>
<li>@babel/plugin-transform-runtime：自动替换辅助函数</li>
<li>@babel/runtime-corejs3：这个npm包里除了包含Babel做语法转换的辅助函数，也包含了core-js的API转换函数</li>
</ul>
<h4 id="三、配置文件"><a href="#三、配置文件" class="headerlink" title="三、配置文件"></a>三、配置文件</h4><h5 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h5><p>配置文件推荐用.js格式，方便做逻辑处理</p>
<p>配置文件总结起来就是配置plugins和presets这两个数组，我们分别称之为插件数组和预设数组</p>
<p>plugins插件数组和presets预设数组是有顺序要求的。如果两个插件或预设都要处理同一个代码片段，那么会根据插件和预设的顺序来执行。规则如下：</p>
<ul>
<li>插件比预设先执行</li>
<li>插件执行顺序是插件数组从前向后执行</li>
<li>预设执行顺序是预设数组从后向前执行</li>
</ul>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">      [</span><br><span class="line">        <span class="string">"@babel/preset-env"</span>, <span class="comment">// 名称</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"useBuiltIns"</span>: <span class="string">"entry"</span> <span class="comment">// 参数</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-preset和plugin选择"><a href="#2-preset和plugin选择" class="headerlink" title="2.preset和plugin选择"></a>2.preset和plugin选择</h5><p>Babel官方的preset，一般的react项目实际可能会用到的就只有3个:</p>
<ul>
<li>@babel/preset-env</li>
<li>@babel/preset-react</li>
<li>@babel/preset-typescript</li>
</ul>
<p>  目前比较常用的插件只有@babel/plugin-transform-runtime</p>
<h4 id="四、补齐API的方式"><a href="#四、补齐API的方式" class="headerlink" title="四、补齐API的方式"></a>四、补齐API的方式</h4><p>Babel V7.4.0 版本开始，@babel/polyfill 已经被废弃，官方推荐单独安装 core-js 和 regenerator-runtime 模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install --save core-js@<span class="number">3</span> regenerator-runtime</span><br></pre></td></tr></table></figure>

<h5 id="1-从前端入口文件引入"><a href="#1-从前端入口文件引入" class="headerlink" title="1.从前端入口文件引入"></a>1.从前端入口文件引入</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'@babel/polyfill'</span>;</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"core-js/stable"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"regenerator-runtime/runtime"</span>;</span><br></pre></td></tr></table></figure>

<h5 id="2-从webpack配置引入"><a href="#2-从webpack配置引入" class="headerlink" title="2.从webpack配置引入"></a>2.从webpack配置引入</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line">  <span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: [<span class="string">'@babel/polyfill'</span>, <span class="string">'./a.js'</span>], </span><br><span class="line">      <span class="comment">// 或者['core-js/stable', 'regenerator-runtime/runtime', './a.js']</span></span><br><span class="line">    output: &#123;</span><br><span class="line">      filename: <span class="string">'b.js'</span>,</span><br><span class="line">      path: path.resolve(__dirname, <span class="string">''</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">'development'</span></span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>

<h5 id="3-从预设或插件引入（可实现polyfill部分引入，不污染全局，具体参考下文）"><a href="#3-从预设或插件引入（可实现polyfill部分引入，不污染全局，具体参考下文）" class="headerlink" title="3.从预设或插件引入（可实现polyfill部分引入，不污染全局，具体参考下文）"></a>3.从预设或插件引入（可实现polyfill部分引入，不污染全局，具体参考下文）</h5><h4 id="五、-babel-preset-env介绍"><a href="#五、-babel-preset-env介绍" class="headerlink" title="五、@babel/preset-env介绍"></a>五、@babel/preset-env介绍</h4><h5 id="1-作用"><a href="#1-作用" class="headerlink" title="1.作用"></a>1.作用</h5><p>主要作用是对我们所使用的、并且目标浏览器中缺失的功能进行代码转换和加载 polyfill</p>
<h5 id="2-参数项"><a href="#2-参数项" class="headerlink" title="2.参数项"></a>2.参数项</h5><p>(1) targets: 作用和写法与 <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener">browserslist</a> 一样</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    presets: [[<span class="string">"@babel/env"</span>, &#123;</span><br><span class="line">      targets: &#123;</span><br><span class="line">        <span class="string">"chrome"</span>: <span class="string">"58"</span>,</span><br><span class="line">        <span class="string">"ie"</span>: <span class="string">"11"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;]],</span><br><span class="line">    plugins: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>说明：如果我们对targets参数项进行了设置，那么就不使用browserslist的配置。如不设置targets，那么就使用browserslist的配置。如果targets不配置，browserslist也没有配置，那么@babel/preset-env就对所有ES6语法转换成ES5的</p>
<p>正常情况下，我们推荐使用browserslist的配置而很少单独配置@babel/preset-env的targets</p>
<p>(2) useBuiltIns: 主要和polyfill的行为有关，取值可以是”usage” 、 “entry” 或 false(默认)</p>
<ul>
<li>false: 全部引入polyfill</li>
<li>entry: 需要我们在项目入口处手动引入polyfill；会引入目标环境缺失的API模块</li>
<li>usage: 不需要在项目入口处手动引入polyfill；会引入目标环境缺失的且代码中用到的API模块</li>
</ul>
<p>(3) corejs: 取值可以是2(默认)或3，只有useBuiltIns设置为’usage’或’entry’时，才会生效</p>
<h4 id="六、-babel-plugin-transform-runtime介绍"><a href="#六、-babel-plugin-transform-runtime介绍" class="headerlink" title="六、@babel/plugin-transform-runtime介绍"></a>六、@babel/plugin-transform-runtime介绍</h4><h5 id="1-作用-1"><a href="#1-作用-1" class="headerlink" title="1.作用"></a>1.作用</h5><p>移除重复的辅助函数、以不污染全局的方式引入polyfill(主要是给开发JS库或npm包等的人用的)</p>
<h5 id="2-作用与示例"><a href="#2-作用与示例" class="headerlink" title="2.作用与示例"></a>2.作用与示例</h5><p>(1)自动移除语法转换后内联的辅助函数（inline Babel helpers），使用@babel/runtime/helpers里的辅助函数来替代</p>
<p>a.安装依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save @babel&#x2F;runtime &#x2F;&#x2F; 提供辅助函数模块</span><br><span class="line">npm install --save-dev @babel&#x2F;plugin-transform-runtime &#x2F;&#x2F; 自动替换辅助函数</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"@babel/preset-env"</span></span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [</span><br><span class="line">    <span class="string">"@babel/plugin-transform-runtime"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(2)API转换：当代码里使用了core-js的API，自动引入@babel/runtime-corejs3/core-js-stable/，以此来替代全局引入的core-js/stable，避免全局污染</p>
<p>a.安装依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save @babel&#x2F;runtime-corejs3</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">      <span class="string">"@babel/env"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">      [<span class="string">"@babel/plugin-transform-runtime"</span>, &#123;</span><br><span class="line">        <span class="string">"corejs"</span>: <span class="number">3</span></span><br><span class="line">      &#125;]</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>(3)API转换：当代码里使用了Generator/async函数，自动引入@babel/runtime/regenerator，以此来替代全局引入的regenerator-runtime/runtime，避免全局污染（此功能默认开启）</p>
<h5 id="3-安装与配置规则总结"><a href="#3-安装与配置规则总结" class="headerlink" title="3.安装与配置规则总结"></a>3.安装与配置规则总结</h5><ul>
<li><p>如果你不需要对core-js做API转换，那就安装@babel/runtime并把corejs配置项设置为false即可。</p>
</li>
<li><p>如果你需要用core-js 2做API转换，那就安装@babel/runtime-corejs2并把corejs配置项设置为2即可。</p>
</li>
<li><p>如果你需要用core-js 3做API转换，那就安装@babel/runtime-corejs3并把corejs配置项设置为3即可。</p>
</li>
</ul>
<p>参考文章：</p>
<ul>
<li><a href="https://www.jiangruitao.com/babel/" target="_blank" rel="noopener">Babel教程</a></li>
<li><a href="https://juejin.cn/post/6844904008679686152" target="_blank" rel="noopener">不容错过的 Babel7 知识</a></li>
<li><a href="https://developer.aliyun.com/article/783477" target="_blank" rel="noopener">99% 开发者没弄明白的 babel 知识</a></li>
</ul>
]]></content>
      <categories>
        <category>Babel</category>
      </categories>
      <tags>
        <tag>babel</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器事件循环</title>
    <url>/browser-event-loop/</url>
    <content><![CDATA[<h4 id="一、基本执行流程"><a href="#一、基本执行流程" class="headerlink" title="一、基本执行流程"></a>一、基本执行流程</h4><p>每次碰到异步操作，就把它添加到异步队列中，等待主进程为空（即没有同步代码需要执行了），就去执行异步队列，执行完成后再回到主进程。如果此时异步队列中有死循环，则会阻塞渲染进程<br><img src="../images/eventloop1.png" alt=""></p>
<a id="more"></a>

<h4 id="二、异步任务类型"><a href="#二、异步任务类型" class="headerlink" title="二、异步任务类型"></a>二、异步任务类型</h4><h5 id="1-宏任务-Task-Macrotask"><a href="#1-宏任务-Task-Macrotask" class="headerlink" title="1.宏任务(Task/Macrotask)"></a>1.宏任务(Task/Macrotask)</h5><ul>
<li>特点：每次loop只执行一个</li>
<li>举例：setTimeout、setInterval</li>
</ul>
<h5 id="2-微任务-Microtask"><a href="#2-微任务-Microtask" class="headerlink" title="2.微任务(Microtask)"></a>2.微任务(Microtask)</h5><ul>
<li>特点：在当次loop的结尾立刻执行；执行并清空微任务队列，如果在微任务的执行中又加入了新的微任务，会一起执行；当存在宏任务时，优先执行微任务</li>
<li>举例：Promise.then()</li>
</ul>
<h5 id="3-Animation-callbacks"><a href="#3-Animation-callbacks" class="headerlink" title="3.Animation callbacks"></a>3.Animation callbacks</h5><ul>
<li>特点：不加入异步队列，而是加入渲染这一边的队列中，在渲染进程前执行；如果任务本身内部又新增 Animation callback 就不会当场执行了，因为那是下一个loop</li>
<li>举例：requestAnimationFrame</li>
</ul>
<p>参考：</p>
<p><a href="https://juejin.im/post/5c32eb726fb9a049ee809e2f" target="_blank" rel="noopener">浏览器的 Event Loop</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/50356136" target="_blank" rel="noopener">事件循环机制的那些事</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>eventloop</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 Client Side Session 和 Server Side Session 的思考</title>
    <url>/client-or-server-side-session/</url>
    <content><![CDATA[<h4 id="一、本文中的定义-我的理解"><a href="#一、本文中的定义-我的理解" class="headerlink" title="一、本文中的定义(我的理解)"></a>一、本文中的定义(我的理解)</h4><h5 id="1-Server-Side-Session"><a href="#1-Server-Side-Session" class="headerlink" title="1.Server Side Session"></a>1.Server Side Session</h5><p>以cookie+session模式为代表，sessionData存储在数据库，生成的sessionId存储在redis/数据库，并通过set-cookie种到客户端</p>
<h5 id="2-Client-Side-Session"><a href="#2-Client-Side-Session" class="headerlink" title="2.Client Side Session"></a>2.Client Side Session</h5><p>以jwt为代表，sessionData存储在数据库，生成的token存储在客户端，以实现服务端无状态</p>
<a id="more"></a>

<h4 id="二、基本流程"><a href="#二、基本流程" class="headerlink" title="二、基本流程"></a>二、基本流程</h4><h5 id="1-cookie-session的流程"><a href="#1-cookie-session的流程" class="headerlink" title="1.cookie+session的流程"></a>1.cookie+session的流程</h5><blockquote>
<p>(1)用户使用账号/密码登录，服务器去数据库验证，验证通过后，服务器生成sessionId(关联userId，过期时间)，set-cookie保存到客户端，同时将sessionId(关联userId，过期时间)存储到redis</p>
<p>(2)客户端每次请求自动带上cookie中的sessionId，服务端校验，校验通过返回请求的资源</p>
<p>(3)校验不通过或者sessionId过期了，返回401，客户端跳转登录页</p>
</blockquote>
<h5 id="2-jwt的流程"><a href="#2-jwt的流程" class="headerlink" title="2.jwt的流程"></a>2.jwt的流程</h5><blockquote>
<p>(1)用户使用账号/密码登录，服务器去数据库验证，验证通过后，服务器根据secret密钥生成access_token，返回access_token给客户端</p>
<p>(2)客户端收到access_token后，将其存储在local storage，之后每次请求，都在header的Authorization中带上access_token</p>
<p>(3)服务端对请求中的access_token校验（签名、过期时间），验证通过，则返回资源响应</p>
<p>(4)签名验证未通过直接返回401，客户端跳转登录页</p>
</blockquote>
<h4 id="三、过期续签策略"><a href="#三、过期续签策略" class="headerlink" title="三、过期续签策略"></a>三、过期续签策略</h4><h5 id="1-cookie-session的续签"><a href="#1-cookie-session的续签" class="headerlink" title="1.cookie+session的续签"></a>1.cookie+session的续签</h5><blockquote>
<p>(1)每次请求刷新ttl，未请求则一段时间后sessionId过期，重新登录，性能略差</p>
<p>(2)生成sessionId的同时，再多生成一个refreshId，前者过期时间短，后者过期时间较长，sessionId过期后，查询refreshId，如未过期，则直接颁发新的sessionId，如果refreshId过期，则需要重新登录</p>
</blockquote>
<h5 id="2-jwt的续签"><a href="#2-jwt的续签" class="headerlink" title="2.jwt的续签"></a>2.jwt的续签</h5><blockquote>
<p>(1)每次请求都颁发新token，未请求则一段时间后token过期，重新登录，性能差；或者在redis中记录ttl，但就不是无状态的了</p>
<p>(2)生成access_token的同时，再多生成一个refresh_token，前者过期时间短，后者过期时间较长，access_token过期后，使用refresh_token获取新的access_token，如果refresh_token也过期，则需要重新登录；两个token可以都寸客户端，但不太安全；或者refresh_token存redis，但就不是无状态的了</p>
</blockquote>
<h4 id="四、适用场景"><a href="#四、适用场景" class="headerlink" title="四、适用场景"></a>四、适用场景</h4><h5 id="1-cookie-session"><a href="#1-cookie-session" class="headerlink" title="1.cookie+session"></a>1.cookie+session</h5><p>需要对在线账号数量、设备数量做限制的，比如同一时间同一账号只能有一个登录</p>
<h5 id="2-jwt"><a href="#2-jwt" class="headerlink" title="2.jwt"></a>2.jwt</h5><p>安全认证，用来做下载链接、邮箱验证、或短时间内的一次性验证业务、可以多处同时在线的</p>
<h4 id="五、本质"><a href="#五、本质" class="headerlink" title="五、本质"></a>五、本质</h4><blockquote>
<p>以 JWT 自身的设计逻辑来说，靠的是『算法』验证，而非『数据』验证，这注定是一种『离线验证』方式。</p>
<p>各类试图为 JWT 加入吊销机制的方式，实际上都需要引入『数据』，不管这个『数据』是什么形式存在的，都势必变为『在线验证』方式。</p>
<p>各类优化的本质，还是将『数据』做压缩和分发，尽可能让这个『数据』去中心化。</p>
<p>jwt 本来设计之初就是无状态的，就是”算法验证而非数据验证”，是因为有用户下线需求这些，才搞出了refresh token，token黑名单这些。(这些都需要靠数据验证)</p>
</blockquote>
<p>参考文章：</p>
<p><a href="https://blog.by24.cn/archives/about-session.html" target="_blank" rel="noopener">有关 Session 的那些事儿</a></p>
<p><a href="https://www.v2ex.com/t/757882" target="_blank" rel="noopener">有关 JWT 能否真正实现无状态</a></p>
<p><a href="https://learnku.com/articles/22616" target="_blank" rel="noopener">（译）别再使用 JWT 作为 Session 系统！</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1464231" target="_blank" rel="noopener">讲真，别再使用JWT了！</a></p>
<p><a href="https://wanago.io/2020/09/21/api-nestjs-refresh-tokens-jwt/" target="_blank" rel="noopener">Implementing refresh tokens using JWT</a></p>
<p><a href="https://wanago.io/2021/06/07/api-nestjs-server-side-sessions-instead-of-json-web-tokens/" target="_blank" rel="noopener">Using server-side sessions instead of JSON Web Tokens</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1467247" target="_blank" rel="noopener">express-session设置session详解</a></p>
]]></content>
      <categories>
        <category>架构</category>
      </categories>
      <tags>
        <tag>session</tag>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】组件间通信</title>
    <url>/communication-between-vue-components/</url>
    <content><![CDATA[<h3 id="一、父组件-gt-子组件"><a href="#一、父组件-gt-子组件" class="headerlink" title="一、父组件-&gt;子组件"></a>一、父组件-&gt;子组件</h3><p><strong>1.属性绑定</strong></p>
<p>(1)父组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;hello-world :message&#x3D;&quot;message&quot;&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#39;father message&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>(2)子组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;fatherMsg&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  props: [&#39;message&#39;],</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      fatherMsg: this.message</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<p><strong>2.调用父链（$parent，$root</strong>）</p>
<p>(1)父组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;hello-world&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#39;father message&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>(2)子组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      fatherMsg: this.$parent.message</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="二、子组件-gt-父组件"><a href="#二、子组件-gt-父组件" class="headerlink" title="二、子组件-&gt;父组件"></a>二、子组件-&gt;父组件</h3><p><strong>1.事件绑定</strong></p>
<p>(1)子组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    this.$emit(&#39;init&#39;, &#39;child message&#39;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>(2)父组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;hello-world @init&#x3D;&quot;handleInit&quot;&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &#39;.&#x2F;components&#x2F;HelloWorld&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    &#39;hello-world&#39;: HelloWorld</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleInit (msg) &#123;</span><br><span class="line">      console.log(msg)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p><strong>2.子组件索引</strong></p>
<p>(1)子组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#39;child message&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>(2)父组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;hello-world ref&#x3D;&quot;child1&quot;&gt;&lt;&#x2F;hello-world&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">mounted () &#123;</span><br><span class="line">    console.log(this.$refs.child1.message)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="三、非父子组件间"><a href="#三、非父子组件间" class="headerlink" title="三、非父子组件间"></a>三、非父子组件间</h3><p><strong>1.Bus中央通信</strong></p>
<p>(1)设置Bus组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">export default new Vue()</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>(2)组件1发送事件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;handleClick&quot;&gt;brother&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Bus from &#39;.&#x2F;Bus&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;brother&#39;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick () &#123;</span><br><span class="line">      Bus.$emit(&#39;change&#39;, &#39;brother1 message&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>(3)组件2监听事件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;message:&#123;&#123;message&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Bus from &#39;.&#x2F;Bus&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;HelloWorld&#39;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message: &#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created () &#123;</span><br><span class="line">    var _this &#x3D; this</span><br><span class="line">    Bus.$on(&#39;change&#39;, function (msg) &#123;</span><br><span class="line">      _this.message &#x3D; msg</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Cookie、Session 和 Token</title>
    <url>/cookie-session-token/</url>
    <content><![CDATA[<h3 id="一、Cookie"><a href="#一、Cookie" class="headerlink" title="一、Cookie"></a>一、Cookie</h3><h4 id="1-作用"><a href="#1-作用" class="headerlink" title="1.作用"></a>1.作用</h4><p>用于在连接时证明客户端的身份</p>
<h4 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h4><p>服务端Set-Cookie方式、客户端document.cookie</p>
<a id="more"></a>

<h4 id="3-相关字段："><a href="#3-相关字段：" class="headerlink" title="3.相关字段："></a>3.相关字段：</h4><ul>
<li>Expires 设置 cookie 的过期时间（时间戳），这个时间是客户端时间</li>
<li>Max-Age 设置 cookie 的保留时长（秒数），同时存在 Expires 和 Max-Age 的话，Max-Age 优先</li>
<li>Domain 设置生效的域名，默认就是当前域名，不包含子域名</li>
<li>Path 设置生效路径，/ 全匹配</li>
<li>Secure 设置 cookie 只在 https 下发送，防止中间人攻击</li>
<li>HttpOnly 设置禁止 JavaScript 访问 cookie，防止XSS</li>
<li>SameSite 设置跨域时不携带 cookie，防止CSRF</li>
</ul>
<h4 id="4-缺点"><a href="#4-缺点" class="headerlink" title="4.缺点"></a>4.缺点</h4><ul>
<li>受CORS限制</li>
<li>存在CSRF风险</li>
<li>大小有限制，最大为 4kb</li>
</ul>
<h3 id="二、Session"><a href="#二、Session" class="headerlink" title="二、Session"></a>二、Session</h3><h4 id="1-存储方式"><a href="#1-存储方式" class="headerlink" title="1.存储方式"></a>1.存储方式</h4><p>可以储存在客户端，也可以存储在服务器，或者redis(推荐)</p>
<ul>
<li><p>客户端存储：服务器通过set-cookie把信息写入浏览器cookie，在下次浏览器发送请求时，信息又通过 cookie 原样带回来，所以服务器什么东西都不用存。缺点是无法即时取消</p>
</li>
<li><p>服务端存储：将sessionID存储在客户端cookie中，在客户端发送请求时，拿到sessionId，再使用 id 在服务端 store 中获取 session 信息。</p>
</li>
<li><p>redis存储：集中存储时，对分布式服务、性能比较好</p>
</li>
</ul>
<h4 id="2-后台是如何通过-SessionID-知道是哪个用户呢？"><a href="#2-后台是如何通过-SessionID-知道是哪个用户呢？" class="headerlink" title="2.后台是如何通过 SessionID 知道是哪个用户呢？"></a>2.后台是如何通过 SessionID 知道是哪个用户呢？</h4><ul>
<li>数据库存储关联：将 SessionID 与数据信息关联，存储在 Redis、Mysql 等数据库中；</li>
<li>数据加密直接存储：比如 JWT 方式，用户数据直接从 SessionID 值解密出来（此方式时 Cookie 名称以 Token 居多）</li>
</ul>
<h4 id="3-服务端存储的缺点："><a href="#3-服务端存储的缺点：" class="headerlink" title="3.服务端存储的缺点："></a>3.服务端存储的缺点：</h4><ul>
<li>多集群支持: 当网站采用集群部署的时候，会遇到多台web服务器之间如何做session共享的问题。因为session是由单个服务创建，处理请求的服务器可能不是创建session的服务器，那么该服务器就无法拿到之前放入到session中的登录凭证之类的信息</li>
<li>性能差：当流量高峰期时，由于每个请求的用户信息都需要存储在数据库中，对资源会是一种负担</li>
<li>低扩展性：当扩容服务端的时候，session store也需要扩容。这会占用额外的资源和增加复杂性</li>
</ul>
<h4 id="4-Session更新"><a href="#4-Session更新" class="headerlink" title="4.Session更新"></a>4.Session更新</h4><ul>
<li>每次请求都刷新: 开发一个 middleware（默认情况下所有请求都会经过该 middleware），如果校验Session有效，就更新Session的expires: 当前时间+过期时间</li>
<li>快过期时再刷新：频繁更新 session 会影响性能，如果某个用户一直在操作，同一个 sessionID 可能会长期有效，如果相关 cookie 泄露，可能导致比较大的风险，可以在生成 sessionID 的同时生成一个 refreshID，在 sessionID 过期之后使用 refreshID 请求服务端生成新的 sessionID（这个方案需要前端判断 sessionID 失效，并携带 refreshID 发请求，refreshID只能使用一次)。</li>
</ul>
<h4 id="5-单设备登录"><a href="#5-单设备登录" class="headerlink" title="5.单设备登录"></a>5.单设备登录</h4><p>有些情况下，只允许一个帐号在一个端下登录，如果换了一个端，需要把之前登录的端踢下线（默认情况下，同一个帐号可以在不同的端下同时登录的）。</p>
<p>这时候可以借助一个服务保存用户唯一标识和 sessionId 值的对应关系，如果同一个用户，但 sessionId 不一样，则不允许登录或者把之前的踢下线(删除旧 session )。</p>
<h3 id="三、Token"><a href="#三、Token" class="headerlink" title="三、Token"></a>三、Token</h3><p>本质上 token 的功能就是和 session id 一模一样。区别在于，session id 一般存在 cookie 里，自动带上；token 一般是要你主动放在请求中，例如设置请求头的 Authorization 为 bearer:<access_token><br>所以 token 更适合一次性的命令认证，设置一个比较短的有效期</p>
<h4 id="1-JWT"><a href="#1-JWT" class="headerlink" title="1.JWT"></a>1.JWT</h4><p>客户端储存 session 信息的一种方式。</p>
<p>用户访问需要授权的连接时，可以把 token 放在 cookie，也可以在请求头带上 Authorization: Bearer <token>。（手动放在请求头不受 CORS 限制，不怕 CSRF）</p>
<p>缺点：</p>
<ul>
<li>无法废弃: 在签发后，在到期之前会始终有效，无法中途废弃。</li>
<li>性能差: session方案中，cookie需要携带的sessionId是一个很短的字符串。但是由于jwt是无状态的，需要携带一些必要的信息，体积会比较大。</li>
<li>安全性：jwt中的payload是base64编码的，没有加密，因此不能存储敏感数据</li>
<li>续签: 传统的cookie续签方案都是框架自带的，session有效期30分钟，30分钟内如果有访问，有效期被刷新至30分钟。如果要改变jwt的有效时间，就需要签发新的jwt。一种方案是每次请求都更新jwt，这样性能太差了；第二种方案为每个jwt设置过期时间，每次访问刷新jwt的过期时间，就失去了jwt无状态的优势了</li>
</ul>
<h4 id="2-JWT-token校验"><a href="#2-JWT-token校验" class="headerlink" title="2.JWT token校验"></a>2.JWT token校验</h4><p>当 server 收到浏览器传过来的 token 时，它会首先取出 token 中的 header + payload，根据密钥生成签名，然后再与 token 中的签名比对，如果成功则说明签名是合法的，即 token 是合法的。而且你会发现 payload 中存有我们的 userId，所以拿到 token 后直接在 payload 中就可获取 userid，避免了像 session 那样要从 redis 去取的开销</p>
<h4 id="3-JWT-token更新"><a href="#3-JWT-token更新" class="headerlink" title="3.JWT token更新"></a>3.JWT token更新</h4><p>可以同时生成 JWT Token 与 Refresh Token，其中 Refresh Token 的有效时间较长，长于 JWT Token，这样当 JWT Token 过期之后，使用  Refresh Token 获取新的 JWT Token 与 Refresh Token。</p>
<h4 id="4-适合的场景"><a href="#4-适合的场景" class="headerlink" title="4.适合的场景"></a>4.适合的场景</h4><p>设置较短的过期时间，更适合做一些一次性的安全认证，用来做下载链接、邮箱验证、或短时间内的一次性验证业务是非常好的</p>
<p>参考文章：</p>
<p><a href="https://ssshooter.com/2021-02-21-auth/" target="_blank" rel="noopener">前后端接口鉴权全解</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">JSON Web Token 入门教程</a></p>
<p><a href="https://mp.weixin.qq.com/s/9SC6Dtgkfvq1ehOq76bpbA" target="_blank" rel="noopener">搞懂 JWT 这个知识点</a></p>
<p><a href="https://75.team/post/common-login-authencation-scheme" target="_blank" rel="noopener">常见登录鉴权方案</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/373092817" target="_blank" rel="noopener">你管这破玩意儿叫Token</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>CORS请求总结</title>
    <url>/cors-summary/</url>
    <content><![CDATA[<h4 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h4><p>CORS需要浏览器和服务器同时支持，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信</p>
<a id="more"></a>
<h4 id="二、简单请求"><a href="#二、简单请求" class="headerlink" title="二、简单请求"></a>二、简单请求</h4><h5 id="1-满足条件"><a href="#1-满足条件" class="headerlink" title="1.满足条件"></a>1.满足条件</h5><blockquote>
<p>(1) 请求方法是以下三种方法之一：</p>
<ul>
<li>HEAD</li>
<li>GET</li>
<li>POST</li>
</ul>
<p>(2) HTTP的请求头信息不超出以下几种字段：</p>
<ul>
<li>Accept</li>
<li>Accept-Language</li>
<li>Content-Language</li>
<li>Last-Event-ID</li>
<li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain</li>
</ul>
</blockquote>
<h5 id="2-处理流程"><a href="#2-处理流程" class="headerlink" title="2.处理流程"></a>2.处理流程</h5><p>(1)浏览器在请求头中，添加<code>Origin</code>字段，用来说明本次请求来自哪个源(协议 + 域名 + 端口)</p>
<p>(2)如果<code>Origin</code>字段指定的域名在服务器许可范围内，服务器返回的响应头，会多出几个字段：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Expose-Headers: FooBar</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure>

<p>a.Access-Control-Allow-Origin：该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求</p>
<p>b.Access-Control-Allow-Credentials: 可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。同时，前端必须在AJAX请求中打开withCredentials属性：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>
<p>如果要发送Cookie，<code>Access-Control-Allow-Origin</code>就不能设为星号，必须指定明确的、与请求网页一致的域名</p>
<p><code>Access-Control-Allow-Credentials</code>也只能设为true，如果服务器不要浏览器发送Cookie，删除该字段即可。</p>
<p>c.Access-Control-Expose-Headers: 可选。跨域请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。上面的例子指定，getResponseHeader(‘FooBar’)可以返回FooBar字段的值</p>
<h4 id="三、非简单请求"><a href="#三、非简单请求" class="headerlink" title="三、非简单请求"></a>三、非简单请求</h4><h5 id="1-预检请求"><a href="#1-预检请求" class="headerlink" title="1.预检请求"></a>1.预检请求</h5><p>跨域请求的非简单请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight），”预检”请求用的请求方法是<code>OPTIONS</code>，预检请求通过后，浏览器才会发出正式的XMLHttpRequest请求，否则就报错</p>
<h5 id="2-处理流程-1"><a href="#2-处理流程-1" class="headerlink" title="2.处理流程"></a>2.处理流程</h5><p>(1)浏览器发现，跨域请求是一个非简单请求，就自动发出一个”预检”请求，包含<code>Origin</code>、`Access-Control-Request-Method和Access-Control-Request-Headers</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">OPTIONS /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Access-Control-Request-Method: PUT</span><br><span class="line">Access-Control-Request-Headers: X-Custom-Header</span><br><span class="line">Host: api.alice.com</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br></pre></td></tr></table></figure>
<p>a.Origin: 表示请求来自哪个源</p>
<p>b.Access-Control-Request-Method: 该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是PUT</p>
<p>c.Access-Control-Request-Headers: 该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是X-Custom-Header</p>
<p>(2)服务器收到”预检”请求以后，检查Origin、Access-Control-Request-Method和Access-Control-Request-Headers字段</p>
<p>如果未通过，服务器会返回一个正常的HTTP回应，但是没有任何CORS相关的头信息字段。这时，浏览器就会认定，服务器不同意预检请求，就抛出错误，被xhr的onerror回调捕获：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">XMLHttpRequest cannot load http://api.alice.com.</span><br><span class="line">Origin http://api.bob.com is not allowed by Access-Control-Allow-Origin</span><br></pre></td></tr></table></figure>

<p>如果预检请求通过，服务器会回应如下字段：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Access-Control-Allow-Methods: GET, POST, PUT</span><br><span class="line">Access-Control-Allow-Headers: X-Custom-Header</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Max-Age: 1728000</span><br></pre></td></tr></table></figure>

<p>a.Access-Control-Allow-Methods: 该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次”预检”请求</p>
<p>b.Access-Control-Allow-Headers: 如果浏览器请求包括Access-Control-Request-Headers字段，则Access-Control-Allow-Headers字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在”预检”中请求的字段</p>
<p>c.Access-Control-Allow-Credentials: 是否发送Cookie</p>
<p>d.Access-Control-Max-Age: 该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求</p>
<p>(3)一旦服务器通过了”预检”请求，以后每次浏览器正常的CORS请求，就都跟简单请求一样，会有一个Origin头信息字段:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PUT /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Host: api.alice.com</span><br><span class="line">X-Custom-Header: value</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br></pre></td></tr></table></figure>
<p>服务器的回应，也都会有一个Access-Control-Allow-Origin头信息字段：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure>

<h4 id="四、与JSONP比较"><a href="#四、与JSONP比较" class="headerlink" title="四、与JSONP比较"></a>四、与JSONP比较</h4><p>优点：JSONP只支持GET请求，CORS支持所有类型的HTTP请求<br>缺点：不支持老式浏览器，不支持CORS的服务器无法使用</p>
<h4 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h4><h5 id="1-fetch设置mode-no-cors拿不到数据？"><a href="#1-fetch设置mode-no-cors拿不到数据？" class="headerlink" title="1.fetch设置mode: no-cors拿不到数据？"></a>1.fetch设置mode: no-cors拿不到数据？</h5><p>答：fetch设置no-cors依旧受跨域策略限制，只是浏览器不再报错，并且即使后端添加了相关header，也拿不到response</p>
<h5 id="2-前端跨域请求设置cookie后，报cors错误？"><a href="#2-前端跨域请求设置cookie后，报cors错误？" class="headerlink" title="2.前端跨域请求设置cookie后，报cors错误？"></a>2.前端跨域请求设置cookie后，报cors错误？</h5><p>答：需要同时满足如下三个条件(后端Set-Cookie也是)：</p>
<ul>
<li>后端Response header 有 Access-Control-Allow-Credentials: true</li>
<li>后端Response header的Access-Control-Allow-Origin不能是*，要明确指定</li>
<li>前端fetch 加上 credentials: ‘include’</li>
</ul>
<h5 id="3-无法获取跨域请求中设置的自定义header？"><a href="#3-无法获取跨域请求中设置的自定义header？" class="headerlink" title="3.无法获取跨域请求中设置的自定义header？"></a>3.无法获取跨域请求中设置的自定义header？</h5><p>答：后端需要带上Access-Control-Expose-Headers这个字段</p>
<h5 id="4-使用PUT-非简单请求-报错？"><a href="#4-使用PUT-非简单请求-报错？" class="headerlink" title="4.使用PUT(非简单请求)报错？"></a>4.使用PUT(非简单请求)报错？</h5><p>答：如果前端要使用GET、HEAD以及POST以外的HTTP method发送请求的话，后端的preflight response header必须有Access-Control-Allow-Methods并且指定合法的method，preflight才会通过，浏览器才会把真正的request发送出去</p>
<p>参考链接：</p>
<p><a href="https://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">跨域资源共享 CORS 详解 – 阮一峰</a></p>
<p><a href="https://mp.weixin.qq.com/s/y8e1HLNzbLLYWSeMnT-xSA" target="_blank" rel="noopener">CORS 完全手册之CORS 详解</a></p>
<p><a href="https://fetch.spec.whatwg.org/" target="_blank" rel="noopener">Fetch Living Standard</a></p>
]]></content>
      <categories>
        <category>跨域</category>
      </categories>
      <tags>
        <tag>跨域</tag>
        <tag>cors</tag>
      </tags>
  </entry>
  <entry>
    <title>跨tab页通信(同源/跨域)</title>
    <url>/cross-browser-tab-communication/</url>
    <content><![CDATA[<h4 id="一、获取句柄-postMessage"><a href="#一、获取句柄-postMessage" class="headerlink" title="一、获取句柄 + postMessage"></a>一、获取句柄 + postMessage</h4><p>必须有一个页面（如A页面）可以获取另一个页面（如B页面）的window对象，这样才可以完成通信</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// parent.html</span></span><br><span class="line"><span class="keyword">const</span> childPage = <span class="built_in">window</span>.open(<span class="string">'child.html'</span>, <span class="string">'child'</span>)</span><br><span class="line"></span><br><span class="line">childPage.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">	childPage.postMessage(<span class="string">'hello'</span>, location.origin)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// child.html</span></span><br><span class="line"><span class="built_in">window</span>.onmessage = <span class="function"><span class="params">evt</span> =&gt;</span> &#123;</span><br><span class="line">	<span class="comment">// evt.data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="二、localStorage-storageEvent"><a href="#二、localStorage-storageEvent" class="headerlink" title="二、localStorage + storageEvent"></a>二、localStorage + storageEvent</h4><p>同源的两个tab页面可以通过共享localStorage的方式通信</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A 页面</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"storage"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev.key == <span class="string">'message'</span>) &#123;</span><br><span class="line">        <span class="comment">// removeItem同样触发storage事件，此时ev.newValue为空</span></span><br><span class="line">        <span class="keyword">if</span>(!ev.newValue)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">var</span> message = <span class="built_in">JSON</span>.parse(ev.newValue);</span><br><span class="line">        <span class="built_in">console</span>.log(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">    localStorage.setItem(<span class="string">'message'</span>,<span class="built_in">JSON</span>.stringify(message));</span><br><span class="line">    localStorage.removeItem(<span class="string">'message'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送消息给B页面</span></span><br><span class="line">sendMessage(<span class="string">'this is message from A'</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">B 页面</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"storage"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev.key == <span class="string">'message'</span>) &#123;</span><br><span class="line">        <span class="comment">// removeItem同样触发storage事件，此时ev.newValue为空</span></span><br><span class="line">        <span class="keyword">if</span>(!ev.newValue)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">var</span> message = <span class="built_in">JSON</span>.parse(ev.newValue);</span><br><span class="line">        <span class="comment">// 发送消息给A页面</span></span><br><span class="line">        sendMessage(<span class="string">'message echo from B'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendMessage</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">    localStorage.setItem(<span class="string">'message'</span>,<span class="built_in">JSON</span>.stringify(message));</span><br><span class="line">    localStorage.removeItem(<span class="string">'message'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="三、iframe-postMessage"><a href="#三、iframe-postMessage" class="headerlink" title="三、iframe + postMessage"></a>三、iframe + postMessage</h4><p>通过在这两个tab页嵌入同一个iframe页实现“桥接”，最终完成两个不相关的tab页通信</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tab A -----&gt; iframe A[bridge.html]</span><br><span class="line">                     |</span><br><span class="line">                     |</span><br><span class="line">                    \|&#x2F;</span><br><span class="line">             iframe B[bridge.html] -----&gt;  tab B</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tab A:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 向弹出的tab页面发送消息</span></span><br><span class="line"><span class="built_in">window</span>.sendMessageToTab = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 由于[#J_bridge]iframe页面的源文件在vstudio服务器中，因此postMessage发向“同源”</span></span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'#J_bridge'</span>).contentWindow.postMessage(<span class="built_in">JSON</span>.stringify(data),<span class="string">'/'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收来自 [#J_bridge]iframe的tab消息</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123;data,source,origin&#125;  = e;</span><br><span class="line">    <span class="keyword">if</span>(!data)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> info = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.parse(data));</span><br><span class="line">        <span class="keyword">if</span>(info.type == <span class="string">'BSays'</span>)&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">'BSay:'</span>,info);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">sendMessageToTab(&#123;</span><br><span class="line">    type: <span class="string">'ASays'</span>,</span><br><span class="line">    data: <span class="string">'hello world, B'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bridge.html</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"storage"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ev.key == <span class="string">'message'</span>) &#123;</span><br><span class="line">        <span class="built_in">window</span>.parent.postMessage(ev.newValue,<span class="string">'*'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">message_broadcast</span>(<span class="params">message</span>)</span>&#123;</span><br><span class="line">    localStorage.setItem(<span class="string">'message'</span>,<span class="built_in">JSON</span>.stringify(message));</span><br><span class="line">    localStorage.removeItem(<span class="string">'message'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123;data,source,origin&#125;  = e;</span><br><span class="line">    <span class="comment">// 接受到父文档的消息后，广播给其他的同源页面</span></span><br><span class="line">    message_broadcast(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tab B</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123;data,source,origin&#125;  = e;</span><br><span class="line">    <span class="keyword">if</span>(!data)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> info = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.parse(data));</span><br><span class="line">    <span class="keyword">if</span>(info.type == <span class="string">'ASays'</span>)&#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">'#J_bridge'</span>).contentWindow.postMessage(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            type: <span class="string">'BSays'</span>,</span><br><span class="line">            data: <span class="string">'hello world echo from B'</span></span><br><span class="line">        &#125;),<span class="string">'*'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// tab B主动发送消息给tab A</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'button'</span>).addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">'#J_bridge'</span>).contentWindow.postMessage(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        type: <span class="string">'BSays'</span>,</span><br><span class="line">        data: <span class="string">'I am B'</span></span><br><span class="line">    &#125;),<span class="string">'*'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="https://cloud.tencent.com/developer/article/1061884" target="_blank" rel="noopener">跨浏览器tab页的通信解决方案尝试</a></p>
<p><a href="https://juejin.im/post/59bb7080518825396f4f5177" target="_blank" rel="noopener">跨页面通信的各种姿势</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>跨域</tag>
        <tag>tab</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】闭包</title>
    <url>/closure/</url>
    <content><![CDATA[<p>以下内容为我的理解，仅供参考</p>
<h4 id="一、什么是闭包"><a href="#一、什么是闭包" class="headerlink" title="一、什么是闭包"></a>一、什么是闭包</h4><p>有权访问其他函数内部自由变量的<strong>函数</strong>，就是闭包</p>
<a id="more"></a>
<h4 id="二、闭包的原理与实现"><a href="#二、闭包的原理与实现" class="headerlink" title="二、闭包的原理与实现"></a>二、闭包的原理与实现</h4><p>定义一个外部函数outer，在其内部有一个局部变量a，一个内层函数inner，inner在其作用域链上可以访问并操作a，外部函数outer将inner作为返回值返回，此时将此返回值（inner）赋值给一个全局变量b，因为b永远保持在内存中，所以对应的inner–&gt;a–&gt;outer这一变量环境也被一并保存住，即形成闭包。</p>
<h4 id="三、闭包优缺点"><a href="#三、闭包优缺点" class="headerlink" title="三、闭包优缺点"></a>三、闭包优缺点</h4><p>优点：保有私有变量，方便访问，防止全局污染；变量重用，防止被非法篡改</p>
<p>缺点：占用更多内存空间</p>
<h4 id="四、示例：闭包计数器与私有方法"><a href="#四、示例：闭包计数器与私有方法" class="headerlink" title="四、示例：闭包计数器与私有方法"></a>四、示例：闭包计数器与私有方法</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCounter</span>(<span class="params">counterName</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Number of "</span> + counterName + <span class="string">": "</span> + counter);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">increment</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    counter = counter + <span class="number">1</span>;</span><br><span class="line">    display();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">decrement</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    counter = counter - <span class="number">1</span>;</span><br><span class="line">    display();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    increment : increment,</span><br><span class="line">    decrement : decrement</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dogsCounter = createCounter(<span class="string">"dogs"</span>);</span><br><span class="line"></span><br><span class="line">dogsCounter.increment(); <span class="comment">// Number of dogs: 1</span></span><br><span class="line">dogsCounter.increment(); <span class="comment">// Number of dogs: 2</span></span><br><span class="line">dogsCounter.decrement(); <span class="comment">// Number of dogs: 1</span></span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://blog.fundebug.com/2017/07/31/javascript-closure/" target="_blank" rel="noopener">解密JavaScript闭包</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【CSS】scrollbar样式自定义</title>
    <url>/css-scrollbar-style-change/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">._scrollbar</span><span class="selector-pseudo">::-webkit-scrollbar-track-piece</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#F0F0F0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">._scrollbar</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">._scrollbar</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#81C8FF</span>;</span><br><span class="line">	<span class="attribute">background-clip</span>:padding-box;</span><br><span class="line">	<span class="attribute">min-height</span>:<span class="number">28px</span>;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">._scrollbar</span><span class="selector-pseudo">::-webkit-scrollbar-thumb</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">background-color</span>:<span class="number">#bbb</span>;</span><br><span class="line">	<span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>【CSS】冒泡loading样式</title>
    <url>/css-spinner-bounce/</url>
    <content><![CDATA[<h4 id="样式一：水平三个冒泡"><a href="#样式一：水平三个冒泡" class="headerlink" title="样式一：水平三个冒泡"></a>样式一：水平三个冒泡</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"spinner"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bounce1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bounce2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bounce3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.spinner</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3a84d8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">-webkit-animation</span>: bouncedelay <span class="number">1.4s</span> infinite ease-in-out;</span><br><span class="line">    <span class="attribute">animation</span>: bouncedelay <span class="number">1.4s</span> infinite ease-in-out;</span><br><span class="line">    <span class="comment">/* Prevent first frame from flickering when animation starts */</span></span><br><span class="line">    <span class="attribute">-webkit-animation-fill-mode</span>: both;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: both;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.spinner</span> <span class="selector-class">.bounce1</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-animation-delay</span>: -<span class="number">0.32s</span>;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">0.32s</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.spinner</span> <span class="selector-class">.bounce2</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-animation-delay</span>: -<span class="number">0.16s</span>;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">0.16s</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@-webkit-keyframes</span> bouncedelay &#123;</span><br><span class="line">    0%, 80%, 100% &#123; <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>) &#125;</span><br><span class="line">    40% &#123; <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>) &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@keyframes</span> bouncedelay &#123;</span><br><span class="line">    0%, 80%, 100% &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>);</span><br><span class="line">      <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>);</span><br><span class="line">    &#125; 40% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>);</span><br><span class="line">        <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="样式二：同心圆两个冒泡"><a href="#样式二：同心圆两个冒泡" class="headerlink" title="样式二：同心圆两个冒泡"></a>样式二：同心圆两个冒泡</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"spinner"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"double-bounce1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"double-bounce2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.spinner</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.double-bounce1</span>,</span><br><span class="line"><span class="selector-class">.double-bounce2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3063b2</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">-webkit-animation</span>: bounce <span class="number">2.0s</span> infinite ease-in-out;</span><br><span class="line">  <span class="attribute">animation</span>: bounce <span class="number">2.0s</span> infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.double-bounce2</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-animation-delay</span>: -<span class="number">1.0s</span>;</span><br><span class="line">  <span class="attribute">animation-delay</span>: -<span class="number">1.0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> bounce &#123;</span><br><span class="line"></span><br><span class="line">  0%,</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> bounce &#123;</span><br><span class="line"></span><br><span class="line">  0%,</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  50% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】解决跨域的几种方法</title>
    <url>/cors-methods/</url>
    <content><![CDATA[<h3 id="一、何为同源"><a href="#一、何为同源" class="headerlink" title="一、何为同源"></a>一、何为同源</h3><p>所谓”同源”指的是”三个相同”：</p>
<ul>
<li>协议相同</li>
<li>域名相同</li>
<li>端口相同</li>
</ul>
<blockquote>
<p><a href="http://www.example.com/dir2/other.html：同源" target="_blank" rel="noopener">http://www.example.com/dir2/other.html：同源</a><br><a href="http://example.com/dir/other.html：不同源（域名不同）" target="_blank" rel="noopener">http://example.com/dir/other.html：不同源（域名不同）</a><br><a href="http://v2.www.example.com/dir/other.html：不同源（域名不同）" target="_blank" rel="noopener">http://v2.www.example.com/dir/other.html：不同源（域名不同）</a><br><a href="http://www.example.com:81/dir/other.html：不同源（端口不同）" target="_blank" rel="noopener">http://www.example.com:81/dir/other.html：不同源（端口不同）</a></p>
</blockquote>
<a id="more"></a>

<h3 id="二、限制范围"><a href="#二、限制范围" class="headerlink" title="二、限制范围"></a>二、限制范围</h3><p>如果非同源，如下行为会受到限制：</p>
<ul>
<li>Cookie、LocalStorage 和 IndexDB 无法读取</li>
<li>DOM 无法获得</li>
<li>AJAX 请求不能发送</li>
</ul>
<p>跨域类型：这里暂且分为两种：主域相同，子域不同的跨域和完全跨域</p>
<h3 id="三、主域相同，子域不同的跨域"><a href="#三、主域相同，子域不同的跨域" class="headerlink" title="三、主域相同，子域不同的跨域"></a>三、主域相同，子域不同的跨域</h3><h4 id="1-共享Cookie：设置document-domain"><a href="#1-共享Cookie：设置document-domain" class="headerlink" title="1.共享Cookie：设置document.domain"></a>1.共享Cookie：设置document.domain</h4><p><strong>方法a:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A页面：http://w1.example.com/a.html</span></span><br><span class="line"><span class="built_in">document</span>.domain = <span class="string">'example.com'</span>;</span><br><span class="line"><span class="built_in">document</span>.cookie = <span class="string">"test1=hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// B页面：http://w2.example.com/b.html</span></span><br><span class="line"><span class="built_in">document</span>.domain = <span class="string">'example.com'</span>;</span><br><span class="line"><span class="keyword">var</span> allCookie = <span class="built_in">document</span>.cookie;</span><br></pre></td></tr></table></figure>

<p><strong>方法b:</strong></p>
<p>服务器在设置Cookie的时候，指定Cookie的所属域名为一级域名，比如.example.com，这样的话，二级域名和三级域名不用做任何设置，都可以读取这个Cookie</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set-Cookie: key&#x3D;value; domain&#x3D;.example.com; path&#x3D;&#x2F;</span><br></pre></td></tr></table></figure>

<h4 id="2-获取DOM、变量：设置document-domain-iframe"><a href="#2-获取DOM、变量：设置document-domain-iframe" class="headerlink" title="2.获取DOM、变量：设置document.domain + iframe"></a>2.获取DOM、变量：设置document.domain + iframe</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--父窗口：(http://www.domain.com/a.html)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"iframe"</span> <span class="attr">src</span>=<span class="string">"http://child.domain.com/b.html"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.domain = <span class="string">'domain.com'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> user = <span class="string">'admin'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子窗口：(http://child.domain.com/b.html)</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">document</span>.domain = <span class="string">'domain.com'</span>;</span><br><span class="line">    <span class="comment">// 获取父窗口中变量</span></span><br><span class="line">    alert(<span class="string">'get js data from parent ---&gt; '</span> + <span class="built_in">window</span>.parent.user);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="四、完全跨域"><a href="#四、完全跨域" class="headerlink" title="四、完全跨域"></a>四、完全跨域</h3><h5 id="1-通信：片段标识符-iframe"><a href="#1-通信：片段标识符-iframe" class="headerlink" title="1.通信：片段标识符 + iframe"></a>1.通信：片段标识符 + iframe</h5><p>片段标识符（fragment identifier）指的是，URL的#号后面的部分，比如<a href="http://example.com/x.html#fragment的#fragment。如果只是改变片段标识符，页面不会重新刷新" target="_blank" rel="noopener">http://example.com/x.html#fragment的#fragment。如果只是改变片段标识符，页面不会重新刷新</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父窗口可以把信息，写入子窗口的片段标识符</span></span><br><span class="line"><span class="keyword">var</span> src = originURL + <span class="string">'#'</span> + data;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'myIFrame'</span>).src = src;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子窗口通过监听hashchange事件得到通知</span></span><br><span class="line"><span class="built_in">window</span>.onhashchange = checkMessage;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkMessage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> message = <span class="built_in">window</span>.location.hash;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子窗口也可以改变父窗口的片段标识符</span></span><br><span class="line">parent.location.href= target + <span class="string">"#"</span> + hash;</span><br></pre></td></tr></table></figure>

<h5 id="2-通信：window-postMessage"><a href="#2-通信：window-postMessage" class="headerlink" title="2.通信：window.postMessage"></a>2.通信：window.postMessage</h5><p>用法：postMessage(data,origin)方法接受两个参数</p>
<p>data： html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。</p>
<p>origin： 协议+主机+端口号，也可以设置为”*”，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为”/“。</p>
<p>message事件的事件对象event，提供以下三个属性：</p>
<ul>
<li>event.source：发送消息的窗口</li>
<li>event.origin: 消息发向的网址</li>
<li>event.data: 消息内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--a.html：(http://www.domain1.com/a.html--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"iframe"</span> <span class="attr">src</span>=<span class="string">"http://www.domain2.com/b.html"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> iframe = <span class="built_in">document</span>.getElementById(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="actionscript">    iframe.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> data = &#123;</span></span><br><span class="line"><span class="actionscript">            name: <span class="string">'aym'</span></span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 向domain2传送跨域数据</span></span></span><br><span class="line"><span class="javascript">        iframe.contentWindow.postMessage(<span class="built_in">JSON</span>.stringify(data), <span class="string">'http://www.domain2.com'</span>);</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 接受domain2返回数据</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (e.origin !== <span class="string">'http://www.domain2.com'</span>) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'data from domain2 ---&gt; '</span> + e.data);</span></span><br><span class="line"><span class="actionscript">    &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// b.html：(http://www.domain2.com/b.html)</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 接收domain1的数据</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e.origin !== <span class="string">'http://www.domain1.com'</span>) <span class="keyword">return</span>;</span><br><span class="line">        alert(<span class="string">'data from domain1 ---&gt; '</span> + e.data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(e.data);</span><br><span class="line">        <span class="keyword">if</span> (data) &#123;</span><br><span class="line">            data.number = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理后再发回domain1</span></span><br><span class="line">            <span class="built_in">window</span>.parent.postMessage(<span class="built_in">JSON</span>.stringify(data), <span class="string">'http://www.domain1.com'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="3-LocalStorage-window-postMessage"><a href="#3-LocalStorage-window-postMessage" class="headerlink" title="3.LocalStorage: window.postMessage"></a>3.LocalStorage: window.postMessage</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子窗口接收消息并操作localStorage</span></span><br><span class="line"><span class="built_in">window</span>.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e.origin !== <span class="string">'http://bbb.com'</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> payload = <span class="built_in">JSON</span>.parse(e.data);</span><br><span class="line">  <span class="keyword">switch</span> (payload.method) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'set'</span>:</span><br><span class="line">      localStorage.setItem(payload.key, <span class="built_in">JSON</span>.stringify(payload.data));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'get'</span>:</span><br><span class="line">      <span class="keyword">var</span> parent = <span class="built_in">window</span>.parent;</span><br><span class="line">      <span class="keyword">var</span> data = localStorage.getItem(payload.key);</span><br><span class="line">      parent.postMessage(data, <span class="string">'http://aaa.com'</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'remove'</span>:</span><br><span class="line">      localStorage.removeItem(payload.key);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父窗口发送消息并操作子</span></span><br><span class="line"><span class="keyword">var</span> win = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'iframe'</span>)[<span class="number">0</span>].contentWindow;</span><br><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">name</span>: <span class="string">'Jack'</span> &#125;;</span><br><span class="line"><span class="comment">// 存入对象</span></span><br><span class="line">win.postMessage(<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">key</span>: <span class="string">'storage'</span>, <span class="attr">method</span>: <span class="string">'set'</span>, <span class="attr">data</span>: obj&#125;), <span class="string">'http://bbb.com'</span>);</span><br><span class="line"><span class="comment">// 读取对象</span></span><br><span class="line">win.postMessage(<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">key</span>: <span class="string">'storage'</span>, <span class="attr">method</span>: <span class="string">"get"</span>&#125;), <span class="string">"*"</span>);</span><br><span class="line"><span class="built_in">window</span>.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e.origin != <span class="string">'http://aaa.com'</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="comment">// "Jack"</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(e.data).name);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="4-Ajax-通过jsonp跨域"><a href="#4-Ajax-通过jsonp跨域" class="headerlink" title="4.Ajax: 通过jsonp跨域"></a>4.Ajax: 通过jsonp跨域</h5><p>只能发GET请求，原理可参考之前的 <a href="https://roubin.me/jsonp-learning-summary/">这篇</a> ，原生js实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    script.type = <span class="string">'text/javascript'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传参并指定回调执行函数为onBack</span></span><br><span class="line">    script.src = <span class="string">'http://www.domain2.com:8080/login?user=admin&amp;callback=onBack'</span>;</span><br><span class="line">    <span class="built_in">document</span>.head.appendChild(script);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 回调执行函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onBack</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">    &#125;</span><br><span class="line"> &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<!--more-->

<p>jQuery实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">'http://www.domain2.com:8080/login'</span>,</span><br><span class="line">    type: <span class="string">'get'</span>,</span><br><span class="line">    dataType: <span class="string">'jsonp'</span>,  <span class="comment">// 请求方式为jsonp</span></span><br><span class="line">    jsonpCallback: <span class="string">"onBack"</span>,    <span class="comment">// 自定义回调函数名</span></span><br><span class="line">    data: &#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h5 id="5-Ajax-跨域资源共享（CORS）"><a href="#5-Ajax-跨域资源共享（CORS）" class="headerlink" title="5.Ajax: 跨域资源共享（CORS）"></a>5.Ajax: 跨域资源共享（CORS）</h5><p>普通跨域请求：只要服务端设置Access-Control-Allow-Origin即可，前端无须设置，若要带cookie请求：前后端都需要设置。</p>
<p>原生ajax实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest(); <span class="comment">// IE8/9需用window.XDomainRequest兼容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">xhr.open(<span class="string">'post'</span>, <span class="string">'http://www.domain2.com:8080/login'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">xhr.send(<span class="string">'user=admin'</span>);</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        alert(xhr.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>jQuery ajax实现：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    ...</span><br><span class="line">   xhrFields: &#123;</span><br><span class="line">       withCredentials: <span class="literal">true</span>    <span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">   &#125;,</span><br><span class="line">   crossDomain: <span class="literal">true</span>,   <span class="comment">// 会让请求头中包含跨域的额外信息，但不会含cookie</span></span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">浏览器同源政策及其规避方法 - 阮一峰</a></p>
<p><a href="https://segmentfault.com/a/1190000011145364" target="_blank" rel="noopener">前端常见跨域解决方案（全）</a></p>
<p><a href="https://juejin.im/post/5e948bbbf265da47f2561705" target="_blank" rel="noopener">10种跨域解决方案</a></p>
]]></content>
      <categories>
        <category>跨域</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】深拷贝</title>
    <url>/deep-clone/</url>
    <content><![CDATA[<h3 id="一、赋值、浅拷贝与深拷贝的区别"><a href="#一、赋值、浅拷贝与深拷贝的区别" class="headerlink" title="一、赋值、浅拷贝与深拷贝的区别"></a>一、赋值、浅拷贝与深拷贝的区别</h3><p><img src="../images/clone.png" alt="区别"></p>
<a id="more"></a>

<h3 id="二、深拷贝的方法"><a href="#二、深拷贝的方法" class="headerlink" title="二、深拷贝的方法"></a>二、深拷贝的方法</h3><h4 id="1-JSON转换"><a href="#1-JSON转换" class="headerlink" title="1.JSON转换"></a>1.JSON转换</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> targetObj = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(copyObj))</span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(arr))</span><br></pre></td></tr></table></figure>
<p>缺点：</p>
<p>（1）如果对象里有函数,函数无法被拷贝下来</p>
<p>（2）无法拷贝copyObj对象原型链上的属性和方法</p>
<p>（3）当数据的层次很深，会栈溢出</p>
<h4 id="2-普通递归函数"><a href="#2-普通递归函数" class="headerlink" title="2.普通递归函数"></a>2.普通递归函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params"> source </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!isObject(source)) <span class="keyword">return</span> source; <span class="comment">//如果不是对象的话直接返回</span></span><br><span class="line">    <span class="keyword">let</span> target = <span class="built_in">Array</span>.isArray( source ) ? [] : &#123;&#125; <span class="comment">//数组兼容</span></span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">var</span> k <span class="keyword">in</span> source ) &#123;</span><br><span class="line">    	<span class="keyword">if</span> (source.hasOwnProperty(k)) &#123;</span><br><span class="line">    		<span class="keyword">if</span> ( <span class="keyword">typeof</span> source[ k ] === <span class="string">'object'</span> ) &#123;</span><br><span class="line">            	target[ k ] = deepCopy( source[ k ] )</span><br><span class="line">        	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            	target[ k ] = source[ k ]</span><br><span class="line">        	&#125;</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isObject</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> obj === <span class="string">'object'</span> &amp;&amp; obj !== <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>缺点：</p>
<p>（1）无法保持引用</p>
<p>（2）当数据的层次很深，会栈溢出</p>
<h4 id="3-防栈溢出函数"><a href="#3-防栈溢出函数" class="headerlink" title="3.防栈溢出函数"></a>3.防栈溢出函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloneLoop</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> root = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 栈</span></span><br><span class="line">    <span class="keyword">const</span> loopList = [</span><br><span class="line">        &#123;</span><br><span class="line">            parent: root,</span><br><span class="line">            key: <span class="literal">undefined</span>,</span><br><span class="line">            data: x,</span><br><span class="line">        &#125;</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(loopList.length) &#123;</span><br><span class="line">        <span class="comment">// 深度优先</span></span><br><span class="line">        <span class="keyword">const</span> node = loopList.pop();</span><br><span class="line">        <span class="keyword">const</span> parent = node.parent;</span><br><span class="line">        <span class="keyword">const</span> key = node.key;</span><br><span class="line">        <span class="keyword">const</span> data = node.data;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化赋值目标，key为undefined则拷贝到父元素，否则拷贝到子元素</span></span><br><span class="line">        <span class="keyword">let</span> res = parent;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> key !== <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            res = parent[key] = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> data) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.hasOwnProperty(k)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> data[k] === <span class="string">'object'</span>) &#123;</span><br><span class="line">                    <span class="comment">// 下一次循环</span></span><br><span class="line">                    loopList.push(&#123;</span><br><span class="line">                        parent: res,</span><br><span class="line">                        key: k,</span><br><span class="line">                        data: data[k],</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res[k] = data[k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优点：</p>
<p>（1）不会栈溢出</p>
<p>（2）支持很多层级的数据</p>
<p>参考文章：</p>
<p><a href="https://yanhaijing.com/javascript/2018/10/10/clone-deep/" target="_blank" rel="noopener">深拷贝的终极探索</a></p>
<p><a href="https://segmentfault.com/a/1190000012828382" target="_blank" rel="noopener">一篇文章彻底说清JS的深拷贝/浅拷贝</a></p>
<p><a href="https://github.com/ljianshu/blog/issues/5" target="_blank" rel="noopener">浅拷贝与深拷贝</a></p>
<p><a href="https://juejin.im/post/5c45112e6fb9a04a027aa8fe" target="_blank" rel="noopener">面试题：如何实现一个深拷贝</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】null和undefined的区别</title>
    <url>/differences-between-null-and-undefined/</url>
    <content><![CDATA[<h4 id="1-获得方式不同"><a href="#1-获得方式不同" class="headerlink" title="1.获得方式不同"></a>1.获得方式不同</h4><p>在声明变量但未初始化时，js会自动给变量赋值undefined来完成初始化；而null不会自动赋值，只能由代码生成</p>
<h4 id="2-使用方式不同"><a href="#2-使用方式不同" class="headerlink" title="2.使用方式不同"></a>2.使用方式不同</h4><p>undefined表示变量未初始化的状态；而null通常表示一个空对象指针，如果预计变量未来会存放对象，可以初始化为null，或者为了释放内存引用，也可以赋值null<a id="more"></a></p>
<h4 id="3-转换成数字后的值不同"><a href="#3-转换成数字后的值不同" class="headerlink" title="3.转换成数字后的值不同"></a>3.转换成数字后的值不同</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="literal">null</span>) <span class="comment">//0</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">undefined</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure>

<p>注意：因为undefined派生自null，所以<code>undefined == null; //true</code></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】部署到网站非根目录报错解决</title>
    <url>/deploy-angular-to-non-root-path/</url>
    <content><![CDATA[<h3 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h3><p>需要将angular build后产生的文件，部署到网站的子目录下（比如test.com/dist）来访问，但出现如下图报错：<br><img src="../images/deploy%20.png" alt="deploy .png"></p>
<a id="more"></a>
<h3 id="二、修复"><a href="#二、修复" class="headerlink" title="二、修复"></a>二、修复</h3><p>参考 <a href="https://github.com/angular/angular-cli/issues/1080" target="_blank" rel="noopener">angular-cli官方issue</a></p>
<p>将build后的index.html中的<code>&lt;base href=&quot;/&quot;&gt;</code>修改为正确的路径：<code>&lt;base href=&quot;/dist/&quot;&gt;</code>，即可解决</p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker初尝试</title>
    <url>/docker-first-try/</url>
    <content><![CDATA[<h3 id="方式一：命令行启动（需cd到对应目录下）"><a href="#方式一：命令行启动（需cd到对应目录下）" class="headerlink" title="方式一：命令行启动（需cd到对应目录下）"></a>方式一：命令行启动（需cd到对应目录下）</h3><h5 id="1-编写命令行"><a href="#1-编写命令行" class="headerlink" title="1.编写命令行"></a>1.编写命令行</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container run \</span><br><span class="line">-d \</span><br><span class="line">-p 4000:80  \</span><br><span class="line">--rm \</span><br><span class="line">--name payrollCache \</span><br><span class="line">--volume "$PWD/dist":/usr/share/nginx/html \</span><br><span class="line">--volume "$PWD/nginx":/etc/nginx \</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-修改nginx配置文件"><a href="#2-修改nginx配置文件" class="headerlink" title="2.修改nginx配置文件"></a>2.修改nginx配置文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"> </span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"> </span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    location ~ /api/ &#123;</span><br><span class="line">        proxy_pass   http://172.17.0.1:8097;// docker0接口ip</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方式二：简单的Dockerfile"><a href="#方式二：简单的Dockerfile" class="headerlink" title="方式二：简单的Dockerfile"></a>方式二：简单的Dockerfile</h3><h5 id="1-编写Dockerfile文件"><a href="#1-编写Dockerfile文件" class="headerlink" title="1.编写Dockerfile文件"></a>1.编写Dockerfile文件</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nginx:<span class="number">1.17</span>.<span class="number">6</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=<span class="string">"robin.wang"</span> date=<span class="string">"2019-12-25"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> description=<span class="string">"payrollCache UI with nginx"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./dist/ /usr/share/nginx/html/</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<h5 id="2-生成image"><a href="#2-生成image" class="headerlink" title="2.生成image"></a>2.生成image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image build -t payroll_test:1.0.0 .</span><br></pre></td></tr></table></figure>

<h5 id="3-启动容器"><a href="#3-启动容器" class="headerlink" title="3.启动容器"></a>3.启动容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container run -d -p 4000:80 --rm --name payrollCache payroll_test:1.0.0</span><br></pre></td></tr></table></figure>

<h3 id="方式三：使用多步骤构建"><a href="#方式三：使用多步骤构建" class="headerlink" title="方式三：使用多步骤构建"></a>方式三：使用多步骤构建</h3><h5 id="1-编写Dockerfile"><a href="#1-编写Dockerfile" class="headerlink" title="1.编写Dockerfile"></a>1.编写Dockerfile</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">11.14</span>.<span class="number">0</span> AS builder</span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> package.json package-lock.json /app/</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm install --registry=https://registry.npm.taobao.org</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm run build:prod</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">FROM</span> nginx:<span class="number">1.17</span>.<span class="number">6</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=<span class="string">"robin.wang"</span> date=<span class="string">"2019-12-25"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> description=<span class="string">"payrollCache UI with nginx"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /app/dist/ /usr/share/nginx/html/</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /app/nginx/default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<h5 id="2-编写-dockerignore文件"><a href="#2-编写-dockerignore文件" class="headerlink" title="2.编写.dockerignore文件"></a>2.编写.dockerignore文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.git</span><br><span class="line">node_modules</span><br><span class="line">npm-debug.log</span><br><span class="line">dist</span><br><span class="line">mock</span><br><span class="line">tests</span><br><span class="line">.eslintignore</span><br><span class="line">.eslintrc.js</span><br><span class="line">.gitignore</span><br><span class="line">.travis.yml</span><br><span class="line">jest.config.js</span><br></pre></td></tr></table></figure>

<h5 id="3-生成image"><a href="#3-生成image" class="headerlink" title="3.生成image"></a>3.生成image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image build -t payroll_test:1.0.0 .</span><br></pre></td></tr></table></figure>

<h5 id="4-导出image"><a href="#4-导出image" class="headerlink" title="4.导出image"></a>4.导出image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker save -o payroll.tar payroll:1.0.0</span><br></pre></td></tr></table></figure>

<h5 id="5-导入image"><a href="#5-导入image" class="headerlink" title="5.导入image"></a>5.导入image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker load -i payroll.tar</span><br></pre></td></tr></table></figure>

<h5 id="6-启动容器"><a href="#6-启动容器" class="headerlink" title="6.启动容器"></a>6.启动容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container run -d -p 4000:80 --rm --name payrollCache payroll:1.0.0</span><br></pre></td></tr></table></figure>

<p>参考文章：<br><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">官方安装文档</a><br><a href="https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" target="_blank" rel="noopener">Docker入门教程</a><br><a href="https://www.ruanyifeng.com/blog/2018/02/nginx-docker.html" target="_blank" rel="noopener">Nginx容器教程</a><br><a href="https://jingsam.github.io/2018/10/16/host-in-docker.html" target="_blank" rel="noopener">Docker容器访问宿主机网络</a><br><a href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#leverage-build-cache" target="_blank" rel="noopener">缓存与指令</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>修改docker0默认ip</title>
    <url>/docker0-ip-change/</url>
    <content><![CDATA[<h5 id="1-查看当前docker0接口ip"><a href="#1-查看当前docker0接口ip" class="headerlink" title="1.查看当前docker0接口ip"></a>1.查看当前docker0接口ip</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-切换root用户"><a href="#2-切换root用户" class="headerlink" title="2.切换root用户"></a>2.切换root用户</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su -</span><br></pre></td></tr></table></figure>

<h5 id="3-修改-etc-docker-daemon-json-没有需创建"><a href="#3-修改-etc-docker-daemon-json-没有需创建" class="headerlink" title="3.修改 /etc/docker/daemon.json (没有需创建)"></a>3.修改 /etc/docker/daemon.json (没有需创建)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "bip":"169.254.123.1/24"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-重启docker服务"><a href="#4-重启docker服务" class="headerlink" title="4.重启docker服务"></a>4.重启docker服务</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>参考：<br><a href="https://cloud.tencent.com/developer/article/1470937" target="_blank" rel="noopener">Docker 修改Docker0网桥默认网段</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>安装docker及常用指令</title>
    <url>/docker-installation/</url>
    <content><![CDATA[<h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><h5 id="1-安装repo工具"><a href="#1-安装repo工具" class="headerlink" title="1.安装repo工具"></a>1.安装repo工具</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-安装repo"><a href="#2-安装repo" class="headerlink" title="2.安装repo"></a>2.安装repo</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<h5 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<h5 id="4-加入用户组"><a href="#4-加入用户组" class="headerlink" title="4.加入用户组"></a>4.加入用户组</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>

<h5 id="5-启动服务"><a href="#5-启动服务" class="headerlink" title="5.启动服务"></a>5.启动服务</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>

<h3 id="二、常用指令"><a href="#二、常用指令" class="headerlink" title="二、常用指令"></a>二、常用指令</h3><h5 id="1-列出本机的所有-image-文件"><a href="#1-列出本机的所有-image-文件" class="headerlink" title="1.列出本机的所有 image 文件"></a>1.列出本机的所有 image 文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image ls</span><br></pre></td></tr></table></figure>

<h5 id="2-删除-image-文件"><a href="#2-删除-image-文件" class="headerlink" title="2.删除 image 文件"></a>2.删除 image 文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image rm [imageName]</span><br></pre></td></tr></table></figure>

<h5 id="3-下载image"><a href="#3-下载image" class="headerlink" title="3.下载image"></a>3.下载image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull [imageName]</span><br></pre></td></tr></table></figure>

<h5 id="4-运行image"><a href="#4-运行image" class="headerlink" title="4.运行image"></a>4.运行image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run [imageName]</span><br></pre></td></tr></table></figure>

<h5 id="5-列出本机正在运行的容器"><a href="#5-列出本机正在运行的容器" class="headerlink" title="5.列出本机正在运行的容器"></a>5.列出本机正在运行的容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container ls</span><br></pre></td></tr></table></figure>

<h5 id="6-列出本机所有容器，包括终止运行的容器"><a href="#6-列出本机所有容器，包括终止运行的容器" class="headerlink" title="6.列出本机所有容器，包括终止运行的容器"></a>6.列出本机所有容器，包括终止运行的容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container ls --all</span><br></pre></td></tr></table></figure>

<h5 id="7-删除容器"><a href="#7-删除容器" class="headerlink" title="7.删除容器"></a>7.删除容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container rm [containerId]</span><br></pre></td></tr></table></figure>

<h5 id="8-生成image"><a href="#8-生成image" class="headerlink" title="8.生成image"></a>8.生成image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker image build -t payroll_test:1.0.0 .</span><br></pre></td></tr></table></figure>

<h5 id="9-启动容器"><a href="#9-启动容器" class="headerlink" title="9.启动容器"></a>9.启动容器</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker container run -d -p 4000:80 --rm --name payrollCache payroll_test:1.0.0</span><br></pre></td></tr></table></figure>

<h5 id="10-导出image"><a href="#10-导出image" class="headerlink" title="10.导出image"></a>10.导出image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker save -o payroll.tar payroll:1.0.0</span><br></pre></td></tr></table></figure>

<h5 id="11-导入image"><a href="#11-导入image" class="headerlink" title="11.导入image"></a>11.导入image</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker load -i payroll.tar</span><br></pre></td></tr></table></figure>

<h5 id="12-进入容器内部"><a href="#12-进入容器内部" class="headerlink" title="12.进入容器内部"></a>12.进入容器内部</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it [containerId] bash</span><br></pre></td></tr></table></figure>

<h5 id="13-下载容器内文件"><a href="#13-下载容器内文件" class="headerlink" title="13.下载容器内文件"></a>13.下载容器内文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp [containerId]:/[source path] [dest path]</span><br></pre></td></tr></table></figure>

<p>参考文章：<br><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">官方安装文档</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>【CSS】布局方案总结</title>
    <url>/css-layout-summary/</url>
    <content><![CDATA[<h2 id="一、居中布局"><a href="#一、居中布局" class="headerlink" title="一、居中布局"></a>一、居中布局</h2><h3 id="1-水平居中"><a href="#1-水平居中" class="headerlink" title="1.水平居中"></a>1.水平居中</h3><h4 id="（1）text-align-center"><a href="#（1）text-align-center" class="headerlink" title="（1）text-align:center"></a>（1）text-align:center</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.child&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:inline/inline-block;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.parent&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    text-align:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>优点：兼容性好，甚至可以兼容ie6、ie7</li>
<li>缺点：child里的文字也会水平居中，可以在.child添加text-align:left;还原</li>
</ul>
<h4 id="（2）margin-0-auto"><a href="#（2）margin-0-auto" class="headerlink" title="（2）margin:0 auto;"></a>（2）margin:0 auto;</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width:100px;</span></span></span><br><span class="line"><span class="tag"><span class="string">    margin:0 auto;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="（3）absolute-transform"><a href="#（3）absolute-transform" class="headerlink" title="（3）absolute + transform"></a>（3）absolute + transform</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:relative;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:absolute;</span></span></span><br><span class="line"><span class="tag"><span class="string">    left:50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    transform:translateX(-50%);</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：居中元素不会对其他的产生影响</li>
<li>缺点：transform属于css3内容，兼容性存在一定问题，高版本浏览器需要添加一些前缀</li>
</ul>
<h4 id="（4）flex-justify-content"><a href="#（4）flex-justify-content" class="headerlink" title="（4）flex + justify-content"></a>（4）flex + justify-content</h4><ul>
<li>父元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:flex;</span></span></span><br><span class="line"><span class="tag"><span class="string">    justify-content:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：设置parent即可</li>
<li>缺点：低版本浏览器(ie6 ie7 ie8)不支持</li>
</ul>
<h4 id="（5）浮动元素水平居中"><a href="#（5）浮动元素水平居中" class="headerlink" title="（5）浮动元素水平居中"></a>（5）浮动元素水平居中</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是浮动的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我也是居中的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.box&#123;</span><br><span class="line">    float:left;</span><br><span class="line">    position:relative;</span><br><span class="line">    left:50%;</span><br><span class="line">&#125;</span><br><span class="line">p&#123;</span><br><span class="line">    float:left;</span><br><span class="line">    position:relative;</span><br><span class="line">    right:50%; //或left: -50%</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="2-垂直居中"><a href="#2-垂直居中" class="headerlink" title="2.垂直居中"></a>2.垂直居中</h3><h4 id="（1）table-cell-vertical-align"><a href="#（1）table-cell-vertical-align" class="headerlink" title="（1）table-cell + vertical-align"></a>（1）table-cell + vertical-align</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:table-cell;</span></span></span><br><span class="line"><span class="tag"><span class="string">    vertical-align:middle;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：兼容性较好，ie8以上均支持</li>
</ul>
<h4 id="（2）absolute-transform"><a href="#（2）absolute-transform" class="headerlink" title="（2）absolute + transform"></a>（2）absolute + transform</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:relative;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:absolute;</span></span></span><br><span class="line"><span class="tag"><span class="string">    top:50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    transform:translateY(-50%);</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：居中元素不会对其他的产生影响</li>
<li>缺点：transform属于css3内容，兼容性存在一定问题，高版本浏览器需要添加一些前缀</li>
</ul>
<h4 id="（3）absolute-margin-auto"><a href="#（3）absolute-margin-auto" class="headerlink" title="（3）absolute + margin:auto"></a>（3）absolute + margin:auto</h4><ul>
<li>父元素：块</li>
<li>子元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:relative;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:absolute;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width: 100px;</span></span></span><br><span class="line"><span class="tag"><span class="string">    height: 100px;</span></span></span><br><span class="line"><span class="tag"><span class="string">    top:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    bottom:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    margin:auto;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：兼容性好</li>
</ul>
<h4 id="（4）flex-align-items"><a href="#（4）flex-align-items" class="headerlink" title="（4）flex + align-items"></a>（4）flex + align-items</h4><ul>
<li>父元素：块<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:flex;</span></span></span><br><span class="line"><span class="tag"><span class="string">    align-items:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure></li>
<li>优点：只设置parent</li>
<li>缺点：兼容性问题</li>
</ul>
<h4 id="（5）line-height法"><a href="#（5）line-height法" class="headerlink" title="（5）line-height法"></a>（5）line-height法</h4><ul>
<li>父元素：块，定高</li>
<li>子元素：单行的button、图片或者文本<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#father&#123;</span><br><span class="line">    height:100px;</span><br><span class="line">    line-height:100px;</span><br><span class="line">    background:#999;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="（6）多行文本垂直居中"><a href="#（6）多行文本垂直居中" class="headerlink" title="（6）多行文本垂直居中"></a>（6）多行文本垂直居中</h4><ul>
<li>父元素：块</li>
<li>子元素：行<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.box &#123;line-height:300px;&#125;</span><br><span class="line">.box&gt;span &#123;</span><br><span class="line">    display:inline-block;</span><br><span class="line">    line-height:normal;</span><br><span class="line">    vertical-align:middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="3-水平垂直居中"><a href="#3-水平垂直居中" class="headerlink" title="3.水平垂直居中"></a>3.水平垂直居中</h3><h4 id="（1）absolute-transform"><a href="#（1）absolute-transform" class="headerlink" title="（1）absolute + transform"></a>（1）absolute + transform</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:relative;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:absolute;</span></span></span><br><span class="line"><span class="tag"><span class="string">    left:50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    top:50%;</span></span></span><br><span class="line"><span class="tag"><span class="string">    transform:tranplate(-50%,-50%);</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>

<h4 id="（2）inline-block-text-align-table-cell-vertical-align"><a href="#（2）inline-block-text-align-table-cell-vertical-align" class="headerlink" title="（2）inline-block + text-align + table-cell + vertical-align"></a>（2）inline-block + text-align + table-cell + vertical-align</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    text-align:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:table-cell;</span></span></span><br><span class="line"><span class="tag"><span class="string">    vertical-align:middle;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:inline-block;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>

<h4 id="（3）flex-justify-content-align-items"><a href="#（3）flex-justify-content-align-items" class="headerlink" title="（3）flex + justify-content + align-items"></a>（3）flex + justify-content + align-items</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    display:flex;</span></span></span><br><span class="line"><span class="tag"><span class="string">    justify-content:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">    align-items:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>

<h4 id="（4）absolute-margin-auto"><a href="#（4）absolute-margin-auto" class="headerlink" title="（4）absolute + margin:auto"></a>（4）absolute + margin:auto</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child&gt;DEMO&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;/div&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">.parent &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:relative;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">.child &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    position:absolute;</span></span></span><br><span class="line"><span class="tag"><span class="string">    width: 100px;</span></span></span><br><span class="line"><span class="tag"><span class="string">    height: 100px;</span></span></span><br><span class="line"><span class="tag"><span class="string">    top:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    bottom:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    left:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    right:0;</span></span></span><br><span class="line"><span class="tag"><span class="string">    margin:auto;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="二、单列布局"><a href="#二、单列布局" class="headerlink" title="二、单列布局"></a>二、单列布局</h2><p><img src="../images/css-layout.png" alt=""></p>
<h3 id="1-一栏布局"><a href="#1-一栏布局" class="headerlink" title="1.一栏布局"></a>1.一栏布局</h3><p>通过对header,content,footer统一设置width：1000px;或者max-width：1000px(这两者的区别是当屏幕小于1000px时，前者会出现滚动条，后者则不会，显示出实际宽度);然后设置margin:auto实现居中即可得到</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> auto; </span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-一栏布局-通栏"><a href="#2-一栏布局-通栏" class="headerlink" title="2.一栏布局(通栏)"></a>2.一栏布局(通栏)</h3><p>header、footer的内容宽度不设置，块级元素充满整个屏幕，但header、content和footer的内容区设置同一个width，并通过margin:auto实现居中</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: darkgray;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、多列布局"><a href="#三、多列布局" class="headerlink" title="三、多列布局"></a>三、多列布局</h2><h3 id="1-两栏布局"><a href="#1-两栏布局" class="headerlink" title="1.两栏布局"></a>1.两栏布局</h3><h4 id="（1）float-overflow-BFC"><a href="#（1）float-overflow-BFC" class="headerlink" title="（1）float + overflow(BFC)"></a>（1）float + overflow(BFC)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.left &#123;</span><br><span class="line">    float:left;</span><br><span class="line">    width:100px;</span><br><span class="line">    margin-right:20px;</span><br><span class="line">&#125;</span><br><span class="line">.right &#123;</span><br><span class="line">    overflow:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>优点：简单</li>
<li>缺点：不支持IE6</li>
</ul>
<h4 id="（2）float-margin-padding"><a href="#（2）float-margin-padding" class="headerlink" title="（2）float + margin/padding"></a>（2）float + margin/padding</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.left &#123;</span><br><span class="line">    float:left;</span><br><span class="line">    width:100px;</span><br><span class="line">&#125;</span><br><span class="line">.right &#123;</span><br><span class="line">    margin-left/padding-left:120px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>优点：简单，容易理解</li>
<li>缺点：兼容性存在一定问题，ie6下有3px的bug。right下的p清除浮动将产生bug</li>
</ul>
<h4 id="（3）table"><a href="#（3）table" class="headerlink" title="（3）table"></a>（3）table</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.parent &#123;</span><br><span class="line">    display:table;</span><br><span class="line">    width:100%;</span><br><span class="line">    table-layout:fixed;//提升表格渲染加载速度</span><br><span class="line">&#125;</span><br><span class="line">.left &#123;</span><br><span class="line">    width:100px;</span><br><span class="line">&#125;</span><br><span class="line">.right,.left &#123;</span><br><span class="line">    display:table-cell;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="（4）flex"><a href="#（4）flex" class="headerlink" title="（4）flex"></a>（4）flex</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.parent &#123;</span><br><span class="line">    display:flex;</span><br><span class="line">&#125;</span><br><span class="line">.left &#123;</span><br><span class="line">    width:100px;</span><br><span class="line">    margin-right:20px;</span><br><span class="line">&#125;</span><br><span class="line">.right &#123;</span><br><span class="line">    flex:1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-三栏布局"><a href="#2-三栏布局" class="headerlink" title="2. 三栏布局"></a>2. 三栏布局</h3><h4 id="（1）float-overflow-BFC-1"><a href="#（1）float-overflow-BFC-1" class="headerlink" title="（1）float + overflow(BFC)"></a>（1）float + overflow(BFC)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>center<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.left,.center &#123;</span><br><span class="line">    float:left;</span><br><span class="line">    width:100px;</span><br><span class="line">    margin-right:20px;</span><br><span class="line">&#125;</span><br><span class="line">.right &#123;</span><br><span class="line">    overflow:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="（2）圣杯布局"><a href="#（2）圣杯布局" class="headerlink" title="（2）圣杯布局"></a>（2）圣杯布局</h4><p><strong>原理：</strong></p>
<p>a. 外面一个container，里面三个div(middle要在前，left , right)，height都设为100%</p>
<p>b. 三个div都浮动</p>
<p>c. middle宽度100%，left: margin-left:-100%拉上来，right:margin-left:-自身宽度拉上来，但会遮盖middle两边</p>
<p>d. container加左右padding留空间，left和right相对定位，往左右拉开，即可</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    html,body &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line">    h1 &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> &#123;</span></span><br><span class="line">      height: 100%;</span><br><span class="line">      overflow: auto;</span><br><span class="line">      padding: 0 200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">      background-color: green;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>,<span class="selector-id">#right</span> &#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 100%;</span><br><span class="line">      background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>&#123;</span></span><br><span class="line">      margin-left: -100%;</span><br><span class="line">      position: relative;</span><br><span class="line">      left: -200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#right</span>&#123;</span></span><br><span class="line">      position: relative;</span><br><span class="line">      right: -200px;</span><br><span class="line">      margin-left: -200px;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"middle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Main content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Left sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Right sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do llum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>缺点：</strong></p>
<ul>
<li>center部分的最小宽度不能小于left部分的宽度，否则会left部分掉到下一行</li>
<li>如果其中一列内容高度拉长，其他两列的背景并不会自动填充</li>
</ul>
<h4 id="（3）双飞翼布局"><a href="#（3）双飞翼布局" class="headerlink" title="（3）双飞翼布局"></a>（3）双飞翼布局</h4><p><strong>原理：</strong></p>
<p>a.外面一个container，middle,left,right三个div，middle要加一个wrap div，height都设为100%</p>
<p>b. 三个div都浮动</p>
<p>c. middle宽度100%，left: margin-left:-100%拉上来，right:margin-left:-自身宽度拉上来，但会遮盖middle两边</p>
<p>d.middle加左右margin来留空间</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    html,body &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line">    h1 &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> &#123;</span></span><br><span class="line">      overflow: auto;</span><br><span class="line">      height: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> <span class="selector-id">#wrap</span> &#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 100%;</span><br><span class="line">      background-color: green;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>,<span class="selector-id">#right</span> &#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      height: 100%;</span><br><span class="line">      width: 200px;</span><br><span class="line">      background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>&#123;</span></span><br><span class="line">      margin-left: -100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#right</span>&#123;</span></span><br><span class="line">      margin-left: -200px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#middle</span> &#123;</span></span><br><span class="line">      margin: 0 200px;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"middle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Main content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Left sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Right sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do llum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>缺点：</strong></p>
<ul>
<li>多加一层 dom 树节点，增加渲染树生成的计算量</li>
</ul>
<h4 id="（4）浮动布局"><a href="#（4）浮动布局" class="headerlink" title="（4）浮动布局"></a>（4）浮动布局</h4><p><strong>原理：</strong></p>
<p>a.三个div分别按left、right、middle放置</p>
<p>b.left左浮动，right右浮动</p>
<p>c.middle通过添加左右外边距来留空间</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    html,body &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line">    &#125;</span><br><span class="line">    h1 &#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span><span class="selector-pseudo">:orange</span>;</span></span><br><span class="line"><span class="css">      <span class="comment">/*margin:0 210px;*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>,<span class="selector-id">#right</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#left</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#right</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">float</span><span class="selector-pseudo">:right</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Left sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Right sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Main content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do llum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="（5）flex布局"><a href="#（5）flex布局" class="headerlink" title="（5）flex布局"></a>（5）flex布局</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.main</span> &#123;</span></span><br><span class="line">            flex-grow: 1;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">        order: -1;</span><br><span class="line">        flex: 0 1 200px;</span><br><span class="line">        margin-right: 20px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background-color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        flex: 0 1 100px;</span><br><span class="line">            margin-left: 20px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background-color: green;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="（6）table布局"><a href="#（6）table布局" class="headerlink" title="（6）table布局"></a>（6）table布局</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span>, <span class="selector-class">.main</span>, <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        display: table-cell;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line">        background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.right</span> &#123;</span></span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="四、等分布局"><a href="#四、等分布局" class="headerlink" title="四、等分布局"></a>四、等分布局</h2><h4 id="（1）float-box-sizing"><a href="#（1）float-box-sizing" class="headerlink" title="（1）float + box-sizing"></a>（1）float + box-sizing</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.parent&#123;</span><br><span class="line">    margin-left: -20px;//l增加g</span><br><span class="line">&#125;</span><br><span class="line">.column&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 25%;</span><br><span class="line">    padding-left: 20px;</span><br><span class="line">    box-sizing: border-box;//包含padding区域 w+g</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="（2）table"><a href="#（2）table" class="headerlink" title="（2）table"></a>（2）table</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent-fix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.parent-fix&#123;</span><br><span class="line">    margin-left: -20px;//l+g</span><br><span class="line">&#125;</span><br><span class="line">.parent&#123;</span><br><span class="line">    display: table;</span><br><span class="line">    width:100%;</span><br><span class="line">    table-layout: fixed;</span><br><span class="line">&#125;</span><br><span class="line">.column&#123;</span><br><span class="line">    display: table-cell;</span><br><span class="line">    padding-left: 20px;//w+g</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="（3）flex"><a href="#（3）flex" class="headerlink" title="（3）flex"></a>（3）flex</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.parent&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.column&#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">&#125;</span><br><span class="line">.column+.column&#123;</span><br><span class="line">    margin-left:20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="五、等高布局"><a href="#五、等高布局" class="headerlink" title="五、等高布局"></a>五、等高布局</h2><h4 id="1-正padding-负margin"><a href="#1-正padding-负margin" class="headerlink" title="(1)正padding+负margin"></a>(1)正padding+负margin</h4><p>在圣杯布局基础上：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.center</span>,</span><br><span class="line"><span class="selector-class">.left</span>,</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">10000px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: -<span class="number">10000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">220px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">220px</span>;</span><br><span class="line">  overflow: hidden;//把溢出背景切掉</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-table布局"><a href="#2-table布局" class="headerlink" title="(2)table布局"></a>(2)table布局</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container table"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"containerInner tableRow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column tableCell cell1"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left aside"</span>&gt;</span></span><br><span class="line">            ....</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column tableCell cell2"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content section"</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column tableCell cell3"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right aside"</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.table</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tableRow</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: table-row;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tableCell</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">33%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cell1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cell2</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0f0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cell3</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#00f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-边框和定位"><a href="#3-边框和定位" class="headerlink" title="(3)边框和定位"></a>(3)边框和定位</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mainContent"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sidebar"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#mainContent</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">220px</span> solid <span class="number">#dfdfdf</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">740px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;  </span><br><span class="line">  <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#dfdfdf</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">740px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="六、粘连布局"><a href="#六、粘连布局" class="headerlink" title="六、粘连布局"></a>六、粘连布局</h2><p><img src="../images/css-layout2.png" alt=""></p>
<p><strong>特点：</strong></p>
<ul>
<li>有一块内容main，当main的高度足够长的时候，紧跟在main后面的元素footer会跟在main元素的后面</li>
<li>当main元素比较短的时候(比如小于屏幕的高度),我们期望这个footer元素能够“粘连”在屏幕的底部</li>
</ul>
<p><strong>步骤：</strong></p>
<ul>
<li>footer必须是一个独立的结构，与wrap没有任何嵌套关系</li>
<li>wrap区域的高度通过设置min-height，变为视口高度</li>
<li>footer要使用margin为负来确定自己的位置</li>
<li>在main区域需要设置 padding-bottom。这也是为了防止负 margin 导致 footer 覆盖任何实际内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">        main <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        main <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        main <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">       <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">       <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="selector-tag">html</span>,</span><br><span class="line">     <span class="selector-tag">body</span> &#123;</span><br><span class="line">       height: 100%;//高度一层层继承下来</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="selector-id">#wrap</span> &#123;</span><br><span class="line">       <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">       <span class="attribute">background</span>: pink;</span><br><span class="line">       <span class="attribute">text-align</span>: center;</span><br><span class="line">       <span class="attribute">overflow</span>: hidden;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="selector-id">#wrap</span> <span class="selector-class">.main</span> &#123;</span><br><span class="line">       <span class="attribute">padding-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="selector-id">#footer</span> &#123;</span><br><span class="line">       <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">       <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">       <span class="attribute">background</span>: deeppink;</span><br><span class="line">       <span class="attribute">text-align</span>: center;</span><br><span class="line">       <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://segmentfault.com/a/1190000013565024" target="_blank" rel="noopener">CSS布局解决方案（终结版）</a></p>
<p><a href="http://www.zhangxinxu.com/wordpress/2009/11/%E6%88%91%E7%86%9F%E7%9F%A5%E7%9A%84%E4%B8%89%E7%A7%8D%E4%B8%89%E6%A0%8F%E7%BD%91%E9%A1%B5%E5%AE%BD%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94%E5%B8%83%E5%B1%80%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">我熟知的三种三栏网页宽度自适应布局方法</a></p>
<p><a href="https://segmentfault.com/a/1190000016956641" target="_blank" rel="noopener">几种常见的CSS布局</a></p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>js复杂判断的简化</title>
    <url>/elegant-way-for-complex-judgment/</url>
    <content><![CDATA[<h3 id="一、一元判断，存到Map里"><a href="#一、一元判断，存到Map里" class="headerlink" title="一、一元判断，存到Map里"></a>一、一元判断，存到Map里</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">  [<span class="number">1</span>, [<span class="string">'processing'</span>,<span class="string">'IndexPage'</span>]],</span><br><span class="line">  [<span class="number">2</span>, [<span class="string">'fail'</span>,<span class="string">'FailPage'</span>]],</span><br><span class="line">  [<span class="number">3</span>, [<span class="string">'fail'</span>,<span class="string">'FailPage'</span>]],</span><br><span class="line">  [<span class="number">4</span>, [<span class="string">'success'</span>,<span class="string">'SuccessPage'</span>]],</span><br><span class="line">  [<span class="number">5</span>, [<span class="string">'cancel'</span>,<span class="string">'CancelPage'</span>]],</span><br><span class="line">  [<span class="string">'default'</span>, [<span class="string">'other'</span>,<span class="string">'Index'</span>]]</span><br><span class="line">])</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 按钮点击事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>status 活动状态：1 开团进行中 2 开团失败 3 商品售罄 4 开团成功 5 系统取消</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> onButtonClick = <span class="function">(<span class="params">status</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> action = actions.get(status) || actions.get(<span class="string">'default'</span>)</span><br><span class="line">  sendLog(action[<span class="number">0</span>])</span><br><span class="line">  jumpTo(action[<span class="number">1</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="二、多元判断，将condition拼接成字符串存到Map里"><a href="#二、多元判断，将condition拼接成字符串存到Map里" class="headerlink" title="二、多元判断，将condition拼接成字符串存到Map里"></a>二、多元判断，将condition拼接成字符串存到Map里</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">  [<span class="string">'guest_1'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'guest_2'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'guest_3'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'guest_4'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'guest_5'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'master_1'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'master_2'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'master_3'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'master_4'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'master_5'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [<span class="string">'default'</span>, ()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 按钮点击事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>identity 身份标识：guest客态 master主态</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>status 活动状态：1 开团进行中 2 开团失败 3 开团成功 4 商品售罄 5 有库存未开团</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> onButtonClick = <span class="function">(<span class="params">identity,status</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> action = actions.get(<span class="string">`<span class="subst">$&#123;identity&#125;</span>_<span class="subst">$&#123;status&#125;</span>`</span>) || actions.get(<span class="string">'default'</span>)</span><br><span class="line">  action.call(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="三、多元判断，将condition存为Object存到Map里"><a href="#三、多元判断，将condition存为Object存到Map里" class="headerlink" title="三、多元判断，将condition存为Object存到Map里"></a>三、多元判断，将condition存为Object存到Map里</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">  [&#123;<span class="attr">identity</span>:<span class="string">'guest'</span>,<span class="attr">status</span>:<span class="number">1</span>&#125;,()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  [&#123;<span class="attr">identity</span>:<span class="string">'guest'</span>,<span class="attr">status</span>:<span class="number">2</span>&#125;,()=&gt;&#123;<span class="comment">/*do sth*/</span>&#125;],</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> onButtonClick = <span class="function">(<span class="params">identity,status</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> action = [...actions].filter(<span class="function">(<span class="params">[key,value]</span>)=&gt;</span>(key.identity == identity &amp;&amp; key.status == status))</span><br><span class="line">  action.forEach(<span class="function">(<span class="params">[key,value]</span>)=&gt;</span>value.call(<span class="keyword">this</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、多元判断，将condition写作正则存到Map里"><a href="#四、多元判断，将condition写作正则存到Map里" class="headerlink" title="四、多元判断，将condition写作正则存到Map里"></a>四、多元判断，将condition写作正则存到Map里</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = <span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> functionA = <span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="comment">/*do sth*/</span>&#125;</span><br><span class="line">  <span class="keyword">const</span> functionB = <span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="comment">/*do sth*/</span>&#125;</span><br><span class="line">  <span class="keyword">const</span> functionC = <span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="comment">/*send log*/</span>&#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">    [<span class="regexp">/^guest_[1-4]$/</span>,functionA],</span><br><span class="line">    [<span class="regexp">/^guest_5$/</span>,functionB],</span><br><span class="line">    [<span class="regexp">/^guest_.*$/</span>,functionC],</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  ])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> onButtonClick = <span class="function">(<span class="params">identity,status</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> action = [...actions()].filter(<span class="function">(<span class="params">[key,value]</span>)=&gt;</span>(key.test(<span class="string">`<span class="subst">$&#123;identity&#125;</span>_<span class="subst">$&#123;status&#125;</span>`</span>)))</span><br><span class="line">  action.forEach(<span class="function">(<span class="params">[key,value]</span>)=&gt;</span>value.call(<span class="keyword">this</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6844903705058213896" target="_blank" rel="noopener">JavaScript 复杂判断的更优雅写法</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】ES6 class和普通构造函数的区别</title>
    <url>/es6-class-difference-between-es5-constructor/</url>
    <content><![CDATA[<p>1.类的内部所有定义的方法，都是不可枚举的（但是在es5中prototype的方法是可以进行枚举的）</p>
<p>2.类的构造函数，不使用new是没法调用的，会报错。这是它跟普通构造函数的一个主要区别，后者不用new也可以执行</p>
<p>3.Class不存在变量提升（hoist），这一点与ES5完全不同</p>
<a id="more"></a>

<p>4.ES5的继承，实质是先创造子类的实例对象this，然后再将父类的方法添加到this上面（Parent.apply(this)）。ES6的继承机制完全不同，实质是先创造父类的实例对象this（所以必须先调用super方法），然后再用子类的构造函数修改this。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ES6</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> sayHello()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sayName()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'my name is '</span> + <span class="keyword">this</span>.name);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name, age)&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    sayAge()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'my age is '</span> + <span class="keyword">this</span>.age);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> parent = <span class="keyword">new</span> Parent(<span class="string">'Parent'</span>);</span><br><span class="line"><span class="keyword">let</span> child = <span class="keyword">new</span> Child(<span class="string">'Child'</span>, <span class="number">18</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'parent: '</span>, parent); <span class="comment">// parent:  Parent &#123;name: "Parent"&#125;</span></span><br><span class="line">Parent.sayHello(); <span class="comment">// hello</span></span><br><span class="line">parent.sayName(); <span class="comment">// my name is Parent</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'child: '</span>, child); <span class="comment">// child:  Child &#123;name: "Child", age: 18&#125;</span></span><br><span class="line">Child.sayHello(); <span class="comment">// hello</span></span><br><span class="line">child.sayName(); <span class="comment">// my name is Child</span></span><br><span class="line">child.sayAge(); <span class="comment">// my age is 18</span></span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="http://www.fly63.com/article/detial/417" target="_blank" rel="noopener">ES6 class创建对象和传统方法生成对象的区别</a></p>
<p><a href="http://es6.ruanyifeng.com/#docs/class" target="_blank" rel="noopener">Class 的基本语法</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【ES6】let、const、解构、字符串、数值的扩展</title>
    <url>/es6-let-string-number-destruction/</url>
    <content><![CDATA[<h3 id="一、let和const命令"><a href="#一、let和const命令" class="headerlink" title="一、let和const命令"></a>一、let和const命令</h3><h4 id="1-特点："><a href="#1-特点：" class="headerlink" title="1.特点："></a>1.特点：</h4><ul>
<li>块级作用域，防止污染全局变量</li>
<li>没有变量提升，防止意外错误</li>
<li>不可重复声明变量</li>
<li>不可在声明前使用该变量<a id="more"></a>
<h4 id="2-注意："><a href="#2-注意：" class="headerlink" title="2.注意："></a>2.注意：</h4></li>
<li>const本质是保证变量指向的内存地址不得改变，所以对于对象，对象的属性依旧可以更改</li>
<li>let、const声明的变量，不再默认是全局对象的属性</li>
</ul>
<h4 id="3-示例："><a href="#3-示例：" class="headerlink" title="3.示例："></a>3.示例：</h4><ul>
<li>for循环中的i用let声明</li>
<li>经典闭包问题解决</li>
</ul>
<h3 id="二、变量的解构赋值"><a href="#二、变量的解构赋值" class="headerlink" title="二、变量的解构赋值"></a>二、变量的解构赋值</h3><h4 id="1-语法："><a href="#1-语法：" class="headerlink" title="1.语法："></a>1.语法：</h4><h5 id="（1）数组的解构赋值"><a href="#（1）数组的解构赋值" class="headerlink" title="（1）数组的解构赋值"></a>（1）数组的解构赋值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> [foo, [[bar], baz]] = [<span class="number">1</span>, [[<span class="number">2</span>], <span class="number">3</span>]];</span><br><span class="line">foo <span class="comment">// 1</span></span><br><span class="line">bar <span class="comment">// 2</span></span><br><span class="line">baz <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [ , , third] = [<span class="string">"foo"</span>, <span class="string">"bar"</span>, <span class="string">"baz"</span>];</span><br><span class="line">third <span class="comment">// "baz"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [x, , y] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">x <span class="comment">// 1</span></span><br><span class="line">y <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [head, ...tail] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">head <span class="comment">// 1</span></span><br><span class="line">tail <span class="comment">// [2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [x, y, ...z] = [<span class="string">'a'</span>];</span><br><span class="line">x <span class="comment">// "a"</span></span><br><span class="line">y <span class="comment">// undefined</span></span><br><span class="line">z <span class="comment">// []</span></span><br></pre></td></tr></table></figure>

<h5 id="（2）默认值："><a href="#（2）默认值：" class="headerlink" title="（2）默认值："></a>（2）默认值：</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> [foo = <span class="literal">true</span>] = [];</span><br><span class="line">foo <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [x, y = <span class="string">'b'</span>] = [<span class="string">'a'</span>]; <span class="comment">// x='a', y='b'</span></span><br><span class="line"><span class="keyword">let</span> [x, y = <span class="string">'b'</span>] = [<span class="string">'a'</span>, <span class="literal">undefined</span>]; <span class="comment">// x='a', y='b'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> &#123;x = <span class="number">3</span>&#125; = &#123;&#125;;</span><br><span class="line">x <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> &#123;x, y = <span class="number">5</span>&#125; = &#123;<span class="attr">x</span>: <span class="number">1</span>&#125;;</span><br><span class="line">x <span class="comment">// 1</span></span><br><span class="line">y <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> &#123;<span class="attr">x</span>: y = <span class="number">3</span>&#125; = &#123;&#125;;</span><br><span class="line">y <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> &#123;<span class="attr">x</span>: y = <span class="number">3</span>&#125; = &#123;<span class="attr">x</span>: <span class="number">5</span>&#125;;</span><br><span class="line">y <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> &#123; <span class="attr">message</span>: msg = <span class="string">'Something went wrong'</span> &#125; = &#123;&#125;;</span><br><span class="line">msg <span class="comment">// "Something went wrong"</span></span><br></pre></td></tr></table></figure>

<h5 id="3-对象的解构赋值"><a href="#3-对象的解构赋值" class="headerlink" title="(3)对象的解构赋值"></a>(3)对象的解构赋值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; bar, foo &#125; = &#123; <span class="attr">foo</span>: <span class="string">"aaa"</span>, <span class="attr">bar</span>: <span class="string">"bbb"</span> &#125;;</span><br><span class="line">foo <span class="comment">// "aaa"</span></span><br><span class="line">bar <span class="comment">// "bbb"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; baz &#125; = &#123; <span class="attr">foo</span>: <span class="string">"aaa"</span>, <span class="attr">bar</span>: <span class="string">"bbb"</span> &#125;;</span><br><span class="line">baz <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">foo</span>: baz &#125; = &#123; <span class="attr">foo</span>: <span class="string">'aaa'</span>, <span class="attr">bar</span>: <span class="string">'bbb'</span> &#125;;</span><br><span class="line">baz <span class="comment">// "aaa"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">first</span>: <span class="string">'hello'</span>, <span class="attr">last</span>: <span class="string">'world'</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">first</span>: f, <span class="attr">last</span>: l &#125; = obj;</span><br><span class="line">f <span class="comment">// 'hello'</span></span><br><span class="line">l <span class="comment">// 'world'</span></span><br></pre></td></tr></table></figure>
<h5 id="4-字符串的解构赋值"><a href="#4-字符串的解构赋值" class="headerlink" title="(4)字符串的解构赋值"></a>(4)字符串的解构赋值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> [a, b, c, d, e] = <span class="string">'hello'</span>;</span><br><span class="line">a <span class="comment">// "h"</span></span><br><span class="line">b <span class="comment">// "e"</span></span><br><span class="line">c <span class="comment">// "l"</span></span><br><span class="line">d <span class="comment">// "l"</span></span><br><span class="line">e <span class="comment">// "o"</span></span><br></pre></td></tr></table></figure>
<h5 id="5-函数参数的解构赋值"><a href="#5-函数参数的解构赋值" class="headerlink" title="(5)函数参数的解构赋值"></a>(5)函数参数的解构赋值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">&#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125; = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> [x, y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">move(&#123;<span class="attr">x</span>: <span class="number">3</span>, <span class="attr">y</span>: <span class="number">8</span>&#125;); <span class="comment">// [3, 8]</span></span><br><span class="line">move(&#123;<span class="attr">x</span>: <span class="number">3</span>&#125;); <span class="comment">// [3, 0]</span></span><br><span class="line">move(&#123;&#125;); <span class="comment">// [0, 0]</span></span><br><span class="line">move(); <span class="comment">// [0, 0]</span></span><br></pre></td></tr></table></figure>

<h4 id="2-注意：-1"><a href="#2-注意：-1" class="headerlink" title="2.注意："></a>2.注意：</h4><ul>
<li>只有变量对应的值显示设置为undefined，默认值才会生效，如果为null，则不生效</li>
<li>对象的解构赋值，变量必须与属性同名，才能取到正确的值</li>
</ul>
<h4 id="3-示例：-1"><a href="#3-示例：-1" class="headerlink" title="3.示例："></a>3.示例：</h4><h5 id="1-数组解构"><a href="#1-数组解构" class="headerlink" title="(1)数组解构"></a>(1)数组解构</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]].map(<span class="function">(<span class="params">[a, b]</span>) =&gt;</span> a + b);</span><br><span class="line"><span class="comment">// [ 3, 7 ]</span></span><br></pre></td></tr></table></figure>

<h5 id="2-交换变量的值"><a href="#2-交换变量的值" class="headerlink" title="(2)交换变量的值"></a>(2)交换变量的值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> y = <span class="number">2</span>;</span><br><span class="line">[x, y] = [y, x];</span><br></pre></td></tr></table></figure>
<h5 id="3-从函数返回多个值"><a href="#3-从函数返回多个值" class="headerlink" title="(3)从函数返回多个值"></a>(3)从函数返回多个值</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> [a, b, c] = example();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个对象</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    foo: <span class="number">1</span>,</span><br><span class="line">    bar: <span class="number">2</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123; foo, bar &#125; = example();</span><br></pre></td></tr></table></figure>
<h5 id="4-提取JSON数据"><a href="#4-提取JSON数据" class="headerlink" title="(4)提取JSON数据"></a>(4)提取JSON数据</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonData = &#123;</span><br><span class="line">  id: <span class="number">42</span>,</span><br><span class="line">  status: <span class="string">"OK"</span>,</span><br><span class="line">  data: [<span class="number">867</span>, <span class="number">5309</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; id, status, <span class="attr">data</span>: number &#125; = jsonData;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(id, status, number);</span><br><span class="line"><span class="comment">// 42, "OK", [867, 5309]</span></span><br></pre></td></tr></table></figure>

<h3 id="三、字符串的扩展"><a href="#三、字符串的扩展" class="headerlink" title="三、字符串的扩展"></a>三、字符串的扩展</h3><h4 id="1-新增方法："><a href="#1-新增方法：" class="headerlink" title="1.新增方法："></a>1.新增方法：</h4><h5 id="1-includes-返回布尔值，表示是否找到了参数字符串"><a href="#1-includes-返回布尔值，表示是否找到了参数字符串" class="headerlink" title="(1)includes:返回布尔值，表示是否找到了参数字符串"></a>(1)includes:返回布尔值，表示是否找到了参数字符串</h5><h5 id="2-startsWith-返回布尔值，表示参数字符串是否在原字符串的头部"><a href="#2-startsWith-返回布尔值，表示参数字符串是否在原字符串的头部" class="headerlink" title="(2)startsWith:返回布尔值，表示参数字符串是否在原字符串的头部"></a>(2)startsWith:返回布尔值，表示参数字符串是否在原字符串的头部</h5><h5 id="3-endsWith-返回布尔值，表示参数字符串是否在原字符串的尾部"><a href="#3-endsWith-返回布尔值，表示参数字符串是否在原字符串的尾部" class="headerlink" title="(3)endsWith:返回布尔值，表示参数字符串是否在原字符串的尾部"></a>(3)endsWith:返回布尔值，表示参数字符串是否在原字符串的尾部</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> s = <span class="string">'Hello world!'</span>;</span><br><span class="line"></span><br><span class="line">s.startsWith(<span class="string">'Hello'</span>) <span class="comment">// true</span></span><br><span class="line">s.endsWith(<span class="string">'!'</span>) <span class="comment">// true</span></span><br><span class="line">s.includes(<span class="string">'o'</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p>(4)repeat:返回一个新字符串，表示将原字符串重复n次</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'x'</span>.repeat(<span class="number">3</span>) <span class="comment">// "xxx"</span></span><br><span class="line"><span class="string">'hello'</span>.repeat(<span class="number">2</span>) <span class="comment">// "hellohello"</span></span><br><span class="line"><span class="string">'na'</span>.repeat(<span class="number">0</span>) <span class="comment">// ""</span></span><br><span class="line"><span class="string">'na'</span>.repeat(<span class="string">'na'</span>) <span class="comment">// ""</span></span><br><span class="line"><span class="string">'na'</span>.repeat(<span class="string">'3'</span>) <span class="comment">// "nanana"</span></span><br></pre></td></tr></table></figure>
<p>(5)padStart:头部补全<br>(6)padEnd:尾部补全</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//为数值不全指定位数</span></span><br><span class="line"><span class="string">'1'</span>.padStart(<span class="number">10</span>, <span class="string">'0'</span>) <span class="comment">// "0000000001"</span></span><br><span class="line"><span class="string">'12'</span>.padStart(<span class="number">10</span>, <span class="string">'0'</span>) <span class="comment">// "0000000012"</span></span><br><span class="line"><span class="string">'123456'</span>.padStart(<span class="number">10</span>, <span class="string">'0'</span>) <span class="comment">// "0000123456"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提示字符串格式</span></span><br><span class="line"><span class="string">'12'</span>.padStart(<span class="number">10</span>, <span class="string">'YYYY-MM-DD'</span>) <span class="comment">// "YYYY-MM-12"</span></span><br><span class="line"><span class="string">'09-12'</span>.padStart(<span class="number">10</span>, <span class="string">'YYYY-MM-DD'</span>) <span class="comment">// "YYYY-09-12"</span></span><br></pre></td></tr></table></figure>

<h4 id="2-注意"><a href="#2-注意" class="headerlink" title="2.注意"></a>2.注意</h4><ul>
<li>includes、startsWith、endWith这三个方法都支持第二个参数，表示开始搜索的位置</li>
<li>使用第二个参数n时，endsWith的行为与其他两个方法有所不同。它针对前n个字符，而其他两个方法针对从第n个位置直到字符串结束</li>
</ul>
<h3 id="四、数值的扩展"><a href="#四、数值的扩展" class="headerlink" title="四、数值的扩展"></a>四、数值的扩展</h3><h4 id="1-新增方法：-1"><a href="#1-新增方法：-1" class="headerlink" title="1.新增方法："></a>1.新增方法：</h4><h5 id="1-ES6-提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示"><a href="#1-ES6-提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示" class="headerlink" title="(1)ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示"></a>(1)ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示</h5><h5 id="2-Number-isFinite-用来检查一个数值是否为有限的"><a href="#2-Number-isFinite-用来检查一个数值是否为有限的" class="headerlink" title="(2)Number.isFinite:用来检查一个数值是否为有限的"></a>(2)Number.isFinite:用来检查一个数值是否为有限的</h5><h5 id="3-Number-isNaN-用来检查一个值是否为NaN"><a href="#3-Number-isNaN-用来检查一个值是否为NaN" class="headerlink" title="(3)Number.isNaN:用来检查一个值是否为NaN"></a>(3)Number.isNaN:用来检查一个值是否为NaN</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">isFinite</span>(<span class="number">25</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">isFinite</span>(<span class="string">"25"</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Number</span>.isFinite(<span class="number">25</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Number</span>.isFinite(<span class="string">"25"</span>) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="literal">NaN</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="string">"NaN"</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Number</span>.isNaN(<span class="literal">NaN</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Number</span>.isNaN(<span class="string">"NaN"</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Number</span>.isNaN(<span class="number">1</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<h5 id="4-Number-parseInt-与原方法同"><a href="#4-Number-parseInt-与原方法同" class="headerlink" title="(4)Number.parseInt:与原方法同"></a>(4)Number.parseInt:与原方法同</h5><h5 id="5-Number-parseFloat-与原方法同"><a href="#5-Number-parseFloat-与原方法同" class="headerlink" title="(5)Number.parseFloat:与原方法同"></a>(5)Number.parseFloat:与原方法同</h5><h5 id="6-Number-isInteger-判断一个数值是否为整数"><a href="#6-Number-isInteger-判断一个数值是否为整数" class="headerlink" title="(6)Number.isInteger:判断一个数值是否为整数"></a>(6)Number.isInteger:判断一个数值是否为整数</h5><h5 id="7-Math-trunc-用于去除一个数的小数部分，返回整数部分"><a href="#7-Math-trunc-用于去除一个数的小数部分，返回整数部分" class="headerlink" title="(7)Math.trunc:用于去除一个数的小数部分，返回整数部分"></a>(7)Math.trunc:用于去除一个数的小数部分，返回整数部分</h5><h5 id="8-Math-sign-用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。"><a href="#8-Math-sign-用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。" class="headerlink" title="(8)Math.sign:用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。"></a>(8)Math.sign:用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。</h5><h5 id="9-新增了一个指数运算符（-）"><a href="#9-新增了一个指数运算符（-）" class="headerlink" title="(9)新增了一个指数运算符（**）"></a>(9)新增了一个指数运算符（**）</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1.5</span>;</span><br><span class="line">a **= <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 等同于 a = a * a;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">4</span>;</span><br><span class="line">b **= <span class="number">3</span>;</span><br><span class="line"><span class="comment">// 等同于 b = b * b * b;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-注意：-2"><a href="#2-注意：-2" class="headerlink" title="2.注意："></a>2.注意：</h4><ul>
<li>Number.isFinite、Number.isNaN与传统方法区别：传统方法先调用Number()将非数值的值转为数值，再进行判断，而这两个新方法只对数值有效，Number.isFinite()对于非数值一律返回false, Number.isNaN()只有对于NaN才返回true，非NaN一律返回false</li>
</ul>
]]></content>
      <categories>
        <category>ES6</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/git-notes/</url>
    <content><![CDATA[<h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure>

<h3 id="二、配置用户信息及颜色高亮【本地仓库可选】"><a href="#二、配置用户信息及颜色高亮【本地仓库可选】" class="headerlink" title="二、配置用户信息及颜色高亮【本地仓库可选】"></a>二、配置用户信息及颜色高亮【本地仓库可选】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br><span class="line">git config --global color.ui true</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="三、创建仓库repository【建议全英文路径】"><a href="#三、创建仓库repository【建议全英文路径】" class="headerlink" title="三、创建仓库repository【建议全英文路径】"></a>三、创建仓库repository【建议全英文路径】</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir learngit</span><br><span class="line">cd learngit</span><br><span class="line">pwd</span><br><span class="line">&#x2F;Users&#x2F;michael&#x2F;learngit</span><br></pre></td></tr></table></figure>

<h3 id="四、常用命令"><a href="#四、常用命令" class="headerlink" title="四、常用命令"></a>四、常用命令</h3><ol>
<li>版本库/仓库初始化：<code>git init</code>(先cd到目录下)</li>
<li>把文件添加到仓库：<code>git add readme.txt</code></li>
<li>完成提交：<code>git commit -m &quot;add readme.txt&quot;</code></li>
<li>查看仓库当前状态：<code>git status</code></li>
<li>对比文件前后修改：<code>git diff readme.txt</code></li>
</ol>
<h3 id="五、版本切换"><a href="#五、版本切换" class="headerlink" title="五、版本切换"></a>五、版本切换</h3><ol>
<li>查看提交历史：<code>git log 或 git log --pretty=oneline --abbrev-commit</code></li>
<li>退回上个版本：<code>git reset --hard HEAD^</code></li>
<li>退回上上个版本：<code>git reset --hard HEAD^^</code></li>
<li>退回指定ID对应的版本：<code>git reset --hard commit_id</code></li>
<li>查看命令历史：<code>git reflog</code></li>
<li>查看工作区和最终版本库（最新版）里的区别：<code>git diff HEAD -- readme.txt</code></li>
</ol>
<h3 id="六、工作区（Working-directory）、暂存区-stage-、版本库-repository-的后悔药"><a href="#六、工作区（Working-directory）、暂存区-stage-、版本库-repository-的后悔药" class="headerlink" title="六、工作区（Working directory）、暂存区(stage)、版本库(repository)的后悔药"></a>六、工作区（Working directory）、暂存区(stage)、版本库(repository)的后悔药</h3><ol>
<li>版本库回撤（已git commit）：<code>git reset --hard commit_id</code></li>
<li>暂存区回撤（已git add）: <code>git reset HEAD filename</code></li>
<li>工作区回撤（已修改，未git add过）：<code>git checkout -- filename</code>(实际是用版本库里的版本替换工作区的版本)</li>
<li>删除文件：<code>git rm filename</code>（到暂存区），<code>git commit</code>后到repo生效</li>
</ol>
<h3 id="七、远程仓库操作（Github为例）"><a href="#七、远程仓库操作（Github为例）" class="headerlink" title="七、远程仓库操作（Github为例）"></a>七、远程仓库操作（Github为例）</h3><ol>
<li>生成ssh密钥：用户主目录下输入<code>ssh-keygen -t rsa -C &quot;email@example.com&quot;</code></li>
<li>.ssh目录下可看到id_rsa（私钥）、id_rsa.pub（公钥）</li>
<li>Github上增加ssh key，填入上述公钥内容</li>
<li>新建Github仓库，名称learngit</li>
<li>关联远程仓库:<code>git remote add origin git@github.com:satorioh/learngit.git</code></li>
<li>第一次推送本地仓库到远程，并关联同步：<code>git push -u origin master</code>（后续不用加参数u）</li>
<li>克隆远程仓库：<code>git clone git@github.com:satorioh/gitskills.git</code></li>
<li>查看远程库信息：<code>git remote -v</code></li>
<li>本地创建和远程分支对应的分支(名称最好一致)：<code>git checkout -b branch-name origin/branch-name</code></li>
<li>建立本地分支与远程分支的关联：<code>git branch --set-upstream origin/branch-name branch-name</code></li>
<li>抓取远程分支：<code>git pull</code></li>
</ol>
<h3 id="八、分支管理"><a href="#八、分支管理" class="headerlink" title="八、分支管理"></a>八、分支管理</h3><ol>
<li>创建分支：<code>git branch dev</code></li>
<li>切换分支：<code>git checkout dev</code></li>
<li>查看当前分支：<code>git branch</code></li>
<li>合并分支：<code>git merge dev(ff模式)、git merge --no-ff -m &quot;&quot; dev</code>(no ff普通模式)</li>
<li>删除分支：<code>git branch -d dev</code></li>
<li>冷冻当前工作区内容：<code>git stash</code></li>
<li>查看冷冻的内容：<code>git stash list</code></li>
<li>解冻内容：<code>git stash apply stash@{0}</code>(不丢弃stash)，<code>git stash pop</code>(同时丢弃stash)</li>
<li>删除未合并的分支：<code>git branch -D &lt;name&gt;</code></li>
</ol>
<h3 id="九、标签管理"><a href="#九、标签管理" class="headerlink" title="九、标签管理"></a>九、标签管理</h3><ol>
<li>新建标签：<code>git tag v1.0</code>(默认为HEAD)</li>
<li>查看所有标签：<code>git tag</code></li>
<li>查看某个标签的详细内容：<code>git show v1.0</code></li>
<li>推送一个本地标签：<code>git push origin &lt;tagname&gt;</code></li>
<li>推送全部未推送过的本地标签：<code>git push origin --tags</code></li>
</ol>
<h3 id="十、Git配置文件"><a href="#十、Git配置文件" class="headerlink" title="十、Git配置文件"></a>十、Git配置文件</h3><ol>
<li>仓库的Git配置文件：.git/config（ls -al查看）文件</li>
<li>当前用户的Git配置文件：用户主目录的.gitconfig文件中</li>
</ol>
<p>参考文献</p>
<ul>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰的Git教程</a></li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git、npm代理设置</title>
    <url>/git-npm-proxy-settings/</url>
    <content><![CDATA[<h3 id="一、Git代理设置"><a href="#一、Git代理设置" class="headerlink" title="一、Git代理设置"></a>一、Git代理设置</h3><h5 id="1-查看"><a href="#1-查看" class="headerlink" title="1.查看"></a>1.查看</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy 'socks5://127.0.0.1:1080' </span><br><span class="line">git config --global https.proxy 'socks5://127.0.0.1:1080'</span><br></pre></td></tr></table></figure>

<h5 id="3-取消设置"><a href="#3-取消设置" class="headerlink" title="3.取消设置"></a>3.取消设置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>

<h3 id="二、npm代理设置"><a href="#二、npm代理设置" class="headerlink" title="二、npm代理设置"></a>二、npm代理设置</h3><h5 id="1-查看-1"><a href="#1-查看-1" class="headerlink" title="1.查看"></a>1.查看</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure>

<h5 id="2-设置-1"><a href="#2-设置-1" class="headerlink" title="2.设置"></a>2.设置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set proxy=http://localhost:1080</span><br><span class="line">npm config set https-proxy=http://localhost:1080</span><br></pre></td></tr></table></figure>

<h5 id="3-取消设置-1"><a href="#3-取消设置-1" class="headerlink" title="3.取消设置"></a>3.取消设置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config delete proxy</span><br><span class="line">npm config delete https-proxy</span><br></pre></td></tr></table></figure>

<h3 id="三、使用nrm"><a href="#三、使用nrm" class="headerlink" title="三、使用nrm"></a>三、使用nrm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//1.先安装nrm工具</span><br><span class="line">npm install -g nrm</span><br><span class="line"></span><br><span class="line">//2.查看当前可用的镜像源</span><br><span class="line">nrm ls</span><br><span class="line"></span><br><span class="line">//3.切换npm源</span><br><span class="line">nrm use 镜像源名称</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Submodule</title>
    <url>/git-submodule/</url>
    <content><![CDATA[<p>Git Submodule 是一个很好的多项目使用共同类库的工具，他允许类库项目做为repository,子项目做为一个单独的git项目存在父项目中，子项目可以有自己的独立的commit，push，pull。而父项目以Submodule的形式包含子项目。<a id="more"></a></p>
<h4 id="一、在项目中使用Submodule"><a href="#一、在项目中使用Submodule" class="headerlink" title="一、在项目中使用Submodule"></a>一、在项目中使用Submodule</h4><p>1.添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git submodule add git@github.com:jjz&#x2F;pod-library.git pod-library</span><br></pre></td></tr></table></figure>
<p>2.修改：</p>
<p>cd进入Submodule目录里，修改子目录文件，推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add.</span><br><span class="line">git commit -m &quot;xxx&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>返回父目录，查看，推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br><span class="line">git commit -m &quot;xxx&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h4 id="二、更新Submodule（两种方式）"><a href="#二、更新Submodule（两种方式）" class="headerlink" title="二、更新Submodule（两种方式）"></a>二、更新Submodule（两种方式）</h4><p>方式1.在父项目的目录下直接运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git submodule foreach git pull</span><br></pre></td></tr></table></figure>
<p>方式2.直接在Submodule的目录下面更新：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;cd pod-library</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

<h4 id="三、clone-Submodule（两种方式）"><a href="#三、clone-Submodule（两种方式）" class="headerlink" title="三、clone Submodule（两种方式）"></a>三、clone Submodule（两种方式）</h4><p>方式1.采用递归参数clone整个project，submodule会被自动init并clone下来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:jjz&#x2F;pod-project.git --recursive</span><br></pre></td></tr></table></figure>
<p>方式2.先clone父项目，再init submodule</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:jjz&#x2F;pod-project.git</span><br><span class="line">cd pod-project &#x2F;&#x2F;submodule目录</span><br><span class="line">git submodule init &#x2F;&#x2F;初始化</span><br><span class="line">git submodule update &#x2F;&#x2F;更新</span><br></pre></td></tr></table></figure>

<h4 id="四、删除Submodule"><a href="#四、删除Submodule" class="headerlink" title="四、删除Submodule"></a>四、删除Submodule</h4><p>1.不支持直接删除Submodule,需要手动删除对应的文件:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd pod-project</span><br><span class="line">git rm --cached pod-library</span><br><span class="line">rm -rf pod-library</span><br><span class="line">rm .gitmodules</span><br></pre></td></tr></table></figure>

<p>2.更改git的配置文件config，删除相关信息:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim .git&#x2F;config</span><br><span class="line">[submodule &quot;pod-library&quot;]</span><br><span class="line">  url &#x3D; git@github.com:jjz&#x2F;pod-library.git</span><br></pre></td></tr></table></figure>

<p>3.提交到远程服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -a -m &#39;remove pod-library submodule&#39;</span><br></pre></td></tr></table></figure>

<p>参考： <a href="https://segmentfault.com/a/1190000003076028" target="_blank" rel="noopener">使用Git Submodule管理子模块</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】48个自我提升的实用技巧</title>
    <url>/forty-eight-self-improvement-skills/</url>
    <content><![CDATA[<p>若想得到这世上最好的东西，先得让世界看到最好的你。时间，每天都是新的，人的潜能，更是无穷的。只要决心行动，愿意改变，生活一定会赐予你积极的反馈。48个自我提升的实用技巧，教你战胜拖延、克服恐惧，遇见更好的自己。改变，就从现在开始！<a id="more"></a></p>
<h4 id="1-每天读一本书"><a href="#1-每天读一本书" class="headerlink" title="1.每天读一本书"></a>1.每天读一本书</h4><p>书是智慧的源泉。书读得越多，你会变得越智慧。</p>
<h4 id="2-学一门新的语言"><a href="#2-学一门新的语言" class="headerlink" title="2.学一门新的语言"></a>2.学一门新的语言</h4><p>学习一门语言完全是一项新的技术，掌握新语言、理解新文化的过程，更是一次开启心智的体验。</p>
<h4 id="3-选择一个新的爱好"><a href="#3-选择一个新的爱好" class="headerlink" title="3.选择一个新的爱好"></a>3.选择一个新的爱好</h4><p>除了你的日常爱好外，可否再发展其他的新爱好、新运动呢？譬如，击剑、攀岩、足球、滑冰、诗歌、跳舞、网页设计等等。学习新东西要求你在不同领域扩展自己，不论是身体，精神还是心理。</p>
<h4 id="4-报一门新的课程"><a href="#4-报一门新的课程" class="headerlink" title="4.报一门新的课程"></a>4.报一门新的课程</h4><p>参加课程是获得新知识和技能的绝佳途径。不一定是长期课程，研讨会，小的讨论会也可以达到目标。</p>
<h4 id="5-布置一间充满启发意义的房间"><a href="#5-布置一间充满启发意义的房间" class="headerlink" title="5.布置一间充满启发意义的房间"></a>5.布置一间充满启发意义的房间</h4><p>你所处的环境会影响你的心境和情调。如果你身处一个充满灵感的环境，每天都会深受启发。</p>
<h4 id="6-克服恐惧"><a href="#6-克服恐惧" class="headerlink" title="6.克服恐惧"></a>6.克服恐惧</h4><p>我们都会害怕。害怕不确定，害伯公众演讲，害怕冒险．…所有这些害怕令我们原地不动，止步不前。认识你的害怕，就是你可以成长的开始。把害怕当做成长的突破口，如果你害怕某样东西，表示你还没有正视它。</p>
<h4 id="7-不断提升你的技能"><a href="#7-不断提升你的技能" class="headerlink" title="7.不断提升你的技能"></a>7.不断提升你的技能</h4><p>如果你玩过角色扮演游戏，你就知道’升级’是什么意思―获得更多经验，使自己更好更强。作为一名博客写手，不断升级写作技巧，作为一名演讲人，不断升级公共事务处理技巧。那么你可以升级的技术是什么呢？</p>
<h4 id="8-早起"><a href="#8-早起" class="headerlink" title="8.早起"></a>8.早起</h4><p>早起（五点到六点）被公认可以提高人的创造力和生活品质。因为当人早起的时候，人的精神处于最佳状态，会更好的利用这一天。你应该去培养这个习惯。</p>
<h4 id="9-每周锻炼"><a href="#9-每周锻炼" class="headerlink" title="9.每周锻炼"></a>9.每周锻炼</h4><p>变得更好，首先需要一个更好的身材。每周至少做三次慢跑，每次至少30分钟。你可以将不同运动结合起来，如慢跑、健身和不同方式的游泳。</p>
<h4 id="10-写一本人生手册"><a href="#10-写一本人生手册" class="headerlink" title="10.写一本人生手册"></a>10.写一本人生手册</h4><p>简单来说，它是一本包合你如何生活地更充实的小册子，譬如你的目标和价值，它会推动你的进步。</p>
<h4 id="11-写一封信给未来的自己"><a href="#11-写一封信给未来的自己" class="headerlink" title="11.写一封信给未来的自己"></a>11.写一封信给未来的自己</h4><p>你会看到5年后的自己吗，你会一样还是不同的，你将会是什么样的人？写一封信给来来的自己一一一年后是个好的开始一一然后封住它。一年后选择一个日子打开它。然后努力开始成为你想打开信的那个人。</p>
<h4 id="12-离开你的舒适地带"><a href="#12-离开你的舒适地带" class="headerlink" title="12.离开你的舒适地带"></a>12.离开你的舒适地带</h4><p>真正的成长会伴随着辛劳与汗水。太舒适不会帮助我们成长，它只会让我们停滞不前。你的舒适地带是什么？大部分时间你都待在那里吗，重组你的线路，做一些不同的事情，揭开一个新的篇章。</p>
<h4 id="13-与别人一起挑战"><a href="#13-与别人一起挑战" class="headerlink" title="13.与别人一起挑战"></a>13.与别人一起挑战</h4><p>比赛是成长最好的方式之一。设置一个挑战(减轻体重、锻炼，财务挑战等），与一位感兴趣的朋友一起比赛，看谁先达到目标。通过这一过程，你们都会比单独挑战得到更多。</p>
<h4 id="14-认识你的盲点"><a href="#14-认识你的盲点" class="headerlink" title="14.认识你的盲点"></a>14.认识你的盲点</h4><p>在个人发展上，盲点是指自己身上没有正确认识的东西。发现自己的盲点，有助于发现自己能够改善进步的地方。</p>
<h4 id="15-询问反馈意见"><a href="#15-询问反馈意见" class="headerlink" title="15.询问反馈意见"></a>15.询问反馈意见</h4><p>别人的意见，可以让你更清楚的认识自己。向朋友，家人，同事，老板等收集建议，他们对你没有偏见，反映会比较客观。</p>
<h4 id="16-专注代办事项"><a href="#16-专注代办事项" class="headerlink" title="16.专注代办事项"></a>16.专注代办事项</h4><p>每天早上，制定一份今天要完成的代办列表，这有助于你集中注意力。</p>
<h4 id="17-制定大胆的目标"><a href="#17-制定大胆的目标" class="headerlink" title="17.制定大胆的目标"></a>17.制定大胆的目标</h4><p>制定大胆的目标，有助于超越自我。你可以设定的大目标是什么？哪些是你一旦达成就会让自己感觉完全屹立世界之巅。制定并开始进行实践。</p>
<h4 id="18-认识你的缺点"><a href="#18-认识你的缺点" class="headerlink" title="18.认识你的缺点"></a>18.认识你的缺点</h4><p>每个人都有缺点，最重要的是了解它们，认识它们，改掉它们。你怎么看待你的缺点？现在可以改掉哪个缺点，你如何改掉它们？</p>
<h4 id="19-立即行动"><a href="#19-立即行动" class="headerlink" title="19.立即行动"></a>19.立即行动</h4><p>进步的最好方法是行动。你一直打算做什么事情？你如何立即行动？等待不会让它完成，行动则会立马见效。</p>
<h4 id="20-向偶像学习"><a href="#20-向偶像学习" class="headerlink" title="20.向偶像学习"></a>20.向偶像学习</h4><p>想想你崇拜的人，启示自己的人。这些人身上的品质，如何获得它们?</p>
<h4 id="21-改掉一个坏习惯"><a href="#21-改掉一个坏习惯" class="headerlink" title="21.改掉一个坏习惯"></a>21.改掉一个坏习惯</h4><p>你可以改掉哪些坏习惯？睡懒觉、不运动、迟到、懒散、爱咬指甲、抽烟……改掉坏习惯，遇见更好的自己。</p>
<h4 id="22-培养新习惯"><a href="#22-培养新习惯" class="headerlink" title="22.培养新习惯"></a>22.培养新习惯</h4><p>对人生有帮助的习慢有读书，早起，锻炼，冥想，每天读一篇自我成长文章。培养起来！</p>
<h4 id="23-远离消极人群"><a href="#23-远离消极人群" class="headerlink" title="23.远离消极人群"></a>23.远离消极人群</h4><p>“你常来往的五个人决定了你是什么人”。不管去哪，不可避免都会遇到消极的人。如果你觉得受他们负面影响，那么远离他们。</p>
<h4 id="24-学着和难相处的人相处"><a href="#24-学着和难相处的人相处" class="headerlink" title="24.学着和难相处的人相处"></a>24.学着和难相处的人相处</h4><p>总有一些时候，你必须面对刁钻之人。比如在工作场所，或者某人是你人际圈中的一员。学习相处之道，会对人际交往大有助益。</p>
<h4 id="25-向你的朋友学习"><a href="#25-向你的朋友学习" class="headerlink" title="25.向你的朋友学习"></a>25.向你的朋友学习</h4><p>每个人都有闪光点，这取决于我们如何看待他们。朋友身上有值得你学习的东西。如果需要，就直接请教他，他们肯定会愿意帮你。</p>
<h4 id="26-写日志"><a href="#26-写日志" class="headerlink" title="26.写日志"></a>26.写日志</h4><p>日记是一种自我反省的过程，是自我觉察的好方法。当你写日记时，你在清理想法，从第三人的角度去看你写的东西，会更加了解自己。</p>
<h4 id="27-建立一个自我成长博客"><a href="#27-建立一个自我成长博客" class="headerlink" title="27.建立一个自我成长博客"></a>27.建立一个自我成长博客</h4><p>要帮助别人成长，你必须首先有发言权。建立博客，分享自我成长经验和看法。读者通过你的文章获得提升，这也推动你的进步。</p>
<h4 id="28-找一名导师或教练"><a href="#28-找一名导师或教练" class="headerlink" title="28.找一名导师或教练"></a>28.找一名导师或教练</h4><p>实现目标，没有比与别人共同努力更快的方式。找一名导师或教练，帮助你实现目标，比起独自奋斗，更能获得显著成果。</p>
<h4 id="29-减少闲聊"><a href="#29-减少闲聊" class="headerlink" title="29.减少闲聊"></a>29.减少闲聊</h4><p>无谓的闲谈很费时。工作或学习时，请关掉社交软件。</p>
<h4 id="30-学习象棋等战略游戏"><a href="#30-学习象棋等战略游戏" class="headerlink" title="30.学习象棋等战略游戏"></a>30.学习象棋等战略游戏</h4><p>象棋可以学习运用战略，锻炼你的分析能力。你可以从棋类或网络游戏中学习策略，例如，黑白棋，象棋等。</p>
<h4 id="31-停止看电视"><a href="#31-停止看电视" class="headerlink" title="31.停止看电视"></a>31.停止看电视</h4><p>现在，把看电视的时间放在其他方面，比如与好友联系，做喜欢的事情，锻炼等。</p>
<h4 id="32-30天目标挑战"><a href="#32-30天目标挑战" class="headerlink" title="32.30天目标挑战"></a>32.30天目标挑战</h4><p>设定一个目标，让自己在30天内完成。目标可以是一个新习惯，或者一件你一直想做却没做的事。30天的时间，足够达成一项目标。</p>
<h4 id="33-冥想"><a href="#33-冥想" class="headerlink" title="33.冥想"></a>33.冥想</h4><p>冥想使人冷静。晚上睡前做冥想，可以清扫纷繁杂乱，使身心平静。</p>
<h4 id="34-公共演讲"><a href="#34-公共演讲" class="headerlink" title="34.公共演讲"></a>34.公共演讲</h4><p>公共演讲是全世界人们最怕的东西之一。但在公开演讲中，可以学到沟通技巧、展现自我并融入到群体中。</p>
<h4 id="35-与领域中最优秀的人做朋友"><a href="#35-与领域中最优秀的人做朋友" class="headerlink" title="35.与领域中最优秀的人做朋友"></a>35.与领域中最优秀的人做朋友</h4><p>由于正确的态度，技能和方法，他们取得了成果。向已经成功的人学习不是很好吗？学习如何进步，如何获得成就。</p>
<h4 id="36-放下过去"><a href="#36-放下过去" class="headerlink" title="36.放下过去"></a>36.放下过去</h4><p>你是不是被过去悲伤回忆困扰，如果是，请放下它们。紧握着不放手，只会让你止步不前。 放下过去，原谅自己，继续前行。</p>
<h4 id="37-开始创业"><a href="#37-开始创业" class="headerlink" title="37.开始创业"></a>37.开始创业</h4><p>你有没有感兴趣的事？为何不将它付诸实践？在学习的同时还可以赚钱？自己开创事业，能收获很多技能，比如自我约束、领导能力、组织和管理能力等。</p>
<h4 id="38-向周围的人表示友好"><a href="#38-向周围的人表示友好" class="headerlink" title="38.向周围的人表示友好"></a>38.向周围的人表示友好</h4><p>事实上，很多人都没向别人表达足够善意。心存善念有助于培养宽容心、耐心和爱心。试试对别人表达善意，看看他们的反应，体会对别人友好时的感受，是不是更快乐了？</p>
<h4 id="39-和仇敌来往"><a href="#39-和仇敌来往" class="headerlink" title="39.和仇敌来往"></a>39.和仇敌来往</h4><p>恨，很简单，爱，却很难。宽恕他们，放下仇恨，展示你的爱，这需要极大的胸襟。你生活中有没有不喜欢的人？如果有，伸出爱的双手吧。即使他们拒绝，依旧爱他们。比起恨，这会更舒坦。</p>
<h4 id="40-好好休息"><a href="#40-好好休息" class="headerlink" title="40.好好休息"></a>40.好好休息</h4><p>你很努力工作，但别忘了，休息能让你向前走得更远。每周给自己一些时间休息，恢复精神。</p>
<h4 id="41-每夭至少阅读一篇与个人发展有关的文章"><a href="#41-每夭至少阅读一篇与个人发展有关的文章" class="headerlink" title="41.每夭至少阅读一篇与个人发展有关的文章"></a>41.每夭至少阅读一篇与个人发展有关的文章</h4><p>不断学习，每天至少阅读一篇关于自我发展的文章。</p>
<h4 id="42-承诺进步"><a href="#42-承诺进步" class="headerlink" title="42.承诺进步"></a>42.承诺进步</h4><p>办法很多，但如果缺乏实践，任何事情都无法成功。成长需要自己负责，开始你的成长，或许不能立刻奏效，但只要坚持，你会看到改变。</p>
<h4 id="43-多微笑"><a href="#43-多微笑" class="headerlink" title="43.多微笑"></a>43.多微笑</h4><p>你会感觉更好，美好的事情也会不断找上门来。简简单单的一个微笑，会给生活带来很大的改观。</p>
<h4 id="44-感恩的心"><a href="#44-感恩的心" class="headerlink" title="44.感恩的心"></a>44.感恩的心</h4><p>不要吝惜感激之情，这会为你带来更多美好的事物。感恩，可以创造奇迹。你也可以每天花五分钟写下你的感动。</p>
<h4 id="45-保持整洁"><a href="#45-保持整洁" class="headerlink" title="45.保持整洁"></a>45.保持整洁</h4><p>整洁的环境能使你思路明朗，办事更有效率，这是最能提升自我的方法之一。</p>
<h4 id="46-把握自己的思想"><a href="#46-把握自己的思想" class="headerlink" title="46.把握自己的思想"></a>46.把握自己的思想</h4><p>如果你想掌控自己生活，请先掌控自己思想。不要让大脑陷入混乱。管理他们―去粗取精，扬长避短。这会为你的自我提升奠定坚实基础。</p>
<h4 id="47-善始善终"><a href="#47-善始善终" class="headerlink" title="47.善始善终"></a>47.善始善终</h4><p>不要半途而废，完整地做一件事情，可以提升自信心，并且有利于锻炼自己的毅力。</p>
<h4 id="48-旅行"><a href="#48-旅行" class="headerlink" title="48.旅行"></a>48.旅行</h4><p>现在去各国游历已经简单许多。利用这一便利， 开始你的旅途！你会遇到有趣的人、不同的风景，并感受自由与独立。</p>
<p>原文链接：<a href="https://www.weibo.com/2286908003/BxDXgj7Ei?type=comment#_rnd1579674361337" target="_blank" rel="noopener">https://www.weibo.com/2286908003/BxDXgj7Ei?type=comment#_rnd1579674361337</a></p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>Git worktree</title>
    <url>/git-worktree/</url>
    <content><![CDATA[<p>Git 2.5新增：从一个仓库中可以创建多个工作目录，方便多开编辑器并行开发</p>
<h3 id="一、创建"><a href="#一、创建" class="headerlink" title="一、创建"></a>一、创建</h3><h5 id="1-从已有分支创建新分支"><a href="#1-从已有分支创建新分支" class="headerlink" title="1.从已有分支创建新分支"></a>1.从已有分支创建新分支</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git worktree add -b &lt;新分支名&gt; &lt;新路径&gt; &lt;从此分支创建&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-从已有分支直接创建"><a href="#2-从已有分支直接创建" class="headerlink" title="2.从已有分支直接创建"></a>2.从已有分支直接创建</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git worktree add &lt;新路径&gt; &lt;从此分支创建&gt;</span><br></pre></td></tr></table></figure>

<h3 id="二、查看"><a href="#二、查看" class="headerlink" title="二、查看"></a>二、查看</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git worktree list</span><br></pre></td></tr></table></figure>

<h3 id="三、删除"><a href="#三、删除" class="headerlink" title="三、删除"></a>三、删除</h3><h5 id="方法1"><a href="#方法1" class="headerlink" title="方法1:"></a>方法1:</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git worktree remove &lt;worktree路径&gt;</span><br></pre></td></tr></table></figure>

<h5 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf &lt;新路径&gt;</span><br><span class="line">git worktree prune</span><br></pre></td></tr></table></figure>

<h5 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h5><p>1.因为所有工作目录共享一个仓库，所以一个更新意味着整个更新（A 目录里对分支做的改动，B 目录里切到此分支也是改动后的；避免到时候找不到某个未推送的改动改到了哪个仓库）<br>2.可以快速进行并行开发，同一个项目多个分支同时并行演进<br>3.可避免node_modules冲突<br>4.相比单纯clone/copy，可使用命令更方便直观的管理</p>
<h5 id="注意：使用-git-worktree-创建的多个目录，不能有任何两个目录在同一个分支下"><a href="#注意：使用-git-worktree-创建的多个目录，不能有任何两个目录在同一个分支下" class="headerlink" title="注意：使用 git worktree 创建的多个目录，不能有任何两个目录在同一个分支下"></a>注意：使用 git worktree 创建的多个目录，不能有任何两个目录在同一个分支下</h5><p>参考文章：<br><a href="https://git-scm.com/docs/git-worktree/2.24.0" target="_blank" rel="noopener">git worktree</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】活得明白才是人生的第一要义</title>
    <url>/first-priority-of-life/</url>
    <content><![CDATA[<p>文/廖超国</p>
<p>我们终其一生，究竟为什么而活？怎样活才算真正活出了人生的意义和价值。这是生活的原题，也是人生的大题。不弄清这个问题，苦累一生，不知何为。人终究难脱俗。世俗有许多标准。很多人终生忙碌，都难逃“名、利、权、情”四个字，我们总会为名所累，为利所苦，为权所困，为情所惑。但大多数人都未能所愿，到头来，累之不所堪，苦之不所在，困之不所值，惑之不所为，越活越糊涂，越活越迷茫。<a id="more"></a></p>
<p>其实，人这一生，对人真正有意义的，真不是那些身外之物。人与动物最大的区别，就是人有意识会思考，从这一角度看，于人生最重要的是活明白，活明白了就能通透，人若通透了就简单，人若简单就快乐。人生终究是为快乐而活的，而要活的快乐，首先得活明白。所以，活得明白才是人生的第一要义。</p>
<p>中国现代画家丰子恺先生，对人生有着深刻的洞悉，提出了“人生三层楼”著名的论述。他说：“我以为人的生活，可以分为三层：一是物质生活，二是精神生活，三是灵魂生活。”世人千万种，每个人都在拼尽全力，努力追求过上自己想要的生活。但无论怎样选择，最终也不过是为了攀登这三层楼，追求物质、精神和灵魂三类生活的满足和统一。</p>
<p>世俗的人生，大多停留在人生之楼的第一层。停留在这一层的人，关注的不外乎是基本的生存，着眼于吃、穿、住、行。终日忙碌，每天为生计而奔波劳累，顶着朝霞出，披着落日归，挤公交，转地铁，打工挣钱，埋头苦干，甚至加班加点，不辞辛劳。在他们的心里，其他一切都是浮云，唯有多赚钱，让自己和家人生活的更好一点才是硬道理。芸芸众生，也只能这样。生活是如此的现实，如段子高手所言的那样，“生容易，活容易，生活真不容易”人生，人生，首先得生存下来。只有先活下来，活得更好一点，才有资格谈其他。如果连生存都难以保障，就失去了讨论其他的话语权。</p>
<p>人生实苦，只有很努力，才能看起来不费力。可悲的是，无论你多么努力，除了少数幸运的人能如愿以偿，大多数人都会接受命运考验，生活的磨难。理想很丰满，现实很骨感，理想和追求总不在一条线上，目标与现实总有大大的差距。时光倾泻，岁月如流。几人能破译命运的密码，真正到达希望的彼岸？此时，如果不从思路上突破，不从认知上改变，就会要么苦闷不已，迷茫、徘徊，如僵尸一般，毫无目的的行走；要么，心如死灰，麻木，呆滞，像动物一样，行尸走肉般的活着。活在物质的世界没有错，但若长期沉浸于此问题就来了，因为人只有精神和灵魂的升华，才能认清人生的苦乐，摆脱生活之苦，过上真正属于人的生活。格局的改变才能扩展视野，看得更远才能走得更远。</p>
<p>人是须臾离不开精神的支撑的，表明人之成为人的最主要的标志，是人有着自己的精神世界，在那里，他是他自己的国王。他的认知，虽然改变不了已经发生了的结果，但他可以调整观察的态度和角度，从而改变结果对他心情的影响效果，生活的喜怒哀乐全是精神感应和反应的产物。所以，睿智的大师指引我们要迈上人生的二楼，那里的精神生活丰富着我们的心灵。人是一定不能少了精神生活的。人生在世，绝不仅仅是为了追求物质生活的享受，只有动物才只追求物质生活的满足。人应当在精神上有更高的追求和向往，这才是高层次的境界。人只有不断地认识这个世界，明白生活的真谛，追求上进，不断的提升自己，才能不畏艰难，也才能让自己生活的更好，让自己的人生更有意义。</p>
<p>丰富的精神生活可以一定程度上消弥物质生活的贫乏，更能提升生活的品质。唐朝写下传世经典之作《陋室铭》的著名诗人刘禹锡，他虽身居陋室但仍不改其高洁的风范对此做了充分的诠释。受“永贞革新”失败的牵连，被贬遭刁难的刘禹锡，无论是城南门外偏僻的三间面江居，还是城北门更偏远的一间半的河边屋，甚至只能容下一床一桌一凳陋室，都能有“面对大江观白帆，身在和州思争辩”“杨柳青青河水平，人在历阳心在京”“斯是陋室，惟吾德馨。何陋之有？”的境界。环境造就人是常例，但人通过改变心态而改变环境则是人的聪明之处。陋室虽陋，但只要心态不陋，依然可以创造出愉悦多元的心灵空间。弹琴，没有嘈杂的音乐乱耳；看书，没有成堆的公文累心；谈天，说说笑笑的都是学问渊博者；说地，来来往往的没有无学无识的人。这样丰富多彩精神世界还需计较什么呢？有品质的生活不仅取决于物质条件，更取决于你对生活的态度。你的精神世界足够积极向上，足够丰富多彩，你的人生也会更加璀璨亮丽。精神上的匮乏是人生最大的失败，精神上的愉悦才是人生最大的富有。无论生活多么艰难，都要让自己的精神生活丰盈愉悦。当温饱满足后，人是靠精神活着的。</p>
<p>人的生活最高层次是灵魂生活。只有过上了灵魂生活，才真正实现了人的生活。苏格拉底曾说：“无灵魂的生活就失去了人的生活的价值”。精神生活是人的灵魂生活的初级阶段，灵魂生活是人的精神生活阶进的最高形式。如果精神世界是江的话，那么灵魂世界则是海。哲理散文家周国平先生说过“人与人之间最重要的区别不是物质上的贫富，社会方面的境遇，而是内在的精神素质把人分出了伟大和渺小，优秀和平庸。“一个人若能把灵魂生活过好，就会把整个人安顿好，因为，人生真正的快乐和幸福是来自内心的，只有心灵得到了满足，身体才会轻松，心情才会愉悦。灵魂生活左右着整个人的心身。</p>
<p>登上了人生的三层楼，历经了从物质到精神洗礼，迈入了从精神到灵魂的升华，你对人生就有了一些明了，但要真正达到活得明白的境界，还需同时做到看懂、看透、看破、看开、看淡。</p>
<p><img src="../images/first-priority-of-life1.jpg" alt=""></p>
<p>看懂，人生是过程，“百岁光阴一梦蝶，乌衣巷口夕阳斜”。木心说：“为人之道，第一念，就是明白：人是会死的。生活是什么？生活是死前的一段过程”。这个过程真的很短暂，正谓段子高手所言“一睁眼一愣神一叹息，就是一天；一个日一个月一忙碌，就是一年；一弹指一邂逅一奔波，就是一生”。短暂的一生，真没有那么多值得计较的。人生中所有的一切包括生命都是向上苍借来的，终究是要还回的。懂得了这个根本，你才会明白，活在当下，是多么重要。</p>
<p>看透，人生无成败，“一蓑烟雨任凭生，也无风雨也无晴”。世俗人的眼里，有着他们自定的成功和失败的标准。但终极地看，人生真无成败，有的只是经历，有的只是成长。人生就是一趟旅行，就单个生命而言，最大的收获就是经历更多的事，结识更多的人，走到过更远的地方，生命的精彩在于思考的行走无疆界。但总有一天生命的列车会到站。而到站之日，体现了生命最崇高的平等，不分成者败者统统下车。那么，世俗的成败在这里还有何意义呢？如果硬要找出生命的成功，那只有一点，就是具有高贵灵魂的生命优雅地活提更长久。悟透了这一道理，你才会清楚，珍爱生命，是多么伟大。</p>
<p>看破，人生无得失，“丹青不知老将至，富贵贫穷皆梦幻”。要知道这个世界，没有什么东西最终真正属于我们自己，离开这个世界的时候，没有谁能带走任何一件东西。每一个人赤身祼体的来，唯一赚得的是穿着一身衣服走。如果理解了这个道理，便会对得失有更深刻的认识。名利如浮云，富贵皆梦幻。尽管我们作为芸芸众生的普通人，很多时候能想明白但做不到，可至少我们不应该更不必终生为其所累，坦然面对所谓的人生“得”与“失”，得之不狂不喜，失之不悲不惜。一切顺其自然，随性而往；一切沉浮自如，随遇而安。聪明的人总是以此当作自己的人生态度。理解了这个态度，你才会懂得，豁达明智，是多么正确。</p>
<p>看开，人生会无常，“但见时光流似箭，岂知天道曲如弓”。网上被传烂的那句“谁也不知道明天和意外谁先到来”最能表达人生无常的意境。人生真是无常，有常是偶然，无常是必然。文化学者余秋雨先生说：“一切都不可预测，一切都超乎想象，一切都难于部署，一切都猝不及防。某些看似可预测、可部署的部分，都只是浮皮表象的勉强连接”，我们眼里看到的从来都只是冰山一角，那冰山之下“曲如弓”的复杂我们却不甚明白。我们学会了算计，但也只能是人算不如天算。对待无常态度，最后只能是，我们期待好事，也不拒绝坏事。明白了这一事理，你才知道，于事不避，是多么坚强。</p>
<p>看淡，人生重体验，“一朝春尽红颜老，明年花开复谁在”。如果我们真正明白了人生是一个过程，那么理解人生重在体验就非常容易和自然了。生活，是用来经历和成长的，人生则是用来体验和感悟的。终其一生，经历越多，生活就越有内容；体验越多，生命就越有长度；感悟越多，人生就越有成长。人生的意义在于活的更久，生命的精彩在于体验更多。逝者如斯，人生易老，唯有体验和感悟才是我们最终的收获，其他一切皆如云烟。知道了这一恒理，你才醒悟，感受生活，是多么值得。</p>
<p>登上了人生的层楼，达到了看懂、看透、看破、看开、看淡的境界，你算明白了人生，但这并不是要你消极对待人生，以为“一切皆空”而不作为。而恰恰相反，明白了人生是一个有去无回的过程，更应以积极的态度，热爱人生，珍惜生活，抓紧体验，时不我待。做自己能做的，尽最大努力活成自己喜欢的模样；做自己该做的，丝毫不逃避自己肩上的责任。让自己的人生在体验中发光，让自己的生活在感悟中升华。</p>
<p>力求活得明白，是为了提升我们自我修炼的境界，破“人生三惑”迷惑、诱惑、蛊惑；立“人生三清”清醒、清明、清白；少“生活三添”添堵、添累、添乱，多“生活三乐”乐心、乐体、乐观；祛“烦恼三头”头胀、头晕、头痛，增“快乐三思”思索、思考、思辨。</p>
<p>生命本是一场途经，一生求索，寻找究竟；人生本是一场修行，一世辗转，终为明白。愿我们不仅仅停留在物质的层次，谄媚红尘的喧嚷，慕仰世俗的繁锦。而应登上灵魂的高楼，修得淡定从容的平常心，宠辱不惊做自己，成败无意为体验。闲赏乱云飞渡头脑清，笑对沧海横流心底明。做个活脱通达的明白人。</p>
<p>2019年12月27日<br>初稿于武昌南湖水域天际</p>
<p><img src="../images/first-priority-of-life2.jpg" alt=""></p>
<p>左岸记：要做到看懂、看透、看破、看开、看淡，每一个都不容易，要看懂需要博学，要看透需要思辨，要看破需要宽厚，要看开需要想通，要看淡需要平和，这些每一个都不是一开始的状态，而是人生经过磨砺后会能达到的人生状态。既然这些状态无法先入心，那就带着这些想法勇敢地去实践，在生活中慢慢去看懂、看透、看破、看开、看淡吧。</p>
<p>原文链接：<a href="http://www.zreading.cn/archives/7457.html" target="_blank" rel="noopener">http://www.zreading.cn/archives/7457.html</a></p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab CI/CD</title>
    <url>/gitlab-ci/</url>
    <content><![CDATA[<h3 id="一、什么是GitLab-CI-？"><a href="#一、什么是GitLab-CI-？" class="headerlink" title="一、什么是GitLab CI ？"></a>一、什么是GitLab CI ？</h3><p>GitLab-CI是一套配合GitLab使用的持续集成系统（类似的还有Jenkins、Github Actions），从GitLab 8.0后就默认集成了GitLab-CI，并且所有项目默认启用，只要在项目仓库的根目录添加 .gitlab-ci.yml 文件，并且配置了Runner，那么每一次MR / push 都会触发CI Pipeline 。</p>
<a id="more"></a>
<h3 id="二、什么是GitLab-WorkFlow-？"><a href="#二、什么是GitLab-WorkFlow-？" class="headerlink" title="二、什么是GitLab WorkFlow ？"></a>二、什么是GitLab WorkFlow ？</h3><p><img src="../images/gitlab-ci1.png" alt=""></p>
<h3 id="三、GitLab相关术语"><a href="#三、GitLab相关术语" class="headerlink" title="三、GitLab相关术语"></a>三、GitLab相关术语</h3><h4 id="1-什么是PipeLine"><a href="#1-什么是PipeLine" class="headerlink" title="1.什么是PipeLine ?"></a>1.什么是PipeLine ?</h4><p>一次构建任务，流水线，包含多个Stage，比如build、test、deploy</p>
<h4 id="2-什么是Stage"><a href="#2-什么是Stage" class="headerlink" title="2.什么是Stage ?"></a>2.什么是Stage ?</h4><p>构建阶段，默认有三个：build阶段（安装依赖、编译）、test阶段（单元测试、集成测试）、deploy阶段（部署到d/q/p环境）。可以在Pipeline中定义多个Stage，和Pipeline的关系如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+--------------------------------------------------------+</span><br><span class="line">|                                                        |</span><br><span class="line">|  Pipeline                                              |</span><br><span class="line">|                                                        |</span><br><span class="line">|  +-----------+     +------------+      +------------+  |</span><br><span class="line">|  |  Stage 1  |----&gt;|   Stage 2  |-----&gt;|   Stage 3  |  |</span><br><span class="line">|  +-----------+     +------------+      +------------+  |</span><br><span class="line">|                                                        |</span><br><span class="line">+--------------------------------------------------------+</span><br></pre></td></tr></table></figure>
<p>特点：</p>
<ul>
<li>所有 Stages 会按照顺序运行，即当一个 Stage 完成后，下一个 Stage 才会开始</li>
<li>只有当所有 Stages 完成后，该构建任务 (Pipeline) 才会成功</li>
<li>如果任何一个 Stage 失败，那么后面的 Stages 不会执行，该构建任务 (Pipeline) 失败</li>
</ul>
<h4 id="3-什么是Job"><a href="#3-什么是Job" class="headerlink" title="3.什么是Job ?"></a>3.什么是Job ?</h4><p>在Stage中执行的工作，是执行具体的指令集合，只负责一件事情，和Stage的关系如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+------------------------------------------+</span><br><span class="line">|                                          |</span><br><span class="line">|  Stage 1                                 |</span><br><span class="line">|                                          |</span><br><span class="line">|  +---------+  +---------+  +---------+   |</span><br><span class="line">|  |  Job 1  |  |  Job 2  |  |  Job 3  |   |</span><br><span class="line">|  +---------+  +---------+  +---------+   |</span><br><span class="line">|                                          |</span><br><span class="line">+------------------------------------------+</span><br></pre></td></tr></table></figure>
<p>特点：</p>
<ul>
<li>相同 Stage 中的 Job 会并行执行</li>
<li>相同 Stage 中的 Job 都执行成功时，该 Stage 才会成功</li>
<li>如果任何一个 Job 失败，那么该 Stage 失败，即该构建任务 (Pipeline) 失败</li>
</ul>
<h4 id="4-什么是GitLab-Runner-（参考）"><a href="#4-什么是GitLab-Runner-（参考）" class="headerlink" title="4.什么是GitLab-Runner ?（参考）"></a>4.什么是GitLab-Runner ?（<a href="https://www.upyun.com/tech/article/245/%E5%BD%93%E8%B0%88%E5%88%B0%20GitLab%20CI%20%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E8%AF%A5%E8%81%8A%E4%BA%9B%E4%BB%80%E4%B9%88%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89.html" target="_blank" rel="noopener">参考</a>）</h4><p>Job的实际执行者。GitLab CI浏览项目里的.gitlab-ci.yml文件，根据里面的规则，分配到各个Runner来运行相应的Job，同一时间单个 Runner 只能处理一个 Job。</p>
<p><strong>分类</strong>：</p>
<p>按类型：Specific Runner 和 Shared Runner 。Specific Runner 只能供部分项目使用，而Shared Runner 是所有开启了Allow shared runners选项的项目都可以使用的。</p>
<p>按状态：Active Runner、Paused Runner</p>
<p><img src="../images/gitlab-ci2.png" alt=""></p>
<h4 id="5-什么是-gitlab-ci-yml文件-？"><a href="#5-什么是-gitlab-ci-yml文件-？" class="headerlink" title="5.什么是.gitlab-ci.yml文件 ？"></a>5.什么是.gitlab-ci.yml文件 ？</h4><p>项目根目录下的CI配置文件，记录了Pipeline中的阶段和执行规则，可以为不同分支配置不同的规则</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stages:  &#x2F;&#x2F; 首先按顺序定义有几个步骤。步骤下面的所有job是同步执行的</span><br><span class="line">  - test  </span><br><span class="line">  - build</span><br><span class="line">  </span><br><span class="line">job1:</span><br><span class="line">  stage: test  &#x2F;&#x2F; 属于test的stage</span><br><span class="line">  script:</span><br><span class="line">    - npm run test &#x2F;&#x2F; 这个job执行的脚本</span><br><span class="line">  only:</span><br><span class="line">    - master  &#x2F;&#x2F; 只监听master分支的代码提交</span><br><span class="line">  tags:</span><br><span class="line">    - tengxun  &#x2F;&#x2F; 要使用哪个runner</span><br><span class="line"></span><br><span class="line">job2:</span><br><span class="line">  stage: build</span><br><span class="line">  script:</span><br><span class="line">    - npm run build</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">  tags:</span><br><span class="line">    - tengxun</span><br></pre></td></tr></table></figure>

<h3 id="四、安装-GitLab-Runner-https-docs-gitlab-com-runner"><a href="#四、安装-GitLab-Runner-https-docs-gitlab-com-runner" class="headerlink" title="四、安装 GitLab Runner (https://docs.gitlab.com/runner/)"></a>四、安装 GitLab Runner (<a href="https://docs.gitlab.com/runner/" target="_blank" rel="noopener">https://docs.gitlab.com/runner/</a>)</h3><h4 id="1-添加官方rpm源"><a href="#1-添加官方rpm源" class="headerlink" title="1.添加官方rpm源"></a>1.添加官方rpm源</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># For RHEL&#x2F;CentOS&#x2F;Fedora</span><br><span class="line">curl -L https:&#x2F;&#x2F;packages.gitlab.com&#x2F;install&#x2F;repositories&#x2F;runner&#x2F;gitlab-runner&#x2F;script.rpm.sh | sudo bash</span><br></pre></td></tr></table></figure>
<h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># For RHEL&#x2F;CentOS&#x2F;Fedora</span><br><span class="line">sudo yum install -y gitlab-runner</span><br></pre></td></tr></table></figure>
<h4 id="3-注册（https-docs-gitlab-com-runner-register-index-html）"><a href="#3-注册（https-docs-gitlab-com-runner-register-index-html）" class="headerlink" title="3.注册（https://docs.gitlab.com/runner/register/index.html）"></a>3.注册（<a href="https://docs.gitlab.com/runner/register/index.html）" target="_blank" rel="noopener">https://docs.gitlab.com/runner/register/index.html）</a></h4><p>a.获取注册用的 url和token：project -&gt; settings -&gt; CI/CD -&gt; Specific Runner</p>
<p><img src="../images/gitlab-ci3.png" alt=""></p>
<p>b.执行注册程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gitlab-runner register</span><br><span class="line"></span><br><span class="line">Please enter the gitlab-ci coordinator URL (e.g. https:&#x2F;&#x2F;gitlab.com )</span><br><span class="line">https:&#x2F;&#x2F;gitlab.com</span><br><span class="line"></span><br><span class="line">Please enter the gitlab-ci token for this runner</span><br><span class="line">xxx</span><br><span class="line"></span><br><span class="line">Please enter the gitlab-ci description for this runner</span><br><span class="line">[hostname] my-runner</span><br><span class="line"></span><br><span class="line">Please enter the gitlab-ci tags for this runner (comma separated):</span><br><span class="line">my-tag,another-tag</span><br><span class="line"></span><br><span class="line">Please enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:</span><br><span class="line">shell</span><br></pre></td></tr></table></figure>
<p>关于executor: <a href="https://docs.gitlab.com/runner/executors/README.html#compatibility-chart" target="_blank" rel="noopener">https://docs.gitlab.com/runner/executors/README.html#compatibility-chart</a></p>
<h3 id="五、编写-gitlab-ci-yml文件（https-segmentfault-com-a-1190000010442764）"><a href="#五、编写-gitlab-ci-yml文件（https-segmentfault-com-a-1190000010442764）" class="headerlink" title="五、编写.gitlab-ci.yml文件（https://segmentfault.com/a/1190000010442764）"></a>五、编写.gitlab-ci.yml文件（<a href="https://segmentfault.com/a/1190000010442764）" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010442764）</a></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stages:</span><br><span class="line">  - build</span><br><span class="line">dev_build:</span><br><span class="line">  stage: build</span><br><span class="line">  tags:</span><br><span class="line">    - test</span><br><span class="line">  only:</span><br><span class="line">    - dev</span><br><span class="line">  script:</span><br><span class="line">    - npm i</span><br><span class="line">    - npm run build</span><br><span class="line">    - lftp -e &quot;set ssl:verify-certificate no;open $TARGET_IP; user $FTP_USERNAME $FTP_PASSWORD; mirror --reverse --verbose --delete $CI_PROJECT_DIR&#x2F;build&#x2F; .&#x2F;; bye&quot;</span><br></pre></td></tr></table></figure>

<h3 id="六、GitLab-CI的优势"><a href="#六、GitLab-CI的优势" class="headerlink" title="六、GitLab-CI的优势"></a>六、GitLab-CI的优势</h3><p>1.和GitLab集成，功能集成度较高</p>
<p>2.界面美观，结果直接展现在GitLab页面上，直观清晰</p>
<p>3.无需复杂配置，上手容易</p>
<h3 id="七、遇到的问题"><a href="#七、遇到的问题" class="headerlink" title="七、遇到的问题"></a>七、遇到的问题</h3><h4 id="1-GitLab-runner-权限修改"><a href="#1-GitLab-runner-权限修改" class="headerlink" title="1.GitLab-runner 权限修改"></a>1.GitLab-runner 权限修改</h4><p>解决：</p>
<ul>
<li>目录增加对应权限</li>
<li>将gitlab-runner user添加到root群组</li>
<li>更改执行用户为root(<a href="http://www.fidding.me/article/111" target="_blank" rel="noopener">http://www.fidding.me/article/111</a>)</li>
</ul>
<h4 id="2-GitLab-runner拉取代码失败"><a href="#2-GitLab-runner拉取代码失败" class="headerlink" title="2.GitLab-runner拉取代码失败"></a>2.GitLab-runner拉取代码失败</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Running with gitlab-runner 12.3.0 (a8a019e0)</span><br><span class="line">  on test-runner XHF4ESi3</span><br><span class="line">Using Shell executor...</span><br><span class="line">Running on vps...</span><br><span class="line">Fetching changes with git depth set to 50...</span><br><span class="line">Reinitialized existing Git repository in &#x2F;home&#x2F;gitlab-runner&#x2F;builds&#x2F;XHF4ESi3&#x2F;0&#x2F;charlesFinch&#x2F;ci-test&#x2F;.git&#x2F;</span><br><span class="line">fatal: git fetch-pack: expected shallow list</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">ERROR: Job failed: exit status 1</span><br></pre></td></tr></table></figure>
<p>解决：升级Git</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># centos 6</span><br><span class="line">yum install http:&#x2F;&#x2F;opensource.wandisco.com&#x2F;centos&#x2F;6&#x2F;git&#x2F;x86_64&#x2F;wandisco-git-release-6-1.noarch.rpm</span><br><span class="line"></span><br><span class="line"># centos 7</span><br><span class="line">yum install http:&#x2F;&#x2F;opensource.wandisco.com&#x2F;centos&#x2F;7&#x2F;git&#x2F;x86_64&#x2F;wandisco-git-release-7-1.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install –y git</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CI/CD</category>
      </categories>
      <tags>
        <tag>ci</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Gulp压缩CSS/JS</title>
    <url>/gulp-compress-css-js/</url>
    <content><![CDATA[<h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><h3 id="1-安装gulp"><a href="#1-安装gulp" class="headerlink" title="1.安装gulp"></a>1.安装gulp</h3><pre><code>npm install -g gulp</code></pre><h3 id="2-检查gulp-版本"><a href="#2-检查gulp-版本" class="headerlink" title="2.检查gulp 版本"></a>2.检查gulp 版本</h3><pre><code>gulp -v</code></pre><a id="more"></a>
<h3 id="3-在项目文件夹下安装gulp"><a href="#3-在项目文件夹下安装gulp" class="headerlink" title="3.在项目文件夹下安装gulp"></a>3.在项目文件夹下安装gulp</h3><pre><code>npm install --save-dev gulp</code></pre><h1 id="二、压缩JS"><a href="#二、压缩JS" class="headerlink" title="二、压缩JS"></a>二、压缩JS</h1><h3 id="1-安装gulp-uglify模块"><a href="#1-安装gulp-uglify模块" class="headerlink" title="1.安装gulp-uglify模块"></a>1.安装gulp-uglify模块</h3><pre><code>npm install gulp-uglify</code></pre><h3 id="2-在项目根目录创建gulpfile-js文件"><a href="#2-在项目根目录创建gulpfile-js文件" class="headerlink" title="2.在项目根目录创建gulpfile.js文件"></a>2.在项目根目录创建gulpfile.js文件</h3><h3 id="3-在gulpfile-js文件中写入代码"><a href="#3-在gulpfile-js文件中写入代码" class="headerlink" title="3.在gulpfile.js文件中写入代码"></a>3.在gulpfile.js文件中写入代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="comment">// 获取 uglify 模块（用于压缩 JS）</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 js 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp script 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'jscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'js/1.js'</span>)</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/js'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="4-命令行中切换到gulpfile-js所在的目录，执行如下命令开始压缩"><a href="#4-命令行中切换到gulpfile-js所在的目录，执行如下命令开始压缩" class="headerlink" title="4.命令行中切换到gulpfile.js所在的目录，执行如下命令开始压缩"></a>4.命令行中切换到gulpfile.js所在的目录，执行如下命令开始压缩</h3><pre><code>gulp script</code></pre><h3 id="5-在gulpfile-js中添加自动监视任务"><a href="#5-在gulpfile-js中添加自动监视任务" class="headerlink" title="5.在gulpfile.js中添加自动监视任务"></a>5.在gulpfile.js中添加自动监视任务</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在命令行使用 gulp auto 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'auto'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 监听文件修改，当文件被修改则执行 script 任务</span></span><br><span class="line">    gulp.watch(<span class="string">'js/1.js'</span>, [<span class="string">'jscompress'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="6-在gulpfile-js中设置默认任务（即命令行中输入gulp执行的任务）"><a href="#6-在gulpfile-js中设置默认任务（即命令行中输入gulp执行的任务）" class="headerlink" title="6.在gulpfile.js中设置默认任务（即命令行中输入gulp执行的任务）"></a>6.在gulpfile.js中设置默认任务（即命令行中输入gulp执行的任务）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 gulp.task('default') 定义默认任务</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'auto'</span>]);</span><br></pre></td></tr></table></figure>

<h1 id="三、压缩CSS"><a href="#三、压缩CSS" class="headerlink" title="三、压缩CSS"></a>三、压缩CSS</h1><h3 id="1-安装gulp-clean-css模块"><a href="#1-安装gulp-clean-css模块" class="headerlink" title="1.安装gulp-clean-css模块"></a>1.安装gulp-clean-css模块</h3><pre><code>npm install gulp-clean-css</code></pre><h3 id="2-在gulpfile-js文件中添加相应任务"><a href="#2-在gulpfile-js文件中添加相应任务" class="headerlink" title="2.在gulpfile.js文件中添加相应任务"></a>2.在gulpfile.js文件中添加相应任务</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 cleancss 模块（用于压缩 CSS）</span></span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 css 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp csscompress 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'csscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">  <span class="keyword">return</span>  gulp.src(<span class="string">'css/my.css'</span>)</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(cleanCSS())</span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/css'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="3-修改添加对应的自动监视任务"><a href="#3-修改添加对应的自动监视任务" class="headerlink" title="3.修改添加对应的自动监视任务"></a>3.修改添加对应的自动监视任务</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在命令行使用 gulp auto 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'auto'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 监听文件修改，当文件被修改则执行 script 任务</span></span><br><span class="line">    gulp.watch(<span class="string">'js/1.js'</span>, [<span class="string">'jscompress'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'css/my.css'</span>, [<span class="string">'csscompress'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="四、重命名文件"><a href="#四、重命名文件" class="headerlink" title="四、重命名文件"></a>四、重命名文件</h1><h3 id="1-安装gulp-rename模块"><a href="#1-安装gulp-rename模块" class="headerlink" title="1.安装gulp-rename模块"></a>1.安装gulp-rename模块</h3><pre><code>npm install gulp-rename</code></pre><h3 id="2-修改gulpfile-js内代码"><a href="#2-修改gulpfile-js内代码" class="headerlink" title="2.修改gulpfile.js内代码"></a>2.修改gulpfile.js内代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="comment">// 获取 uglify 模块（用于压缩 JS）</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="comment">// 获取 cleancss 模块（用于压缩 CSS）</span></span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span><br><span class="line"><span class="keyword">var</span> rename = <span class="built_in">require</span>(<span class="string">"gulp-rename"</span>);</span><br><span class="line"><span class="keyword">var</span> gutil = <span class="built_in">require</span>(<span class="string">'gulp-util'</span>);<span class="comment">//错误信息输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 js 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp jscompress 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'jscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'js/1.js'</span>)</span><br><span class="line">       .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123; gutil.log(gutil.colors.red(<span class="string">'[Error]'</span>), err.toString()); &#125;)<span class="comment">//错误信息输出</span></span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 css 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp csscompress 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'csscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'css/my.css'</span>)</span><br><span class="line">        .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(cleanCSS())</span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'dist/css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在命令行使用 gulp auto 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'auto'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 监听文件修改，当文件被修改则执行 script 任务</span></span><br><span class="line">    gulp.watch(<span class="string">'js/1.js'</span>, [<span class="string">'jscompress'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'css/my.css'</span>, [<span class="string">'csscompress'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 gulp.task('default') 定义默认任务</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'auto'</span>]);</span><br></pre></td></tr></table></figure>
<h1 id="五、增加ES6支持"><a href="#五、增加ES6支持" class="headerlink" title="五、增加ES6支持"></a>五、增加ES6支持</h1><h3 id="1-安装gulp-babel模块"><a href="#1-安装gulp-babel模块" class="headerlink" title="1.安装gulp-babel模块"></a>1.安装gulp-babel模块</h3><pre><code>npm install --save-dev babel-core gulp-babel babel-preset-es2015</code></pre><h3 id="2-修改文件"><a href="#2-修改文件" class="headerlink" title="2.修改文件"></a>2.修改文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="comment">// 获取 uglify 模块（用于压缩 JS）</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="comment">// 获取 cleancss 模块（用于压缩 CSS）</span></span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>);</span><br><span class="line"><span class="keyword">var</span> rename = <span class="built_in">require</span>(<span class="string">"gulp-rename"</span>);</span><br><span class="line"><span class="keyword">var</span> gutil = <span class="built_in">require</span>(<span class="string">'gulp-util'</span>);</span><br><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 js 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp jscompress 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'jscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'js/1.js'</span>)</span><br><span class="line">       .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">       <span class="comment">//babel转码</span></span><br><span class="line">       .pipe(babel(&#123;</span><br><span class="line">           presets: [<span class="string">'es2015'</span>]</span><br><span class="line">       &#125;))</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(uglify())</span><br><span class="line">       .on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123; gutil.log(gutil.colors.red(<span class="string">'[Error]'</span>), err.toString()); &#125;)</span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 css 文件</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp csscompress 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'csscompress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 找到文件</span></span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'css/my.css'</span>)</span><br><span class="line">        .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    <span class="comment">// 2. 压缩文件</span></span><br><span class="line">        .pipe(cleanCSS())</span><br><span class="line">        <span class="comment">// 3. 另存压缩后的文件</span></span><br><span class="line">        .pipe(gulp.dest(<span class="string">'css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在命令行使用 gulp auto 启动此任务</span></span><br><span class="line">gulp.task(<span class="string">'auto'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 监听文件修改，当文件被修改则执行 script 任务</span></span><br><span class="line">    gulp.watch(<span class="string">'js/1.js'</span>, [<span class="string">'jscompress'</span>]);</span><br><span class="line">    gulp.watch(<span class="string">'css/my.css'</span>, [<span class="string">'csscompress'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 gulp.task('default') 定义默认任务</span></span><br><span class="line"><span class="comment">// 在命令行使用 gulp 启动 script 任务和 auto 任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'auto'</span>]);</span><br></pre></td></tr></table></figure>


<p>参考资料：</p>
<p><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="noopener">https://github.com/nimojs/gulp-book</a><br><a href="http://www.cnblogs.com/Tzhibin/p/4318457.html" target="_blank" rel="noopener">http://www.cnblogs.com/Tzhibin/p/4318457.html</a><br><a href="https://stackoverflow.com/questions/34398338/uglification-failed-unexpected-character" target="_blank" rel="noopener">https://stackoverflow.com/questions/34398338/uglification-failed-unexpected-character</a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>早高峰地铁寻座指南</title>
    <url>/how-to-ride-in-subway-train/</url>
    <content><![CDATA[<p>作为一名上班族，要想在苏州这样的准一线城市，每天高效便捷地完成通勤，地铁绝对是我的不二选择，相比电瓶车的行驶安全性、私家车的道路拥堵，以及公交车的等候时长，地铁在各方面都堪称完美，然而作为公共交通方式的一种，地铁也和公交一样，面临着棘手的问题—拥挤。<a id="more"></a></p>
<p>我是半年前开始坐地铁通勤的，之前也会偶尔在节假日乘坐，当时感觉个别站点上下客人流确实很大，然而现在看来，和早高峰通勤的人流相比，简直不是一个量级。在写文章的这个点，我查了下维基百科关于苏州轨道交通的一组数据：“高峰时期约为每小时4.5万人次…列车共4节编组…车厢类型为B 型，面积约53平米”，如果换算成单向客流，4.5万/2=22500人次，以2号线为例，发车间隔4分钟，早高峰共15班列车，则拥挤等级（车厢内每平米的站立人数）= 22500/15/4/53=7.07人/平米，即一张1.5x2的床上，要站21个人！虽然数据还不够精确，但也足见地铁的拥挤程度。</p>
<p>久而久之，在这样拥挤的环境下，要想每天以一个“自然的姿势”乘地铁，或者，在长距离乘坐的情况下，希望能找到一个座位，那就需要开始思考，并总结经验，我自己也尝试了下，这里分享一些“实战”后获取的技巧和心得，希望能帮助到其他人</p>
<ol>
<li>错峰出行。这应该属于常识，有条件的上班族当然最好错开高峰，但对于大多数人，不太容易实现</li>
<li>选对等候的位置。什么意思？车厢与车厢连结处，也会设置少量的座位，但该区域空间较小，站不了几个人，如果你等候的位置，恰好对应到了这样的车厢，会影响你下一步的可选择空间</li>
<li>上车后请往中间走。这不是套话，曾经目睹无数次，在车厢上下车位置的人已成肉夹馍，但在车厢中间还有很大空间。原理很简单，中部再拥挤，最多站两排人，但上下车的位置，那真的是“只有更多，没有最多”</li>
<li>优先站在年纪较大的人面前。如果想后续有座位，这招绝对实用，原理也很简单，坐早高峰出行的阿姨伯伯，一般都是短距离乘坐</li>
<li>不要站在睡觉、闷头玩手机的人面前。这两类人都是会长距离乘坐的</li>
<li>遇到大包小包的人，如果中间有经过火车/汽车站的，可以考虑站在这样的人面前</li>
<li>注意观察拥挤的站点，提前做好准备</li>
</ol>
<p>以上几点，其实还只是简单的技巧，相信很多人都知道。</p>
<p>此外，还有一种进阶的操作，是我偶然发现的，感兴趣的可以尝试：如果你仔细观察，会发现大部分人每天的生活基本是有规可循的，理解了其中的原理，对我们坐地铁有很大帮助，下面我举个例子：</p>
<p>曾经有一段时间，我每天都会搭8：15那班列车，上车后，在第二节车厢，找到一个穿灰色/咖啡色外套、提黑色公文包的男人，一般这个时候他都在玩手机，我会站在他面前，等驶过两站后，他下车，这时候我就有座位了，是不是很神奇？不过仔细想想，偶然中存在着必然，每天精确到点的起床、出门、通勤、工作，虽然很规律，但时间一久，就出现了高度的重复性，就像电影《土拨鼠日》一样，下一刻会发生什么，你都基本能预料到，同时，别人也能预料到你，看似不可思议的事，就这样发生了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>【JS】常用继承方式总结</title>
    <url>/inheritance-method-summary/</url>
    <content><![CDATA[<h3 id="方式一：原型链继承（prototype模式）"><a href="#方式一：原型链继承（prototype模式）" class="headerlink" title="方式一：原型链继承（prototype模式）"></a>方式一：原型链继承（prototype模式）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name</span><br><span class="line">  <span class="keyword">this</span>.colors = [<span class="string">'red'</span>,<span class="string">'green'</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Parent.prototype.getName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span> (<span class="params">age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Child.prototype = <span class="keyword">new</span> Parent()</span><br><span class="line">Child.prototype.constructor = Child</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> child1 = <span class="keyword">new</span> Child (<span class="string">'20'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.getName) <span class="comment">// ƒ () &#123;console.log(this.name)&#125;</span></span><br><span class="line"><span class="keyword">var</span> child2 = <span class="keyword">new</span> Child (<span class="string">'20'</span>)</span><br><span class="line">child2.colors.push(<span class="string">'blue'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.colors) <span class="comment">//['red','green','blue']</span></span><br><span class="line"><span class="built_in">console</span>.log(child2.colors) <span class="comment">//['red','green','blue']</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>缺点：</p>
<p>1.引用类型的属性被所有实例共享</p>
<p>2.创建Child的实例时，无法向Parent传参</p>
<h3 id="方式二：经典继承（构造函数绑定）"><a href="#方式二：经典继承（构造函数绑定）" class="headerlink" title="方式二：经典继承（构造函数绑定）"></a>方式二：经典继承（构造函数绑定）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name</span><br><span class="line">  <span class="keyword">this</span>.colors = [<span class="string">'red'</span>,<span class="string">'green'</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Parent.prototype.getName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span> (<span class="params">age, name</span>) </span>&#123;</span><br><span class="line">  Parent.call(<span class="keyword">this</span>, name) <span class="comment">//核心</span></span><br><span class="line">  <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> child1 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'bill'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.getName) <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> child2 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'lily'</span>)</span><br><span class="line">child2.colors.push(<span class="string">'blue'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.colors) <span class="comment">//['red','green']</span></span><br><span class="line"><span class="built_in">console</span>.log(child2.colors) <span class="comment">//['red','green','blue']</span></span><br></pre></td></tr></table></figure>
<p>优点：</p>
<p>1.避免了引用类型的属性被所有实例共享（因为根本没用到原型链）</p>
<p>2.创建Child的实例时，可以向Parent传参</p>
<p>缺点：</p>
<p>1.属性都在构造函数中定义，每次创建实例都会创建一遍属性</p>
<p>2.没有继承到Parent原型链上的方法</p>
<h3 id="方式三：组合继承（原型链继承和经典继承双剑合璧）"><a href="#方式三：组合继承（原型链继承和经典继承双剑合璧）" class="headerlink" title="方式三：组合继承（原型链继承和经典继承双剑合璧）"></a>方式三：组合继承（原型链继承和经典继承双剑合璧）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name</span><br><span class="line">  <span class="keyword">this</span>.colors = [<span class="string">'red'</span>,<span class="string">'green'</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Parent.prototype.getName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span> (<span class="params">age, name</span>) </span>&#123;</span><br><span class="line">  Parent.call(<span class="keyword">this</span>, name) <span class="comment">//核心</span></span><br><span class="line">  <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Child.prototype = <span class="keyword">new</span> Parent()</span><br><span class="line">Child.prototype.constructor = Child</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> child1 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'bill'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.getName) <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> child2 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'lily'</span>)</span><br><span class="line">child2.colors.push(<span class="string">'blue'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.colors) <span class="comment">//['red','green']</span></span><br><span class="line"><span class="built_in">console</span>.log(child2.colors) <span class="comment">//['red','green','blue']</span></span><br><span class="line"><span class="built_in">console</span>.log(Child.prototype) <span class="comment">//&#123;name: undefined, colors: Array(2), constructor: ƒ&#125;</span></span><br></pre></td></tr></table></figure>
<p>优点：</p>
<p>1.融合原型链继承和构造函数的优点融合原型链继承和构造函数的优点</p>
<p>缺点：</p>
<p>1.两次调用Parent构造函数，在Child.prototype上增加了额外、不需要的属性</p>
<h3 id="方式四：寄生组合继承"><a href="#方式四：寄生组合继承" class="headerlink" title="方式四：寄生组合继承"></a>方式四：寄生组合继承</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name</span><br><span class="line">  <span class="keyword">this</span>.colors = [<span class="string">'red'</span>,<span class="string">'green'</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Parent.prototype.getName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span> (<span class="params">age, name</span>) </span>&#123;</span><br><span class="line">  Parent.call(<span class="keyword">this</span>, name) <span class="comment">//核心</span></span><br><span class="line">  <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Child.prototype = <span class="built_in">Object</span>.create(Parent.prototype) <span class="comment">//核心</span></span><br><span class="line">Child.prototype.constructor = Child</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> child1 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'bill'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.getName) <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">var</span> child2 = <span class="keyword">new</span> Child (<span class="string">'20'</span>,<span class="string">'lily'</span>)</span><br><span class="line">child2.colors.push(<span class="string">'blue'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(child1.colors) <span class="comment">//['red','green']</span></span><br><span class="line"><span class="built_in">console</span>.log(child2.colors) <span class="comment">//['red','green','blue']</span></span><br><span class="line"><span class="built_in">console</span>.log(Child.prototype) <span class="comment">//&#123;constructor: ƒ&#125;</span></span><br></pre></td></tr></table></figure>
<p>优点：<br>在组合继承的基础上，避免了在 Child.prototype 上面创建不必要的、多余的属性。与此同时，原型链还能保持不变；因此，还能够正常使用 instanceof 和 isPrototypeOf</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】怎么学JavaScript？</title>
    <url>/how-to-learn-javascript/</url>
    <content><![CDATA[<p>鉴于时不时，有同学私信问我（老姚，下同）怎么学前端的问题。这里统一回复一下，如下次再遇到问我此问题同学，就直接把本文链接地址发给你了。</p>
<p>首先说句题外话。关于有人管我叫大神的事情。个人感觉这跟你买东西时，人家管你叫帅哥一样，你答应与否都无妨。</p>
<a id="more"></a>

<p>正题开始，“前端怎么学”应该因人而异，别人的方法未必适合自己。就说说我的学习方法吧：我把大部分时间放在学习js上了。因为这个js的学习曲线，先平后陡。项目实践和练习啥的，我不说了，主要说下工作之外的时间利用问题。我是怎么学的呢，看书，分析源码。个人这几天统计了一下，前端书籍目前看了50多本吧，大部分都是js的。市面上的书基本，差不多都看过。</p>
<p>第一个问题是，看书有啥好处？</p>
<p>好处应该是不言而明的，书看多了，基础会逐渐夯实起来。看多了，自己的判断力，自然就上来了。看别人的文章，就能很快判断出，对方每块儿讲得对不对，哪块儿又是自己不清楚的，模棱两可的。当然也为看源码，分析源码提供了基础。</p>
<p>10本书读2遍的好处，应该大于一本书读20遍。10本书的交集，那就是基础知识的核心，而并集那就是所有的知识。好书当然要多读，反复读。但是只读一本是不行的。因为每本书的侧重点都不一样。从不同的侧面，去理解一个知识点，是很有意义的。</p>
<p>所以特别佩服印度人，他跟你讲英文，你一个词语没听懂，他会蹦出n个同一意思的单词，你听懂一个，就ok了。看书也是这样的，某一块讲得不透彻，不用担心，其他书籍可以帮助你来了解。</p>
<p>第二个问题是，书籍推荐。</p>
<p>个人觉得不错的，没事可以翻翻的。书籍如下：</p>
<blockquote>
<p>《javascript面向对象编程指南》，风格轻松易懂，比较适合初学者，原型那块儿讲得透彻，12种继承方式呢。</p>
</blockquote>
<blockquote>
<p>《js权威指南》、《js高级程序设计》，这两本书经典是经典，但是太厚，适合把其中任意一章都当成一本书来读。洋洋洒洒，很难一口气看完。比较适合当做参考书。</p>
</blockquote>
<blockquote>
<p>《你不知道的javascript》狙击js核心细节，闭包、原型、this讲得都还清楚。目前《中册》也出了，还在看。</p>
</blockquote>
<blockquote>
<p>《js设计模式与开发实践》js设计模式也是要学的，此书把js的设计模式讲得非常清晰，一点不晦涩，看起来没多少难度。</p>
</blockquote>
<blockquote>
<p>《正则指引》，分析源码时，如果正则表达式不懂，没法进行下去的。此书相对来说讲得比较清晰。</p>
</blockquote>
<blockquote>
<p>《基于MVC的JavaScript Web富应用开发》，看完后，基本能写出自己的mvc框架了。是本好书。</p>
</blockquote>
<blockquote>
<p>《javascript函数式编程》，js是一门函数式语言，此书是函数式编程一个入门，函数是一等公民那是非常重要的。</p>
</blockquote>
<blockquote>
<p>《js忍者秘籍》，jq作者写的，没有传说中的那么难读，话说就算你看完并理解所有知识点，也不会达到世界高手级别的。因为你还没有做到随心所欲。</p>
</blockquote>
<blockquote>
<p>《javascript框架设计》，如果初看此书，会觉得此书有罗列代码之嫌。在我看来，此书讲究的是框架的全局观。以上书籍是我认为是成就高手之路上必须看的，也需要反复看。</p>
</blockquote>
<p>css相关的书籍，说实话我看得比较少，总共有六七本吧。有两本必须推荐一下：</p>
<blockquote>
<p>《css权威指南》，css基础知识点那是讲得非常清楚的。什么层叠优先级、line-height啥的。不是随便一本书都敢叫“权威指南”的。</p>
</blockquote>
<blockquote>
<p>《css揭秘》，此书我也是不断的看，此书才不屑于全面讲css3各属性呢。css规范文档能讲的，它只会讲你最不在意的。此书解决的47问题，解决思路和解决方案同等重要，很有启发性。以上各书你都可以不买，至少买本此书吧。</p>
</blockquote>
<p>第三个问题，怎么看。</p>
<p>想必很多同学，都想看书，但是很难看下去。文字部分相对来说还能看看，一遇到代码，头皮就发麻了。此问题一开始时我也遇到的。</p>
<p>说一个学习理论。比如说学英语，有个开水理论。词汇量必须达到6000才行，如果没达到，英文水平不会上去的，这跟烧开水一样，没事烧烧，放着凉凉，从来没烧到100度，那么此水是永远不能喝的。一旦煮沸过，就可以随时喝了。</p>
<p>20本书你看不下去，说明什么呢？任何一本书，你都没看完过。熟悉的，永远只是前三章。别笑，我原先也是这样的。</p>
<p>那么现在的问题是，怎么把一本书看完呢？很简单，敲。《基于MVC的JavaScript Web富应用开发》这本书我看时，就是这样，终于有一天，我下定决心要把此书从头到尾敲一遍。文字加代码都敲，然后就一章一章得看完了。代码敲一遍后，你会发现，没之前看起来的那么难。</p>
<p>如果你属于一看书就犯困那种同学。强烈建议你把《javascript面向对象编程指南》此书从头到尾敲一遍。坚持看完一本书后，信心就上来了。先保证看完一本再说,看完3本后，基本应该能做到几天就能看一本了。万事开头难，加油吧。</p>
<p>第四个问题，看书的层次问题。</p>
<p>书看完后，要自己总结，要与其他书籍对比看。有同学同时对比着看《权威指南》和《高设》来的。随便拿出个知识点，你都能闭着眼睛说得头头是道，说明水平够了。</p>
<p>下一块就是源码的学习了。看框架源码之前，想说一件事情：dom的api不懂，没问题，你可以百度。</p>
<p>但是正则一定要先研究研究，不然大多数人去尝试分析源码时，遇到的挫折都在于此。</p>
<p>怎么去阅读源码呢？敲，照着敲。</p>
<p>有哪些代码值得去敲呢？优秀框架或者库的源码都值得你去敲。但是拿jq来敲，来入门，那不行的。原因：太他么长了。八九千行呢！！</p>
<p>个人觉得underscore.js库是不错的第一个选择。原因都是工具方法，敲完以后自己的水平应该略有小成吧。其实有一些api的实现，你要把它当成getElementById一样，深深的印在脑海里。比如extend方法，必须张口就来。敲完underscore库后，可以考虑去看看《javascript函数式编程》这本书了。</p>
<p>jq的源码不好敲。那么zepto的源码比较少1800多行，敲一天应该敲完了。敲几遍后，把所有不懂的地方，都百度清楚，然后就可以写自己的类jq的库了。然后就可以作为一项技能写进自己的简历里。比如“创建过自己的jquery库”。当然敲的过程，还能帮助自己对jq的api认识。</p>
<p>然后是backbone.js，因为此框架是以类jq和underscore为基础的mvc框架。代码也没多少行。敲吧。spine.js与backbone类似。可以在敲其之前，先看看那本《基于MVC的JavaScript Web富应用开发》。希望你的简历可以添加这么一笔，“创建过自己的mvc框架”。</p>
<p>其他的，我也敲过一些。包括jq.validate.js，包括一些插件。如果你愿意的话，bootstrap你可以去敲敲啊。源码挺多的，可以按插件逐个来敲。分析明白了，轮播、分页、下拉框等等的插件那还不是分分钟随手就写一个了。最起码看看人家api接口是怎么设计的也是极好的。话说个人在阅读其css代码中，也学到了不少东西。说到插件，有两个必须提提，一个是表格插件，一个是树。都敲完，简历里可以这么写上，“创建过自己的UI框架”。</p>
<p>当然了，你也可以敲你喜欢的框架代码，重要的是明白其实现原理，最好理解其为啥那么设计，如果对设计模式比较熟悉的话，会经常发现原来是这么回事。</p>
<p>照着敲只是分析源码的入门，用途也是为了学习，最后能用在自己的项目中，那是才是正道。就算没啥用，也是打发时间的好方式，比看电视剧强多了。我闲着无聊时，就背着敲underscore源码。最后说句，如果你简历上能如期写上那几句话后，必须是大神。加油吧。</p>
<p>后记</p>
<p>写本文的最初目的，正如文章开头说的那样，方便自己回复大家的提问。本站的任何一篇分享学习经验的文章，基本都会引起共鸣，这确实是一个值得讨论的话题。这里再说说几个事情。</p>
<blockquote>
<p>有人问我前端工作经验事情。</p>
</blockquote>
<p>没几年。三年多。</p>
<blockquote>
<p>初学者或新手（beginner）怎么办？</p>
</blockquote>
<p>看书和分析源码是重要的提高方式，但不适合新手。新手需要的是能快速的入门和入行，能快速的上手工作。一种快捷的学习方式就是看视频。正如有的同学说得那样，知道有哪些东西，怎么用就可以了。</p>
<p>看视频是有好处的，首先它是一种被动学习方式。我最开始的入门也是看视频来的，只需要看就行了。一遍没懂，再放一遍，我基本上是1.5倍数去看的。</p>
<p>而读书是一种主动方式，需要自己一页一页翻。需要自己主动的去理解。而很多东西，也许只是视频老师一句话，就能突出的重点，需要我们自己去解读。还有另一件事情是，比如发现自己某个知识点不太清楚，可以单独去百度。比如this，文章很多的。这种学习方式也是快速掌握知识点的好办法。</p>
<p>书籍需要技术评审，那么看文章一定要看看评论。不过视频就不好说了，视频一般都不会讲得太深入，偶尔也有讲错的。当年我也曾被一些视频误导过，建议找不错的视频看看。各大网站培训机构的免费视频挺多的。</p>
<blockquote>
<p>看书和分析源码的时机。</p>
</blockquote>
<p>但已经工作一年半载时，正是提高的好时候，此时可以去看书了。全面系统的梳理知识点，扫清自己的盲区。如果只是靠项目经验是不够的，通过项目来学习，那肯定是必须的，工作本身就是一个学习的过程。</p>
<p>但是工作三年不看书的话，学又能学到多少呢？更何况每个项目都很类似，一直处在舒适区，那真就是5年经验重复第一年的了。所以我不认同这句话：面试时强调自己的学习能力是工作能力不强的表现。3年经验的水平，完全有可能超过5年的。</p>
<blockquote>
<p>没有时间去学习？</p>
</blockquote>
<p>如果你还没毕业，就已经天天在本站混了，其实你领先了一大步。都是混过大学的，天天充斥着lol和电视剧的陪伴，我只想说进入社会是要还的。最可怕的是什么呢？该还、还不还（这几个字别念错了）。时间是有的，就看你愿意付出不。下班后学习，周末学习，节假日别人玩的时候，在家敲代码，这样才能领先别人。</p>
<blockquote>
<p>兴趣问题？</p>
</blockquote>
<p>兴趣和擅长是一个良性迭代循环。你擅长某件事情，就会越喜欢它，越喜欢，就越愿意花时间，进而越擅长。此道理都懂，只是缺乏一个trigger。</p>
<p>如果你喜欢玩游戏的话，其实你可能非常适合做前端。玩游戏就是一个反馈机制，前端工作的反馈，相对其他工作来说也是非常及时的。代码一改，网页一刷，就看到效果了。擅长、优越感、成就感通常都是连在一起的。每看完一本书，我都觉得很有成就感。每敲完一个库，也有成就感。</p>
<p>以上纯属一家之言，每个人的学习习惯、方式、态度都不一样。先端正态度、找到自己的学习方法，进而养成坚持下去的习惯。最后说一句，你我共勉：只要你走在正确的道路上，不管、走得多慢，都是前进！</p>
<p>本文完。</p>
<p>原文链接：<a href="https://zhuanlan.zhihu.com/p/23265155" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23265155</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>安装office 2010，提示需要安装MSXML解决方法</title>
    <url>/install-office-2010-requires-msxml-version-6101129/</url>
    <content><![CDATA[<h4 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h4><p>安装office 2010，提示需要安装MSXML版本6.10.1129<br><img src="../images/msxml.jpg" alt="msxml.jpg"></p>
<a id="more"></a>
<h4 id="二、问题解决"><a href="#二、问题解决" class="headerlink" title="二、问题解决"></a>二、问题解决</h4><p>创建一个txt文件，把如下复制进去,名字改为a.reg 运行一下即可解决</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\TypeLib\&#123;F5078F18-C551-11D3-89B9-0000F81FE221&#125;]</span><br><span class="line">[HKEY_CLASSES_ROOT\TypeLib\&#123;F5078F18-C551-11D3-89B9-0000F81FE221&#125;\6.0]</span><br><span class="line">[HKEY_CLASSES_ROOT\TypeLib\&#123;F5078F18-C551-11D3-89B9-0000F81FE221&#125;\6.0\0]</span><br><span class="line">[HKEY_CLASSES_ROOT\TypeLib\&#123;F5078F18-C551-11D3-89B9-0000F81FE221&#125;\6.0\0\win32]</span><br><span class="line">@=<span class="string">"c:\\windows\\system32\\msxml6.dll"</span></span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="http://blog.51cto.com/chinaxin/1891418" target="_blank" rel="noopener">安装office 2010，提示需要安装MSXML版本6.10.1129.0组件的解决办法</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>【Angular】在Angular 5中引入jQuery插件</title>
    <url>/integrate-jquery-plugin-in-angular/</url>
    <content><![CDATA[<h4 id="1-安装jQuery"><a href="#1-安装jQuery" class="headerlink" title="1.安装jQuery"></a>1.安装jQuery</h4><p><code>npm install --save jquery</code></p>
<h4 id="2-安装jQuery定义文件"><a href="#2-安装jQuery定义文件" class="headerlink" title="2.安装jQuery定义文件"></a>2.安装jQuery定义文件</h4><p><code>npm install @types/jquery --save</code></p>
<a id="more"></a>
<h4 id="3-安装jQuery插件（以daterangepicker为例）"><a href="#3-安装jQuery插件（以daterangepicker为例）" class="headerlink" title="3.安装jQuery插件（以daterangepicker为例）"></a>3.安装jQuery插件（以daterangepicker为例）</h4><p><code>npm install bootstrap-daterangepicker --save</code></p>
<h4 id="4-在ng目录下-angular-cli-json的”styles”中引入daterangepicker-css"><a href="#4-在ng目录下-angular-cli-json的”styles”中引入daterangepicker-css" class="headerlink" title="4.在ng目录下.angular-cli.json的”styles”中引入daterangepicker.css"></a>4.在ng目录下.angular-cli.json的”styles”中引入daterangepicker.css</h4><p><code>&quot;styles&quot;: [daterangepicker.css]</code></p>
<h4 id="5-在对应的组件中导入jQuery和daterangepicker"><a href="#5-在对应的组件中导入jQuery和daterangepicker" class="headerlink" title="5.在对应的组件中导入jQuery和daterangepicker"></a>5.在对应的组件中导入jQuery和daterangepicker</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> $ <span class="keyword">from</span> <span class="string">'jquery'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'bootstrap-daterangepicker'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="6-在typings-d-ts中为插件添加定义"><a href="#6-在typings-d-ts中为插件添加定义" class="headerlink" title="6.在typings.d.ts中为插件添加定义"></a>6.在typings.d.ts中为插件添加定义</h4><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> JQuery &#123;</span><br><span class="line">   daterangepicker(options?: <span class="built_in">any</span>, callback?: <span class="built_in">Function</span>) : <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考链接：</p>
<p><a href="https://medium.com/@NetanelBasal/typescript-integrate-jquery-plugin-in-your-project-e28c6887d8dc" target="_blank" rel="noopener">Typescript — Integrate jQuery Plugin in your Project</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic环境搭建及基本命令</title>
    <url>/ionic-environment-build-and-basic-command/</url>
    <content><![CDATA[<h3 id="一、安装软件"><a href="#一、安装软件" class="headerlink" title="一、安装软件"></a>一、安装软件</h3><p><strong>1.安装:</strong> <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Nodejs</a></p>
<p><strong>2.cmd验证：</strong><code>node -v</code></p>
<p><strong>3.安装cnpm(npm镜像)：</strong><code>npm i cnpm -g</code></p>
<a id="more"></a>
<p><strong>4.cmd验证：</strong><code>cnpm -v</code></p>
<p><strong>5.安装cordova和Ionic:</strong><code>cnpm i cordova ionic -g</code></p>
<p><strong>6.cmd验证：</strong><code>cordova -v</code>和 <code>ionic -v</code></p>
<p><strong>7.安装64bit的</strong> <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JDK</a></p>
<p><strong>8.安装:</strong> <a href="https://developer.android.com/studio/index.html" target="_blank" rel="noopener">Android Studio</a></p>
<h3 id="二、设置环境变量"><a href="#二、设置环境变量" class="headerlink" title="二、设置环境变量"></a>二、设置环境变量</h3><p><strong>1.JDK相关环境变量：</strong></p>
<p>a.新建一个系统变量“JAVA_HOME”，值为刚才安装的64bit jdk 的路径:C:\Program Files\Java\jdk1.8.0_121</p>
<p><img src="../images/ionic1.png" alt="ionic1"></p>
<p>b.找到Path，将jdk的bin路径添加至末尾，保存</p>
<p><img src="../images/ionic2.png" alt="ionic2"></p>
<p>c.cmd验证：<code>java -version</code></p>
<p><strong>2.为Android SDK设置相关环境变量：</strong></p>
<p>a.新建一个系统变量“ADT_HOME”，值为Android SDK的路径：C:\Users\yourname\AppData\Local\Android\sdk</p>
<p><img src="../images/ionic3.png" alt="ionic3"></p>
<p>b.Path下添加：将 Android SDK 的 tools 和 platform-tools 路径添加至“变量值”末尾并保存</p>
<p><img src="../images/ionic4.png" alt="ionic4"></p>
<p><img src="../images/ionic5.png" alt="ionic5"></p>
<p><strong>3.基本命令</strong>（先挂VPN）</p>
<p>a.创建app:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd start Myapp tabs  --v2</span><br></pre></td></tr></table></figure>
<p>b.模拟运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ionic serve</span><br><span class="line">ionic serve --l</span><br></pre></td></tr></table></figure>
<p>c.添加平台：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ionic platform add android</span><br><span class="line">ionic platform add ios</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ionic</category>
      </categories>
      <tags>
        <tag>ionic</tag>
      </tags>
  </entry>
  <entry>
    <title>ECharts常用配置</title>
    <url>/echarts-options/</url>
    <content><![CDATA[<h4 id="1-echarts元素样式"><a href="#1-echarts元素样式" class="headerlink" title="1.echarts元素样式"></a>1.echarts元素样式</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#scoreLine</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-柱状图-当数据较多时，动态调整bar间距"><a href="#2-柱状图-当数据较多时，动态调整bar间距" class="headerlink" title="2.柱状图-当数据较多时，动态调整bar间距"></a>2.柱状图-当数据较多时，动态调整bar间距</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="keyword">this</span>.compareImgData.length</span><br><span class="line">    <span class="keyword">let</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">'indexCompareBar'</span>)</span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">15</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> barChart = echarts.init(ele)</span><br><span class="line">        barChart.setOption(option)</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            ele.style.height = len * <span class="number">20</span> + <span class="string">'px'</span></span><br><span class="line">            barChart.resize()</span><br><span class="line">        &#125;,<span class="number">200</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> barChart = echarts.init(ele)</span><br><span class="line">            barChart.setOption(option)</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                ele.style.height = <span class="number">400</span> + <span class="string">'px'</span></span><br><span class="line">                barChart.resize()</span><br><span class="line">            &#125;,<span class="number">200</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="3-强制显示坐标轴label-不间隔隐藏"><a href="#3-强制显示坐标轴label-不间隔隐藏" class="headerlink" title="3.强制显示坐标轴label(不间隔隐藏)"></a>3.强制显示坐标轴label(不间隔隐藏)</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xAxis: &#123;</span><br><span class="line">    type: <span class="string">'category'</span>,</span><br><span class="line">    boundaryGap: <span class="literal">true</span>,</span><br><span class="line">    data: param.examName,</span><br><span class="line">    axisLabel: &#123;</span><br><span class="line">        interval:<span class="string">'0'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-折线图dataZoom设置"><a href="#4-折线图dataZoom设置" class="headerlink" title="4.折线图dataZoom设置"></a>4.折线图dataZoom设置</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> dataZoom = []</span><br><span class="line">    <span class="keyword">if</span> (param.date.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        dataZoom.push(&#123;</span><br><span class="line">        type: <span class="string">'slider'</span>,</span><br><span class="line">        start : <span class="number">85</span>,  <span class="comment">//伸缩条开始位置（1-100），可以随时更改</span></span><br><span class="line">        end : <span class="number">100</span>,  <span class="comment">//伸缩条结束位置（1-100），可以随时更改</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> option = &#123;</span><br><span class="line">	dataZoom:dataZoom,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-legend点击事件"><a href="#5-legend点击事件" class="headerlink" title="5.legend点击事件"></a>5.legend点击事件</h4><p><img src="../images/echarts/5.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">lineChart.on(<span class="string">'legendselectchanged'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">let</span> selected = obj.selected</span><br><span class="line">          <span class="keyword">let</span> legend = obj.name</span><br><span class="line">          <span class="keyword">if</span> (selected != <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (legend == <span class="string">'系数分'</span> &amp;&amp; selected[<span class="string">'系数分'</span>]) &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> selected) &#123;</span><br><span class="line">                <span class="keyword">if</span> (key == <span class="string">'系数分'</span>) <span class="keyword">continue</span></span><br><span class="line">                selected[key] = <span class="literal">false</span></span><br><span class="line">              &#125;</span><br><span class="line">              self.trendSeries = <span class="number">1</span></span><br><span class="line">              self.yAxis[<span class="number">0</span>].name = <span class="string">'分数'</span></span><br><span class="line">              self.yAxis[<span class="number">0</span>].axisLabel.formatter = <span class="string">'&#123;value&#125;'</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              selected[<span class="string">'系数分'</span>] = <span class="literal">false</span></span><br><span class="line">              self.trendSeries = <span class="number">0</span></span><br><span class="line">              self.yAxis[<span class="number">0</span>].name = <span class="string">'比例'</span></span><br><span class="line">              self.yAxis[<span class="number">0</span>].axisLabel.formatter = <span class="string">'&#123;value&#125;%'</span></span><br><span class="line">            &#125;</span><br><span class="line">            self.legend.selected = selected</span><br><span class="line">            self.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">              lineChart.clear()</span><br><span class="line">              lineChart.setOption(option)</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>

<h4 id="6-折线图"><a href="#6-折线图" class="headerlink" title="6.折线图"></a>6.折线图</h4><p><img src="../images/echarts/6.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">classIndextrendData (val) &#123;</span><br><span class="line">        <span class="keyword">let</span> param = &#123;</span><br><span class="line">          examName:[],</span><br><span class="line">          date:[],</span><br><span class="line">          averageScore:[],</span><br><span class="line">          excelRate:[],</span><br><span class="line">          passRate:[],</span><br><span class="line">          tiredRate:[],</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">          param.date.push(util.formatDate(item.createTime))</span><br><span class="line">          param.examName.push(<span class="string">'考试名称：'</span> + item.name)</span><br><span class="line">          param.averageScore.push(<span class="built_in">parseFloat</span>(item.bitRatio * <span class="number">100</span>).toFixed(<span class="number">2</span>))</span><br><span class="line">          param.excelRate.push(<span class="built_in">parseFloat</span>(item.excelRate))</span><br><span class="line">          param.passRate.push(<span class="built_in">parseFloat</span>(item.passRate))</span><br><span class="line">          param.tiredRate.push(<span class="built_in">parseFloat</span>(item.tiredRate))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> dataZoom = []</span><br><span class="line">        <span class="keyword">if</span> (param.date.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">          dataZoom.push(&#123;</span><br><span class="line">            type: <span class="string">'slider'</span>,</span><br><span class="line">            start : <span class="number">85</span>,  <span class="comment">//伸缩条开始位置（1-100），可以随时更改</span></span><br><span class="line">            end : <span class="number">100</span>,  <span class="comment">//伸缩条结束位置（1-100），可以随时更改</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> options = &#123;</span><br><span class="line">          tooltip : &#123;</span><br><span class="line">            trigger: <span class="string">'axis'</span>,</span><br><span class="line">            formatter:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">              <span class="comment">// console.log(resp)</span></span><br><span class="line">              <span class="keyword">let</span> res = <span class="string">`&lt;p&gt;<span class="subst">$&#123;resp[<span class="number">0</span>].data&#125;</span>&lt;/p&gt;`</span></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; resp.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> item = resp[i]</span><br><span class="line">                res += <span class="string">`&lt;p&gt;<span class="subst">$&#123;item.marker&#125;</span><span class="subst">$&#123;item.seriesName&#125;</span> : <span class="subst">$&#123;item.data&#125;</span>%&lt;/p&gt;`</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> res</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line">            data:[<span class="string">'平均分位比'</span>,<span class="string">'优秀率'</span>,<span class="string">'合格率'</span>,<span class="string">'学困率'</span>],</span><br><span class="line">            x: <span class="string">'right'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          toolbox: &#123;</span><br><span class="line">            show : <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          dataZoom:dataZoom,</span><br><span class="line">          calculable : <span class="literal">true</span>,</span><br><span class="line">          xAxis : [</span><br><span class="line">            &#123;</span><br><span class="line">              name: <span class="string">'考试时间'</span>,</span><br><span class="line">              type : <span class="string">'category'</span>,</span><br><span class="line">              boundaryGap : <span class="literal">false</span>,</span><br><span class="line">              axisLine: &#123;</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  type: <span class="string">'solid'</span>,</span><br><span class="line">                  color: <span class="string">'#aaa'</span>,</span><br><span class="line">                  width: <span class="string">'2'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              axisLabel: &#123;</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                  color: <span class="string">'#aaa'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data : param.date</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          yAxis : [</span><br><span class="line">            &#123;</span><br><span class="line">              name: <span class="string">'比例'</span>,</span><br><span class="line">              type : <span class="string">'value'</span>,</span><br><span class="line">              axisLine: &#123;</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  type: <span class="string">'solid'</span>,</span><br><span class="line">                  color: <span class="string">'#aaa'</span>,</span><br><span class="line">                  width: <span class="string">'2'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              axisLabel: &#123;</span><br><span class="line">                formatter: <span class="string">'&#123;value&#125; %'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          series : [</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'考试名称'</span>,</span><br><span class="line">              symbol:<span class="string">'none'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              data:param.examName</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'平均分位比'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbolSize: <span class="number">10</span>,</span><br><span class="line">              itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                  color:<span class="string">'#2393eb'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data:param.averageScore</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'优秀率'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbolSize: <span class="number">10</span>,</span><br><span class="line">              itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                  color:<span class="string">'#6dc171'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data:param.excelRate</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'合格率'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbolSize: <span class="number">10</span>,</span><br><span class="line">              itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                  color:<span class="string">'#f8bb46'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data:param.passRate</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'学困率'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbolSize: <span class="number">10</span>,</span><br><span class="line">              itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                  color:<span class="string">'#f88496'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data:param.tiredRate</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> lineChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'scoreLine'</span>))</span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          lineChart.setOption(options)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="7-倾斜x轴标签，防止拥挤"><a href="#7-倾斜x轴标签，防止拥挤" class="headerlink" title="7.倾斜x轴标签，防止拥挤"></a>7.倾斜x轴标签，防止拥挤</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xAxis : [</span><br><span class="line">	axisLabel: &#123;</span><br><span class="line">        interval:<span class="number">0</span>,</span><br><span class="line">        rotate: param.date.length &gt; <span class="number">8</span> ? <span class="number">20</span> : <span class="number">0</span>,</span><br><span class="line">        textStyle: &#123;</span><br><span class="line">            color: <span class="string">'#666'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="8-环形图"><a href="#8-环形图" class="headerlink" title="8.环形图"></a>8.环形图</h4><p><img src="../images/echarts/8.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> hardDegreeOptions = &#123;</span><br><span class="line">          data: [],</span><br><span class="line">          tip: <span class="string">'&#123;b&#125;：&#123;c&#125;题 &lt;/br&gt; 占比&#123;d&#125;%'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">this</span>.hardDegree) &#123;</span><br><span class="line">          hardDegreeOptions.data.push(&#123;</span><br><span class="line">            name: item.name,</span><br><span class="line">            value: item.num</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">myEchartPie(hardDegreeOptions, <span class="string">'questionDegreePie'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">myEchartPie</span>(<span class="params">option, el</span>) </span>&#123;</span><br><span class="line">  option.redius = option.redius || [<span class="string">'38%'</span>, <span class="string">'58%'</span>]</span><br><span class="line">  option.color = option.color || [<span class="string">'#2393eb'</span>, <span class="string">'#6dc171'</span>, <span class="string">'#b0bfc6'</span>, <span class="string">'#f8bb46'</span>, <span class="string">'#f6566f'</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> options = &#123;</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      show: <span class="literal">true</span>,</span><br><span class="line">      formatter: option.tip</span><br><span class="line">    &#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">      data:[<span class="string">'极优'</span>,<span class="string">'优秀'</span>, <span class="string">'良好'</span>, <span class="string">'合格'</span>, <span class="string">'学困'</span>, <span class="string">'学弱'</span>],</span><br><span class="line">      x: <span class="string">'right'</span>,</span><br><span class="line">      y: <span class="string">'bottom'</span>,</span><br><span class="line">      orient:<span class="string">'vertical'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">      type: <span class="string">'pie'</span>,</span><br><span class="line">      center:[<span class="string">'50%'</span>,<span class="string">'50%'</span>],</span><br><span class="line">      radius: option.redius,</span><br><span class="line">      hoverAnimation: <span class="literal">true</span>,</span><br><span class="line">      color: option.color,                   <span class="comment">// 圆环图的颜色</span></span><br><span class="line">      label: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">          show: <span class="literal">true</span>,</span><br><span class="line">          position: <span class="string">'outside'</span>,</span><br><span class="line">          formatter: <span class="string">'&#123;b&#125;'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      labelLine: &#123;                    <span class="comment">// 标签的视觉引导线样式,在 label 位置 设置为'outside'的时候会显示视觉引导线。</span></span><br><span class="line">        normal: &#123;</span><br><span class="line">          show: <span class="literal">true</span>,             <span class="comment">// 是否显示视觉引导线。</span></span><br><span class="line">          length: <span class="number">10</span>,             <span class="comment">// 在 label 位置 设置为'outside'的时候会显示视觉引导线。</span></span><br><span class="line">          length2: <span class="number">20</span>            <span class="comment">// 视觉引导项第二段的长度。</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      data: option.data                      <span class="comment">// 系列中的数据内容数组。</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  echarts.init(<span class="built_in">document</span>.getElementById(el)).setOption(options)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="9-折线图圆点加粗（borderWidth）"><a href="#9-折线图圆点加粗（borderWidth）" class="headerlink" title="9.折线图圆点加粗（borderWidth）"></a>9.折线图圆点加粗（borderWidth）</h4><p><img src="../images/echarts/9.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">series：[</span><br><span class="line">	&#123;</span><br><span class="line">        name:<span class="string">'平均分位比'</span>,</span><br><span class="line">        type:<span class="string">'line'</span>,</span><br><span class="line">        symbolSize: <span class="number">10</span>,</span><br><span class="line">        itemStyle:&#123;</span><br><span class="line">            normal:&#123;</span><br><span class="line">                color:<span class="string">'#2393eb'</span>,</span><br><span class="line">                borderWidth:<span class="number">3</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        	data:param.bitRatio</span><br><span class="line">        &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="10-grid设置"><a href="#10-grid设置" class="headerlink" title="10.grid设置"></a>10.grid设置</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">grid: &#123;</span><br><span class="line">    left: <span class="number">0</span>,</span><br><span class="line">    right:<span class="number">60</span>,</span><br><span class="line">    top: <span class="number">20</span>,</span><br><span class="line">    bottom: <span class="number">10</span>,</span><br><span class="line">    containLabel: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="11-柱状图-series重叠显示"><a href="#11-柱状图-series重叠显示" class="headerlink" title="11.柱状图-series重叠显示"></a>11.柱状图-series重叠显示</h4><p><img src="../images/echarts/11.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">series：[</span><br><span class="line">	&#123;</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line">                color: <span class="string">'#D8D8D8'</span>,</span><br><span class="line">                barBorderRadius: <span class="number">10</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        silent: <span class="literal">true</span>,</span><br><span class="line">        barWidth: <span class="number">12</span>,</span><br><span class="line">        barGap: <span class="string">'-100%'</span>, <span class="comment">// Make series be overlap</span></span><br><span class="line">        data: maxData</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="12-动态颜色、label-position"><a href="#12-动态颜色、label-position" class="headerlink" title="12.动态颜色、label position"></a>12.动态颜色、label position</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">series：[</span><br><span class="line">	&#123;</span><br><span class="line">            name: <span class="string">'班级占比'</span>,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">if</span> (item.name == self.standAnswer) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">'#2393EB'</span></span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">'#F48A33'</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                barBorderRadius: <span class="number">10</span>,</span><br><span class="line">                label:&#123;</span><br><span class="line">                  show:<span class="literal">true</span>,</span><br><span class="line">                  position:<span class="string">'right'</span>,</span><br><span class="line">                  formatter:<span class="string">'&#123;c&#125;%'</span></span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            barWidth: <span class="number">12</span>,</span><br><span class="line">            data: mySeriesData,</span><br><span class="line">            type: <span class="string">'bar'</span></span><br><span class="line">          &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="13-横向柱状图-图标自定义（小旗子）"><a href="#13-横向柱状图-图标自定义（小旗子）" class="headerlink" title="13.横向柱状图-图标自定义（小旗子）"></a>13.横向柱状图-图标自定义（小旗子）</h4><p><img src="../images/echarts/13.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">studentHardData (val) &#123;</span><br><span class="line">        <span class="keyword">let</span> yAxisData = []</span><br><span class="line">        <span class="keyword">let</span> mySeriesData = []</span><br><span class="line">        <span class="keyword">let</span> classSeriesData = []</span><br><span class="line">        <span class="keyword">let</span> gradeSeriesData = []</span><br><span class="line">        <span class="keyword">let</span> maxData = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">this</span>.studentHardData) &#123;</span><br><span class="line">          yAxisData.push(item.name)</span><br><span class="line">          mySeriesData.push(item.score)</span><br><span class="line">          classSeriesData.push(item.classAverageScore)</span><br><span class="line">          gradeSeriesData.push(item.gradeAverageScore)</span><br><span class="line">          maxData.push(<span class="number">100</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> studentHardOption = &#123;</span><br><span class="line">          tooltip: &#123;</span><br><span class="line">            trigger: <span class="string">'axis'</span>,</span><br><span class="line">            <span class="comment">// axisPointer: &#123;</span></span><br><span class="line">            <span class="comment">//   axis: "x",</span></span><br><span class="line">            <span class="comment">// &#125;,</span></span><br><span class="line">            formatter: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">let</span> res = <span class="string">''</span></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; resp.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> item = resp[i]</span><br><span class="line">                res += <span class="string">`&lt;p&gt;<span class="subst">$&#123;item.marker&#125;</span><span class="subst">$&#123;item.seriesName&#125;</span> : <span class="subst">$&#123;item.data&#125;</span>%&lt;/p&gt;`</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> res</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line">            selectedMode:<span class="literal">false</span>, <span class="comment">//阻止点击</span></span><br><span class="line">            orient: <span class="string">'horizontal'</span>,</span><br><span class="line">            x: <span class="string">'center'</span>,</span><br><span class="line">            y: <span class="string">'bottom'</span>,</span><br><span class="line">            data: [&#123;</span><br><span class="line">              name: <span class="string">'我的得分率'</span>,</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                fontSize: <span class="number">12</span>,</span><br><span class="line">                color: <span class="string">'#999'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: <span class="string">'班级得分率'</span>,</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                  fontSize: <span class="number">12</span>,</span><br><span class="line">                  color: <span class="string">'#999'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                icon: <span class="string">'image://data:img/jpg;base64,iVBORw0KGgoAAAANSUhEUgAAACEAAAAkCAYAAAAHKVPcAAAAAXNSR0IArs4c6QAAA/1JREFUWAnt\n'</span> +</span><br><span class="line">                <span class="string">'V29sFEUU/729u72rPdp6pmAilmADGowmYkwbIKAUijQB5M8XojFGI5pgYjSRKJBoonwgajR8UVGJ\n'</span> +</span><br><span class="line">                <span class="string">'Gj+Ajf8ogZM2QCKCSg0aEg0aJKfB1Bbp3XHXdre3+3yz517L9qQ3JSF86Gx2Z97MvPd+896bebNk\n'</span> +</span><br><span class="line">                <span class="string">'dS7bBcJ8M2TOp/s6zuO/wsxUONy20HXdVmYsBLiBCFNlOASmQSb0gfkMwThOoC/NpQdO+ry6NVld\n'</span> +</span><br><span class="line">                <span class="string">'ra4oITKMNdGW5OfcvSEynE5tEBBPMzCrYoFEXQZos7kkeaJiHpnI3SuuCysAHpMsR9V2OtUtAO70\n'</span> +</span><br><span class="line">                <span class="string">'+nQ+zEuYuEUsu5vCxo7IvU3fE73klhPBR1dOsYeGWgB6zM5YP4bHTuKGsX2V9RQXxOu54Ky3u45n\n'</span> +</span><br><span class="line">                <span class="string">'rc7Wn2WNGXHjkFg1CkZcudUetKYLbUgbxPRTGRCVKRxvFoNrZE6zUiTgLinScwmtDcIVAw87I0LM\n'</span> +</span><br><span class="line">                <span class="string">'sPhRHPn8Rxex4p4oZk4LlRQk4gZiZtHbpc4yDW0QyZMWtrXnSqLe3ViLOTeH8XfaRccJC6dSw8gM\n'</span> +</span><br><span class="line">                <span class="string">'MBJxwqbVcSyYY5bm/l9D/KJX2u6OYt/W6z2mw68k0NPvYOfBAY9+oDmGHY/Xoq7awN4tiYoAKEZt\n'</span> +</span><br><span class="line">                <span class="string">'EIpJmV8VQxr9ecaFiyPuKY7ofbVBDFiMMz2Op+X0uWGk8y5qq/WUBmdrg1AAtn9ajImXP8njd6Hr\n'</span> +</span><br><span class="line">                <span class="string">'a0JesB77xcbDb6bRn3Ox4IV/kOotgg0qDdLaIO6YEcZOCUZVPn6mDhdyjKbZEfx53sGDi6rw1pM1\n'</span> +</span><br><span class="line">                <span class="string">'EhOE5IsJNNSP7JSg4tG0NojRzKr9xqNTkJejSAXjtDoD1TE5vCVW4rHi1g3OL0drb9HRQt7+Ko+7\n'</span> +</span><br><span class="line">                <span class="string">'ZkZw+pyDW2+auChtS3wjft/4TlbiQFYsT1/Wxe6jg3hiWZWAKeC3vwooyGF2KlVAT7qymNCGP/2G\n'</span> +</span><br><span class="line">                <span class="string">'EJ5dVY25t0S84/ghCcQt6+JovDGM5z7Iojfjem557YucnKAxrJs3flxog5gxNQT1qqLOi11P1ZaO\n'</span> +</span><br><span class="line">                <span class="string">'5lcfUelCv2i7I6iiktwQ5AnSVwwiKHAi9LjukOCzJf66JSX/IdbvlbbjulQlrqiXoGgU+nZJ1ZGJ\n'</span> +</span><br><span class="line">                <span class="string">'KPd5yoIQBQW5R+5lw3jPrIofoXntgz5DsOZvl9fYOWe5RMgmuZHNDY5fjlZ6ZJFnx4CQVLQnGolu\n'</span> +</span><br><span class="line">                <span class="string">'p0UdZy8nwB+j5gNZae9Rr3Xo/jVweJtcWm7zx8vVoniADXrfhPE6texP0VBnq5cCKWSsjS5OflaO\n'</span> +</span><br><span class="line">                <span class="string">'SbfPPtTW5LpOs2yfRmJW6U2uPpxmNvpE+Q9RN36MlrZnfLljLOEPXEltLt7/nfCrt6JyTeyOSRC+\n'</span> +</span><br><span class="line">                <span class="string">'ryYtMWkJ3wJ+PRkT15YlJJMVf5+Cv8o+zKtQS0zQh3JF/9U0Il9fBX1lVfwLjHJP6c7uu4YAAAAA\n'</span> +</span><br><span class="line">                <span class="string">'SUVORK5CYII='</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: <span class="string">'年级得分率'</span>,</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                  fontSize: <span class="number">12</span>,</span><br><span class="line">                  color: <span class="string">'#999'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                icon: <span class="string">'image://data:img/jpg;base64,iVBORw0KGgoAAAANSUhEUgAAACEAAAAkCAYAAAAHKVPcAAAAAXNSR0IArs4c6QAAA41JREFUWAnt\n'</span> +</span><br><span class="line">                <span class="string">'WE1ME1EQntltLaVSQAUBCT/iD4HowWBAqnDAmJB4MHgy8aImegIEDQdPjYkHEgoCXkjUhJMajUYv\n'</span> +</span><br><span class="line">                <span class="string">'XjxAISpSf0hERUGUIAZK1VaBguw+Zxd3A+0WuxUJJrx0d96bN2++b2fe250UK5xnrjJgtjXRaHPk\n'</span> +</span><br><span class="line">                <span class="string">'Ocbhd2OMYUVHdRENDyAgSZZGqkRAxiPAFAC6STcADB8xI9xtLqx/rqzVK7HcWSUCA0QOypr2Ndxp\n'</span> +</span><br><span class="line">                <span class="string">'cbUYeyf6ThJAJQPYGrZDhAccz51rtDm6w15DhnaXPdogEZAWccjJsnfyjYvAd+pxJNsy2C8KYkm5\n'</span> +</span><br><span class="line">                <span class="string">'s/o6cNC03mZ9Yke7qOWnprMmZkYUSujpT3imvr8wBBkxSAvShauQH4gdAQGOfOnw+iraq18xBC8C\n'</span> +</span><br><span class="line">                <span class="string">'81P6TORmrZRWvzibSunmJLfIoCeYRLiAf7BjDKwEWECRln7U5u5zy+b3KQtzSv338RdueHmpR/9C\n'</span> +</span><br><span class="line">                <span class="string">'jRURR2KkbRh++mbg/a1+DbcUZgNC5qEszblAZUSRkAhMuacgYfdGMFoM8uV+NgbC9Kw6NlqMgVgh\n'</span> +</span><br><span class="line">                <span class="string">'x7oj8bXXA0P3P0DOqR1g3RyrOh7tHoXE/CSI3RKn6sLt6CZhJZDs47ng9/hh4OY7FUdKTf+1PuDW\n'</span> +</span><br><span class="line">                <span class="string">'8LIuaU8yJBdtUucX6+gmwZt4iNseDyPtw2AwGyD9YKbsv6/1NaQUp4IllU4hNVN8lCzDuekmMd+p\n'</span> +</span><br><span class="line">                <span class="string">'gd51SkqQXubRKRZ1PN/uT33dJPzjfvj6ygO+Aa+cks/OTzKGOC2Ap8cNkyMTKmZ8zjqI2mBWx6E6\n'</span> +</span><br><span class="line">                <span class="string">'ukn8/DED3oFvdAYBzInmuT55F2dFmCACM7Q3lLY2PebfkIjJsEL2sVwFR5Wu812QVpoR0emI6D2h\n'</span> +</span><br><span class="line">                <span class="string">'Ii9RR3c6QuFuO5oN0UmWUNOL6peMhHJKFkULMfl/pAMRpe3uouMwRDXAGCITaEznDhOAsSyqF3Lp\n'</span> +</span><br><span class="line">                <span class="string">'Kx3+h0IjGprpoJpylurOezzPXUZObGsobKCaUruVP7ZbuWlfqYishsjs0rbS1ko4VPAMBpFgHN4w\n'</span> +</span><br><span class="line">                <span class="string">'iVxtXXHdoPbShdrmAruPNDek63TnmTJBYBeogMleaBUwQpgkAleMPDoctvqPWN5eJZc59NSHL+51\n'</span> +</span><br><span class="line">                <span class="string">'3A4wj2hY2XE2nyJJVRXLouhYCEB62G8cMDfy3FNTlOFhbV6tV3EeFAll4m9k4766LlovXWG1FXE6\n'</span> +</span><br><span class="line">                <span class="string">'VkkouVqNxGoklAgocnVPrLBI0GdMYiQyUZYKu+WUtCewlf6neWs0cx3LCTwf6xehLhzc6g4K0AAA\n'</span> +</span><br><span class="line">                <span class="string">'AABJRU5ErkJggg=='</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          grid: &#123;</span><br><span class="line">            left: <span class="number">20</span>,</span><br><span class="line">            top: <span class="number">10</span>,</span><br><span class="line">            bottom: <span class="number">50</span>,</span><br><span class="line">            containLabel: <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis: &#123;</span><br><span class="line">            type: <span class="string">'value'</span>,</span><br><span class="line">            axisLine: &#123;</span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                color: <span class="string">'#E7EFFB'</span>, <span class="comment">//左边线的颜色</span></span><br><span class="line">                width: <span class="string">'1'</span> <span class="comment">//坐标线的宽度</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            axisLabel: &#123;</span><br><span class="line">              formatter: <span class="string">'&#123;value&#125; %'</span>,</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                color: <span class="string">'#999'</span>, <span class="comment">//坐标值得具体的颜色</span></span><br><span class="line">                fontSize: <span class="number">10</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          yAxis: &#123;</span><br><span class="line">            type: <span class="string">'category'</span>,</span><br><span class="line">            data: [<span class="string">'非常难'</span>, <span class="string">'很难'</span>, <span class="string">'中等'</span>, <span class="string">'简单'</span>],</span><br><span class="line">            axisLine: &#123;</span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                color: <span class="string">'#fff'</span>,</span><br><span class="line">                width: <span class="number">1</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            splitLine: &#123;</span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                color: [<span class="string">'#E7EFFB'</span>],</span><br><span class="line">                width: <span class="number">1</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            axisLabel: &#123;</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                color: <span class="string">'#999'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line">            type: <span class="string">'bar'</span>,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="string">'#D8D8D8'</span>,</span><br><span class="line">                barBorderRadius: <span class="number">10</span>,</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            silent: <span class="literal">true</span>,</span><br><span class="line">            barWidth: <span class="number">16</span>,</span><br><span class="line">            barGap: <span class="string">'-100%'</span>, <span class="comment">// Make series be overlap</span></span><br><span class="line">            data: maxData</span><br><span class="line">          &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">            name: <span class="string">'我的得分率'</span>,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="string">'#2393EB'</span>,</span><br><span class="line">                barBorderRadius: <span class="number">10</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            barWidth: <span class="number">16</span>,</span><br><span class="line">            data: mySeriesData,</span><br><span class="line">            type: <span class="string">'bar'</span></span><br><span class="line">          &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name: <span class="string">'班级得分率'</span>,</span><br><span class="line">              symbol: <span class="string">'image://data:img/jpg;base64,iVBORw0KGgoAAAANSUhEUgAAACEAAAAkCAYAAAAHKVPcAAAAAXNSR0IArs4c6QAAA/1JREFUWAnt\n'</span> +</span><br><span class="line">              <span class="string">'V29sFEUU/729u72rPdp6pmAilmADGowmYkwbIKAUijQB5M8XojFGI5pgYjSRKJBoonwgajR8UVGJ\n'</span> +</span><br><span class="line">              <span class="string">'Gj+Ajf8ogZM2QCKCSg0aEg0aJKfB1Bbp3XHXdre3+3yz517L9qQ3JSF86Gx2Z97MvPd+896bebNk\n'</span> +</span><br><span class="line">              <span class="string">'dS7bBcJ8M2TOp/s6zuO/wsxUONy20HXdVmYsBLiBCFNlOASmQSb0gfkMwThOoC/NpQdO+ry6NVld\n'</span> +</span><br><span class="line">              <span class="string">'ra4oITKMNdGW5OfcvSEynE5tEBBPMzCrYoFEXQZos7kkeaJiHpnI3SuuCysAHpMsR9V2OtUtAO70\n'</span> +</span><br><span class="line">              <span class="string">'+nQ+zEuYuEUsu5vCxo7IvU3fE73klhPBR1dOsYeGWgB6zM5YP4bHTuKGsX2V9RQXxOu54Ky3u45n\n'</span> +</span><br><span class="line">              <span class="string">'rc7Wn2WNGXHjkFg1CkZcudUetKYLbUgbxPRTGRCVKRxvFoNrZE6zUiTgLinScwmtDcIVAw87I0LM\n'</span> +</span><br><span class="line">              <span class="string">'sPhRHPn8Rxex4p4oZk4LlRQk4gZiZtHbpc4yDW0QyZMWtrXnSqLe3ViLOTeH8XfaRccJC6dSw8gM\n'</span> +</span><br><span class="line">              <span class="string">'MBJxwqbVcSyYY5bm/l9D/KJX2u6OYt/W6z2mw68k0NPvYOfBAY9+oDmGHY/Xoq7awN4tiYoAKEZt\n'</span> +</span><br><span class="line">              <span class="string">'EIpJmV8VQxr9ecaFiyPuKY7ofbVBDFiMMz2Op+X0uWGk8y5qq/WUBmdrg1AAtn9ajImXP8njd6Hr\n'</span> +</span><br><span class="line">              <span class="string">'a0JesB77xcbDb6bRn3Ox4IV/kOotgg0qDdLaIO6YEcZOCUZVPn6mDhdyjKbZEfx53sGDi6rw1pM1\n'</span> +</span><br><span class="line">              <span class="string">'EhOE5IsJNNSP7JSg4tG0NojRzKr9xqNTkJejSAXjtDoD1TE5vCVW4rHi1g3OL0drb9HRQt7+Ko+7\n'</span> +</span><br><span class="line">              <span class="string">'ZkZw+pyDW2+auChtS3wjft/4TlbiQFYsT1/Wxe6jg3hiWZWAKeC3vwooyGF2KlVAT7qymNCGP/2G\n'</span> +</span><br><span class="line">              <span class="string">'EJ5dVY25t0S84/ghCcQt6+JovDGM5z7Iojfjem557YucnKAxrJs3flxog5gxNQT1qqLOi11P1ZaO\n'</span> +</span><br><span class="line">              <span class="string">'5lcfUelCv2i7I6iiktwQ5AnSVwwiKHAi9LjukOCzJf66JSX/IdbvlbbjulQlrqiXoGgU+nZJ1ZGJ\n'</span> +</span><br><span class="line">              <span class="string">'KPd5yoIQBQW5R+5lw3jPrIofoXntgz5DsOZvl9fYOWe5RMgmuZHNDY5fjlZ6ZJFnx4CQVLQnGolu\n'</span> +</span><br><span class="line">              <span class="string">'p0UdZy8nwB+j5gNZae9Rr3Xo/jVweJtcWm7zx8vVoniADXrfhPE6texP0VBnq5cCKWSsjS5OflaO\n'</span> +</span><br><span class="line">              <span class="string">'SbfPPtTW5LpOs2yfRmJW6U2uPpxmNvpE+Q9RN36MlrZnfLljLOEPXEltLt7/nfCrt6JyTeyOSRC+\n'</span> +</span><br><span class="line">              <span class="string">'ryYtMWkJ3wJ+PRkT15YlJJMVf5+Cv8o+zKtQS0zQh3JF/9U0Il9fBX1lVfwLjHJP6c7uu4YAAAAA\n'</span> +</span><br><span class="line">              <span class="string">'SUVORK5CYII='</span>,</span><br><span class="line">              symbolSize: [<span class="number">30</span>, <span class="number">30</span>],</span><br><span class="line">              symbolOffset: [<span class="string">'50%'</span>, <span class="string">'-50%'</span>],</span><br><span class="line">              itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                  color: <span class="string">'#6DC171'</span>,</span><br><span class="line">                  lineStyle: &#123;</span><br><span class="line">                    color: <span class="string">'rgba(255,255,255,0)'</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">              barWidth: <span class="number">16</span>,</span><br><span class="line">              data: classSeriesData,</span><br><span class="line">              type: <span class="string">'line'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">            name: <span class="string">'年级得分率'</span>,</span><br><span class="line">            symbol: <span class="string">'image://data:img/jpg;base64,iVBORw0KGgoAAAANSUhEUgAAACEAAAAkCAYAAAAHKVPcAAAAAXNSR0IArs4c6QAAA41JREFUWAnt\n'</span> +</span><br><span class="line">            <span class="string">'WE1ME1EQntltLaVSQAUBCT/iD4HowWBAqnDAmJB4MHgy8aImegIEDQdPjYkHEgoCXkjUhJMajUYv\n'</span> +</span><br><span class="line">            <span class="string">'XjxAISpSf0hERUGUIAZK1VaBguw+Zxd3A+0WuxUJJrx0d96bN2++b2fe250UK5xnrjJgtjXRaHPk\n'</span> +</span><br><span class="line">            <span class="string">'Ocbhd2OMYUVHdRENDyAgSZZGqkRAxiPAFAC6STcADB8xI9xtLqx/rqzVK7HcWSUCA0QOypr2Ndxp\n'</span> +</span><br><span class="line">            <span class="string">'cbUYeyf6ThJAJQPYGrZDhAccz51rtDm6w15DhnaXPdogEZAWccjJsnfyjYvAd+pxJNsy2C8KYkm5\n'</span> +</span><br><span class="line">            <span class="string">'s/o6cNC03mZ9Yke7qOWnprMmZkYUSujpT3imvr8wBBkxSAvShauQH4gdAQGOfOnw+iraq18xBC8C\n'</span> +</span><br><span class="line">            <span class="string">'81P6TORmrZRWvzibSunmJLfIoCeYRLiAf7BjDKwEWECRln7U5u5zy+b3KQtzSv338RdueHmpR/9C\n'</span> +</span><br><span class="line">            <span class="string">'jRURR2KkbRh++mbg/a1+DbcUZgNC5qEszblAZUSRkAhMuacgYfdGMFoM8uV+NgbC9Kw6NlqMgVgh\n'</span> +</span><br><span class="line">            <span class="string">'x7oj8bXXA0P3P0DOqR1g3RyrOh7tHoXE/CSI3RKn6sLt6CZhJZDs47ng9/hh4OY7FUdKTf+1PuDW\n'</span> +</span><br><span class="line">            <span class="string">'8LIuaU8yJBdtUucX6+gmwZt4iNseDyPtw2AwGyD9YKbsv6/1NaQUp4IllU4hNVN8lCzDuekmMd+p\n'</span> +</span><br><span class="line">            <span class="string">'gd51SkqQXubRKRZ1PN/uT33dJPzjfvj6ygO+Aa+cks/OTzKGOC2Ap8cNkyMTKmZ8zjqI2mBWx6E6\n'</span> +</span><br><span class="line">            <span class="string">'ukn8/DED3oFvdAYBzInmuT55F2dFmCACM7Q3lLY2PebfkIjJsEL2sVwFR5Wu812QVpoR0emI6D2h\n'</span> +</span><br><span class="line">            <span class="string">'Ii9RR3c6QuFuO5oN0UmWUNOL6peMhHJKFkULMfl/pAMRpe3uouMwRDXAGCITaEznDhOAsSyqF3Lp\n'</span> +</span><br><span class="line">            <span class="string">'Kx3+h0IjGprpoJpylurOezzPXUZObGsobKCaUruVP7ZbuWlfqYishsjs0rbS1ko4VPAMBpFgHN4w\n'</span> +</span><br><span class="line">            <span class="string">'iVxtXXHdoPbShdrmAruPNDek63TnmTJBYBeogMleaBUwQpgkAleMPDoctvqPWN5eJZc59NSHL+51\n'</span> +</span><br><span class="line">            <span class="string">'3A4wj2hY2XE2nyJJVRXLouhYCEB62G8cMDfy3FNTlOFhbV6tV3EeFAll4m9k4766LlovXWG1FXE6\n'</span> +</span><br><span class="line">            <span class="string">'VkkouVqNxGoklAgocnVPrLBI0GdMYiQyUZYKu+WUtCewlf6neWs0cx3LCTwf6xehLhzc6g4K0AAA\n'</span> +</span><br><span class="line">            <span class="string">'AABJRU5ErkJggg=='</span>,</span><br><span class="line">            symbolSize: [<span class="number">30</span>, <span class="number">30</span>],</span><br><span class="line">            symbolOffset: [<span class="string">'50%'</span>, <span class="string">'-50%'</span>],</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="string">'#f8bb46'</span>,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  color: <span class="string">'rgba(255,255,255,0)'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            barWidth: <span class="number">16</span>,</span><br><span class="line">            data: gradeSeriesData,</span><br><span class="line">            type: <span class="string">'line'</span></span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> barChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'compareBar'</span>))</span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">          barChart.setOption(studentHardOption)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="14-水球效果"><a href="#14-水球效果" class="headerlink" title="14.水球效果"></a>14.水球效果</h4><p><img src="../images/echarts/14.png" alt=""></p>
<p>html:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"semicircle"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"semicircle-top"</span> <span class="attr">id</span>=<span class="string">"liquidFillScore"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"num yellow"</span>&gt;</span>&#123;&#123;studentBaseData.score&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"semicircle-body"</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-itme-text"</span>&gt;</span>我的总分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>css:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.semicircle</span>&#123;</span><br><span class="line">      .num&#123;</span><br><span class="line">        <span class="selector-tag">font-size</span>: 30<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">margin-top</span>: <span class="selector-tag">-90px</span>;</span><br><span class="line">        <span class="selector-tag">margin-bottom</span>: 30<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">height</span>: 30<span class="selector-tag">px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.semicircle-top</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">      .semicircle&#123;</span><br><span class="line">        <span class="selector-tag">width</span>: 120<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">height</span>: 120<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">border-radius</span>: 50%;</span><br><span class="line">        &amp;<span class="selector-class">.yellow</span>&#123;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">8px</span> solid $yellow;</span><br><span class="line">        &#125;</span><br><span class="line">        &amp;<span class="selector-class">.red</span>&#123;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">8px</span> solid $pink;</span><br><span class="line">        &#125;</span><br><span class="line">        &amp;<span class="selector-class">.blue</span>&#123;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">8px</span> solid $middle-blue;</span><br><span class="line">        &#125;</span><br><span class="line">        &amp;<span class="selector-class">.green</span>&#123;</span><br><span class="line">          <span class="attribute">border</span>: <span class="number">8px</span> solid $green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.semicircle-body</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">      .card-itme-text&#123;</span><br><span class="line">        <span class="comment">/*padding: 5px 20px;*/</span></span><br><span class="line">        <span class="selector-tag">box-shadow</span>: 0 2<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.12</span>), 0 0 6<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.04</span>);</span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-id">#FFFFFF</span>;</span><br><span class="line">        <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">font-weight</span>: 600;</span><br><span class="line">        <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">        <span class="selector-tag">color</span>: <span class="selector-id">#666666</span>;</span><br><span class="line">        <span class="selector-tag">line-height</span>: 25<span class="selector-tag">px</span>;</span><br><span class="line">        <span class="selector-tag">border-radius</span>: 15<span class="selector-tag">px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#liquidFillScore</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>js：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; echartLiquidFill &#125; <span class="keyword">from</span> <span class="string">'@/utils/echart-liquidfill'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> score = <span class="built_in">parseFloat</span>((val.score / <span class="number">100</span>).toPrecision(<span class="number">12</span>))</span><br><span class="line">    <span class="keyword">let</span> scoreParam = &#123;</span><br><span class="line">          data:[&#123;</span><br><span class="line">            name:val.score,</span><br><span class="line">            value: score</span><br><span class="line">          &#125;],</span><br><span class="line">          color:[<span class="string">'#F8BB46'</span>],</span><br><span class="line">          borderColor:<span class="string">'#F8BB46'</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        echartLiquidFill(scoreParam, <span class="string">'liquidFillScore'</span>)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>
<p>echarts-liquidFill.js：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">"echarts/lib/echarts"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'echarts-liquidfill'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">echartLiquidFill</span>(<span class="params">param, id</span>) </span>&#123;</span><br><span class="line">  param.color = param.color || [<span class="string">'#F8BB46'</span>,<span class="string">'#B0BFC6'</span>,<span class="string">'#6DC171'</span>,<span class="string">'#2393EB'</span>,<span class="string">'#F6566F'</span>]</span><br><span class="line">  param.borderColor = param.borderColor || <span class="string">'#F8BB46'</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> option = &#123;</span><br><span class="line">    series: [&#123;</span><br><span class="line">      type: <span class="string">'liquidFill'</span>,</span><br><span class="line">      radius:<span class="string">'90%'</span>,</span><br><span class="line">      color:param.color,<span class="comment">//内部水的颜色</span></span><br><span class="line">      data: param.data,</span><br><span class="line">      itemStyle: &#123;</span><br><span class="line">        shadowBlur: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      outline: &#123;<span class="comment">//外圈样式</span></span><br><span class="line">        borderDistance: <span class="number">-2</span>,</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          borderWidth: <span class="number">5</span>,</span><br><span class="line">          borderColor: param.borderColor,</span><br><span class="line">          shadowColor: <span class="string">'#fff'</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      label: &#123;<span class="comment">//中间文字样式</span></span><br><span class="line">        normal: &#123;</span><br><span class="line">          formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">          color: <span class="string">'#6B6965'</span>,<span class="comment">//未被淹没的文字颜色</span></span><br><span class="line">          insideColor: <span class="string">'#fff'</span>,<span class="comment">//被淹没的文字颜色</span></span><br><span class="line">          fontSize: <span class="number">28</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      backgroundStyle: &#123;<span class="comment">//背景图样式</span></span><br><span class="line">        color:<span class="string">'#fff'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">  echarts.init(<span class="built_in">document</span>.getElementById(id)).setOption(option)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="16-雷达图-带底色"><a href="#16-雷达图-带底色" class="headerlink" title="16.雷达图-带底色"></a>16.雷达图-带底色</h4><p><img src="../images/echarts/16.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">classQuestionStat (val) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">          item.weight = <span class="built_in">parseFloat</span>(item.weight)</span><br><span class="line">          item.averageScore = <span class="built_in">parseFloat</span>(item.averageScore)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> param = &#123;&#125;</span><br><span class="line">        <span class="keyword">let</span> className = <span class="keyword">this</span>.className</span><br><span class="line">        <span class="keyword">let</span> indicator = []</span><br><span class="line">        <span class="keyword">let</span> classSeriesValue = []</span><br><span class="line">        <span class="keyword">let</span> gradeSeriesValue = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">this</span>.classQuestionStat) &#123;</span><br><span class="line">          indicator.push(&#123;</span><br><span class="line">            name:item.name,</span><br><span class="line">            max:<span class="number">100</span></span><br><span class="line">          &#125;)</span><br><span class="line">          classSeriesValue.push(<span class="built_in">parseFloat</span>(item.averageScore))</span><br><span class="line">          gradeSeriesValue.push(<span class="built_in">parseFloat</span>(item.gradeAverageScore))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        param.className = className</span><br><span class="line">        param.indicator = indicator</span><br><span class="line">        param.classSeriesValue = classSeriesValue</span><br><span class="line">        param.gradeSeriesValue = gradeSeriesValue</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> options = &#123;</span><br><span class="line">          tooltip: &#123;</span><br><span class="line">            formatter:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">let</span> res = <span class="string">''</span></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.name == <span class="string">'年级'</span>) &#123;</span><br><span class="line">                  res +=<span class="string">'&lt;p&gt;'</span>+item.name+<span class="string">' : '</span>+item.gradeAverageScore+<span class="string">'&lt;/p&gt;'</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  res +=<span class="string">'&lt;p&gt;'</span>+item.name+<span class="string">' : '</span>+item.averageScore+<span class="string">'%&lt;/p&gt;'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> res</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line">            data:[param.className,<span class="string">'年级'</span>],</span><br><span class="line">            x: <span class="string">'right'</span>,</span><br><span class="line">            y: <span class="string">'bottom'</span>,</span><br><span class="line">            orient:<span class="string">'vertical'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          radar: &#123;</span><br><span class="line">            name: &#123;</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                color: <span class="string">'#94a5bc'</span>,</span><br><span class="line">                fontSize: <span class="number">12</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            splitNumber: <span class="number">3</span>,</span><br><span class="line">            indicator: param.indicator,</span><br><span class="line">            axisLine: &#123;               <span class="comment">// (圆内的几条直线)坐标轴轴线相关设置</span></span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                color: <span class="string">'#eff3f9'</span>,     <span class="comment">// 坐标轴线线的颜色。</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            splitLine: &#123;             	<span class="comment">// (这里是指所有圆环)坐标轴在 grid 区域中的分隔线。</span></span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                color: <span class="string">'#eff3f9'</span>, 		<span class="comment">// 分隔线颜色</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            splitArea: &#123;              <span class="comment">// 坐标轴在 grid 区域中的分隔区域，默认不显示。</span></span><br><span class="line">              show: <span class="literal">true</span>,</span><br><span class="line">              areaStyle: &#123;</span><br><span class="line">                color: [<span class="string">"#b9f3f4"</span>, <span class="string">"#daf8f8"</span>, <span class="string">"#f2fcfd"</span>]  <span class="comment">// 图表背景网格的颜色</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line">            type: <span class="string">'radar'</span>,</span><br><span class="line">            symbol: <span class="string">'circle'</span>,</span><br><span class="line">            symbolSize: <span class="number">8</span>,</span><br><span class="line">            data : [</span><br><span class="line">              &#123;</span><br><span class="line">                value : param.gradeSeriesValue,</span><br><span class="line">                name : <span class="string">'年级'</span>,</span><br><span class="line">                itemStyle:&#123;</span><br><span class="line">                  normal:&#123;</span><br><span class="line">                    color:<span class="string">'#f8bb46'</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,&#123;</span><br><span class="line">                value : param.classSeriesValue,</span><br><span class="line">                name : param.className,</span><br><span class="line">                itemStyle:&#123;</span><br><span class="line">                  normal:&#123;</span><br><span class="line">                    color:<span class="string">'#2393eb'</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> radarChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'questionRadar'</span>))</span><br><span class="line">          radarChart.setOption(options)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="17-markLine"><a href="#17-markLine" class="headerlink" title="17.markLine"></a>17.markLine</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">series: [&#123;</span><br><span class="line">            name: <span class="string">'得分率'</span>,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="string">'#447ED9'</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            barMaxWidth: <span class="number">20</span>,</span><br><span class="line">            data: param.score,</span><br><span class="line">            type: <span class="string">'bar'</span>,</span><br><span class="line">            markLine: &#123;</span><br><span class="line">              data: [&#123;</span><br><span class="line">                xAxis: gradeData</span><br><span class="line">              &#125;],</span><br><span class="line">              lineStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                  type:<span class="string">'solid'</span>,</span><br><span class="line">                  color:<span class="string">'#f9c157'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;]</span><br></pre></td></tr></table></figure>

<h4 id="18-柱状图-折线图混合"><a href="#18-柱状图-折线图混合" class="headerlink" title="18.柱状图-折线图混合"></a>18.柱状图-折线图混合</h4><p><img src="../images/echarts/18.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">stuWeakKnowPoint (val) &#123;</span><br><span class="line">        <span class="keyword">let</span> param = &#123;</span><br><span class="line">          examName:[],</span><br><span class="line">          teacherName:[],</span><br><span class="line">          date:[],</span><br><span class="line">          selfScoreRate:[],</span><br><span class="line">          classScoreRate:[],</span><br><span class="line">          gradeScoreRate:[],</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">          param.examName.push(<span class="string">'考试名称：'</span> + item.examName)</span><br><span class="line">          param.teacherName.push(item.teacherName)</span><br><span class="line">          param.date.push(utils.formatDate(item.createTime))</span><br><span class="line">          param.selfScoreRate.push(<span class="built_in">parseFloat</span>(item.selfScoreRate))</span><br><span class="line">          param.classScoreRate.push(<span class="built_in">parseFloat</span>(item.classScoreRate))</span><br><span class="line">          param.gradeScoreRate.push(<span class="built_in">parseFloat</span>(item.gradeScoreRate))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> options = &#123;</span><br><span class="line">          color: [<span class="string">'#447ED9'</span>],</span><br><span class="line">          tooltip : &#123;</span><br><span class="line">            trigger: <span class="string">'axis'</span>,</span><br><span class="line">            axisPointer : &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">                     <span class="comment">// 默认为直线，可选为：'line' | 'shadow'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            formatter:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">let</span> res = <span class="string">`&lt;p&gt;<span class="subst">$&#123;resp[<span class="number">0</span>].data&#125;</span>&lt;/p&gt;&lt;p&gt;<span class="subst">$&#123;resp[<span class="number">1</span>].seriesName&#125;</span> : <span class="subst">$&#123;resp[<span class="number">1</span>].data&#125;</span>&lt;/p&gt;`</span></span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; resp.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> item = resp[i]</span><br><span class="line">                res += <span class="string">`&lt;p&gt;<span class="subst">$&#123;item.marker&#125;</span><span class="subst">$&#123;item.seriesName&#125;</span> : <span class="subst">$&#123;item.data&#125;</span>%&lt;/p&gt;`</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> res</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line">            data:[<span class="string">'班级'</span>,<span class="string">'年级'</span>],</span><br><span class="line">            x: <span class="string">'right'</span>,</span><br><span class="line">            y: <span class="string">'bottom'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          grid: &#123;</span><br><span class="line">            left: <span class="string">'3%'</span>,</span><br><span class="line">            right: <span class="string">'10%'</span>,</span><br><span class="line">            bottom: <span class="string">'10%'</span>,</span><br><span class="line">            containLabel: <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis : [</span><br><span class="line">            &#123;</span><br><span class="line">              name: <span class="string">'时间'</span>,</span><br><span class="line">              type : <span class="string">'category'</span>,</span><br><span class="line">              data : param.date,</span><br><span class="line">              axisLabel:&#123;&#125;,</span><br><span class="line">              axisTick: &#123;</span><br><span class="line">                alignWithLabel: <span class="literal">true</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          yAxis : [</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'得分率'</span>,</span><br><span class="line">              type : <span class="string">'value'</span>,</span><br><span class="line">              axisLabel: &#123;</span><br><span class="line">                formatter: <span class="string">'&#123;value&#125; %'</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          series : [</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'考试名称'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbol:<span class="string">'none'</span>,</span><br><span class="line">              data:param.examName</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'任课教师'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              symbol:<span class="string">'none'</span>,</span><br><span class="line">              data:param.teacherName</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'得分率'</span>,</span><br><span class="line">              type:<span class="string">'bar'</span>,</span><br><span class="line">              barWidth: <span class="string">'30%'</span>,</span><br><span class="line">              data:param.selfScoreRate</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'班级'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              color:<span class="string">'#F8BB46'</span>,</span><br><span class="line">              data:param.classScoreRate</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              name:<span class="string">'年级'</span>,</span><br><span class="line">              type:<span class="string">'line'</span>,</span><br><span class="line">              color:<span class="string">'#6DC171'</span>,</span><br><span class="line">              data:param.gradeScoreRate</span><br><span class="line">            &#125;,</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.knowledgeDialogVisible = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> barChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'weaknowledgeBar'</span>))</span><br><span class="line">          barChart.setOption(options)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="19-折线图-节点点击事件"><a href="#19-折线图-节点点击事件" class="headerlink" title="19.折线图-节点点击事件"></a>19.折线图-节点点击事件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">          pointLine.on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.componentType === <span class="string">'series'</span>) &#123;</span><br><span class="line">              <span class="keyword">let</span> index = e.dataIndex</span><br><span class="line">              colorIndex = index</span><br><span class="line">              self.pointExamName = self.weakData[index].examName</span><br><span class="line">              self.pointSelfScoreRate = self.weakData[index].scoreRate</span><br><span class="line"></span><br><span class="line">              self.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                pointLine.clear()</span><br><span class="line">                pointLine.setOption(options)</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure>

<h4 id="20-波浪图"><a href="#20-波浪图" class="headerlink" title="20.波浪图"></a>20.波浪图</h4><p><img src="../images/echarts/20.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">weakData (val) &#123;</span><br><span class="line">        <span class="keyword">this</span>.pointExamName = val[<span class="number">0</span>].examName</span><br><span class="line">        <span class="keyword">this</span>.pointSelfScoreRate = val[<span class="number">0</span>].scoreRate</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> param = &#123;</span><br><span class="line">          examName:[],</span><br><span class="line">          date:[],</span><br><span class="line">          selfScoreRate:[],</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">          param.examName.push(item.examName)</span><br><span class="line">          param.date.push(util.formatDate(item.examTime))</span><br><span class="line">          param.selfScoreRate.push(<span class="built_in">parseFloat</span>(item.scoreRate))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> colorIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">let</span> options = &#123;</span><br><span class="line">          color: [<span class="string">"#e2f1fe"</span>],</span><br><span class="line">          grid: &#123;</span><br><span class="line">            left: <span class="string">'0'</span>,</span><br><span class="line">            right: <span class="string">'0'</span>,</span><br><span class="line">            top: <span class="string">'10'</span>,</span><br><span class="line">            bottom: <span class="string">'30'</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis: &#123;</span><br><span class="line">            axisLine: &#123;</span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                color: <span class="string">'#447ED9'</span>, <span class="comment">//左边线的颜色</span></span><br><span class="line">                width: <span class="string">'0'</span> <span class="comment">//坐标线的宽度</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            axisLabel: &#123;</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                color: <span class="string">'#ccc'</span>, <span class="comment">//坐标值的具体的颜色</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            type: <span class="string">'category'</span>,</span><br><span class="line">            boundaryGap: <span class="literal">true</span>,</span><br><span class="line">            data: param.date,</span><br><span class="line">          &#125;,</span><br><span class="line">          yAxis: &#123;</span><br><span class="line">            axisLine: &#123;</span><br><span class="line">              lineStyle: &#123;</span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                color: <span class="string">'#447ED9'</span>, <span class="comment">//左边线的颜色</span></span><br><span class="line">                width: <span class="string">'0'</span> <span class="comment">//坐标线的宽度</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            axisLabel: &#123;</span><br><span class="line">              textStyle: &#123;</span><br><span class="line">                color: <span class="string">'#447ED9'</span>, <span class="comment">//坐标值得具体的颜色</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            x: <span class="string">'center'</span>,</span><br><span class="line">            type: <span class="string">'value'</span>,</span><br><span class="line">            splitLine: &#123;</span><br><span class="line">              show: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  color: <span class="string">'#3AA7FF'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                borderColor: <span class="string">'rgba(255,255,255,0)'</span>,</span><br><span class="line">                borderWidth: <span class="number">30</span>,</span><br><span class="line">                color: <span class="function"><span class="keyword">function</span>(<span class="params">param</span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">if</span> (colorIndex == param.dataIndex) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">'#F6566F'</span></span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">'#3AA7FF'</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                  color: <span class="keyword">new</span> echarts.graphic.LinearGradient(</span><br><span class="line">                    <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, [&#123;</span><br><span class="line">                      offset: <span class="number">0</span>,</span><br><span class="line">                      color: <span class="string">'rgba(255,255,255,0.45)'</span></span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                      offset: <span class="number">.85</span>,</span><br><span class="line">                      color: <span class="string">'rgba(68, 126, 217, .3)'</span></span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                      offset: <span class="number">1</span>,</span><br><span class="line">                      color: <span class="string">'rgba(68, 126, 217, 0)'</span></span><br><span class="line">                    &#125;]</span><br><span class="line">                  ),</span><br><span class="line">                  type: <span class="string">'default'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            showAllSymbol: <span class="literal">true</span>,</span><br><span class="line">            symbol: <span class="string">'circle'</span>,</span><br><span class="line">            smooth: <span class="literal">true</span>,</span><br><span class="line">            symbolSize: <span class="number">10</span>,</span><br><span class="line">            type: <span class="string">'line'</span>,</span><br><span class="line">            data: param.selfScoreRate</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            type: <span class="string">'bar'</span>,</span><br><span class="line">            barWidth: <span class="number">1</span>,</span><br><span class="line">            data: param.selfScoreRate,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">return</span> <span class="string">'#3AA7FF'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">          <span class="keyword">let</span> pointLine = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'pointLine'</span>))</span><br><span class="line">          pointLine.setOption(options)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="21-玫瑰图"><a href="#21-玫瑰图" class="headerlink" title="21.玫瑰图"></a>21.玫瑰图</h4><p><img src="../images/echarts/21.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">initMistakeChartRose(val) &#123;</span><br><span class="line">        <span class="keyword">let</span> data = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">          data.push(&#123;</span><br><span class="line">            name:item.subjectName,</span><br><span class="line">            value:item.ratio</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 玫瑰图</span></span><br><span class="line">        <span class="keyword">this</span>.mistakeChartRose = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'chartRose'</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> option = &#123;</span><br><span class="line">            tooltip: &#123;</span><br><span class="line">                trigger: <span class="string">'item'</span>,</span><br><span class="line">                formatter: <span class="string">"&#123;b&#125; : &#123;d&#125;%"</span></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            calculable: <span class="literal">true</span>,</span><br><span class="line">            color:[<span class="string">'#6877f4'</span>,<span class="string">'#96eb8e'</span>,<span class="string">'#4eccff'</span>,<span class="string">'#4c7af2'</span>,<span class="string">'#1c4693'</span>,<span class="string">'#3fb994'</span>],</span><br><span class="line"></span><br><span class="line">            series: [&#123;</span><br><span class="line">              type: <span class="string">'pie'</span>,</span><br><span class="line">              silent: <span class="literal">true</span>,</span><br><span class="line">              clockWise: <span class="literal">true</span>,</span><br><span class="line">              hoverAnimation: <span class="literal">false</span>,</span><br><span class="line">              animationType: <span class="string">'scale'</span>,</span><br><span class="line">              radius: <span class="string">'14%'</span>,</span><br><span class="line">              center: [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span><br><span class="line">              label: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                  position: <span class="string">'center'</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data: [&#123;</span><br><span class="line">                value: <span class="number">100</span>,</span><br><span class="line">                itemStyle: &#123;</span><br><span class="line">                  normal: &#123;</span><br><span class="line">                    color: &#123;</span><br><span class="line">                      colorStops: [&#123;</span><br><span class="line">                        offset: <span class="number">0</span>,</span><br><span class="line">                        color: <span class="string">'#fff'</span> <span class="comment">// 0% 处的颜色</span></span><br><span class="line">                      &#125;, &#123;</span><br><span class="line">                        offset: <span class="number">1</span>,</span><br><span class="line">                        color: <span class="string">'#cfcfcf'</span> <span class="comment">// 100% 处的颜色</span></span><br><span class="line">                      &#125;]</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;]</span><br><span class="line">            &#125;,&#123;</span><br><span class="line">              type: <span class="string">'pie'</span>,</span><br><span class="line">              radius: [<span class="string">'20%'</span>, <span class="string">'80%'</span>],</span><br><span class="line">              center: [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span><br><span class="line">              roseType: <span class="string">'radius'</span>,</span><br><span class="line">              width: <span class="string">'40%'</span>,</span><br><span class="line">              itemStyle: &#123;</span><br><span class="line">                normal: &#123;</span><br><span class="line">                  label: &#123;</span><br><span class="line">                      show: <span class="literal">false</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  labelLine: &#123;</span><br><span class="line">                      show: <span class="literal">false</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              data: data</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mistakeChartRose.setOption(option)</span><br><span class="line">        <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">        <span class="keyword">this</span>.mistakeChartRose.on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">let</span> index = e.dataIndex</span><br><span class="line">          self.subjectMistakeShow = self.subjectMistakeData[index]</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h4 id="22-雷达图-普通"><a href="#22-雷达图-普通" class="headerlink" title="22.雷达图-普通"></a>22.雷达图-普通</h4><p><img src="../images/echarts/22.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">schoolRankingData (val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (val.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> param = &#123;</span><br><span class="line">            indicator:[],</span><br><span class="line">            gradeSeriesValue:[],</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">            param.indicator.push(&#123;</span><br><span class="line">              name: item.subjectName + <span class="string">' ('</span> + <span class="built_in">parseFloat</span>((item.ratio * <span class="number">100</span>).toFixed(<span class="number">2</span>)) + <span class="string">'%)'</span>,</span><br><span class="line">              max: <span class="number">100</span></span><br><span class="line">            &#125;)</span><br><span class="line">            param.gradeSeriesValue.push(<span class="built_in">parseFloat</span>((item.ratio * <span class="number">100</span>).toFixed(<span class="number">2</span>)))</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">let</span> options = &#123;</span><br><span class="line">            <span class="comment">// backgroundColor: '#f8f8f8',</span></span><br><span class="line">            tooltip: &#123;</span><br><span class="line">              formatter:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> res = <span class="string">''</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> val) &#123;</span><br><span class="line">                  res +=<span class="string">`&lt;p&gt;<span class="subst">$&#123;item.subjectName&#125;</span> : &lt;em style="padding-left: 10px;color: #fabb0a"&gt;<span class="subst">$&#123;<span class="built_in">parseFloat</span>((item.ratio * <span class="number">100</span>).toFixed(<span class="number">2</span>))&#125;</span>%&lt;/em&gt;&lt;/p&gt;`</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            radar: &#123;</span><br><span class="line">              name: &#123;</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                  color: <span class="string">'#94a5bc'</span>,</span><br><span class="line">                  fontSize: <span class="number">12</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              splitNumber: <span class="number">3</span>,</span><br><span class="line">              indicator: param.indicator,</span><br><span class="line">              axisLine: &#123;               <span class="comment">// (圆内的几条直线)坐标轴轴线相关设置</span></span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  color: <span class="string">'#eff3f9'</span>,     <span class="comment">// 坐标轴线线的颜色。</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              splitLine: &#123;             	<span class="comment">// (这里是指所有圆环)坐标轴在 grid 区域中的分隔线。</span></span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  color: <span class="string">'#eff3f9'</span>, 		<span class="comment">// 分隔线颜色</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">              splitArea: &#123;             	<span class="comment">// 坐标轴在 grid 区域中的分隔区域，默认不显示。</span></span><br><span class="line">                show: <span class="literal">true</span>,</span><br><span class="line">                areaStyle: &#123;</span><br><span class="line">                  color: [<span class="string">"#b9f3f4"</span>, <span class="string">"#daf8f8"</span>, <span class="string">"#f2fcfd"</span>]  <span class="comment">// 图表背景网格的颜色</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            series: [&#123;</span><br><span class="line">              type: <span class="string">'radar'</span>,</span><br><span class="line">              symbol: <span class="string">'circle'</span>,</span><br><span class="line">              symbolSize: <span class="number">8</span>,</span><br><span class="line">              data : [</span><br><span class="line">                &#123;</span><br><span class="line">                  value : param.gradeSeriesValue,</span><br><span class="line">                  name:<span class="string">'学科'</span>,</span><br><span class="line">                  itemStyle:&#123;</span><br><span class="line">                    normal:&#123;</span><br><span class="line">                      color:<span class="string">'#fabb0a'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              ]</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">let</span> radarChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'subjectRadar'</span>))</span><br><span class="line">          <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            radarChart.setOption(options)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>echarts</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】数据类型检测方法对比</title>
    <url>/js-data-type-detection/</url>
    <content><![CDATA[<h3 id="JS中的数据类型"><a href="#JS中的数据类型" class="headerlink" title="JS中的数据类型"></a>JS中的数据类型</h3><p>5种基本数据类型：Number、String、Boolean、Null、Undefined、Symbol</p>
<p>1种复杂数据类型：Object（Array、Function、Reg、Date…）<a id="more"></a></p>
<p><strong>1.typeof</strong></p>
<p>语法：<code>typeof num;</code></p>
<p>结果：Number/String/Boolean/Undefined/Function/Symbol正常，null/Array/Reg/Date–&gt;Object</p>
<p><strong>2.instanceof</strong></p>
<p>语法：<code>num instanceof Number;//true or false</code></p>
<p>结果：Number/String/Boolean都为false，因为非构造函数创建，使用new Number创建则为true</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="literal">undefined</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span>;<span class="comment">//true</span></span><br><span class="line"><span class="literal">null</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span>;<span class="comment">//true</span></span><br></pre></td></tr></table></figure>

<p><strong>3.constructor</strong></p>
<p>语法：<code>num.constructor==Number;</code></p>
<p>结果：都为true，但此属性可能在继承时被修改</p>
<p><strong>4.Object.prototype.toString.call</strong></p>
<p>语法：<code>Object.prototype.toString.call(num)==&quot;[object Number]&quot;;</code></p>
<p>结果：可检测出所有类型</p>
<p><strong>5.jquery中$.type</strong></p>
<p>语法：<code>$.type(num)//number</code></p>
<p>结果：同上（实质就是调用了方法4）</p>
<h3 id="总结5种方法："><a href="#总结5种方法：" class="headerlink" title="总结5种方法："></a>总结5种方法：</h3><p><img src="../images/js-data-type.jpg" alt="js-data-type"></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】match、search、replace、split、exec、test对比总结</title>
    <url>/js-match-search-replace-split-exec-test/</url>
    <content><![CDATA[<h3 id="一、String中支持正则的方法："><a href="#一、String中支持正则的方法：" class="headerlink" title="一、String中支持正则的方法："></a>一、String中支持正则的方法：</h3><h4 id="1-match-返回包含一个-所有匹配结果的数组，没有则返回null"><a href="#1-match-返回包含一个-所有匹配结果的数组，没有则返回null" class="headerlink" title="1.match:返回包含一个/所有匹配结果的数组，没有则返回null"></a><strong>1.match</strong>:返回包含一个/所有匹配结果的数组，没有则返回null</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str.match(regexp)</span><br></pre></td></tr></table></figure>
<p><strong>非全局模式：</strong>返回和exec()相同结果。一个数组，其中只有第一个匹配项，额外的属性index表示匹配结果在原字符串中的索引，input属性表示被解析的原始字符串<a id="more"></a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'aaaa'</span>.match(<span class="regexp">/\w/</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// ["a", index: 0, input: "aaaa"]</span></span><br></pre></td></tr></table></figure>
<p><strong>全局模式：</strong>返回一个数组，包含所有的匹配项，没有index或input属性</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">'aaaa'</span>.match(<span class="regexp">/\w/g</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// ["a", "a", "a", "a"]</span></span><br></pre></td></tr></table></figure>

<h4 id="2-search-返回首个匹配项的索引，没有则返回-1"><a href="#2-search-返回首个匹配项的索引，没有则返回-1" class="headerlink" title="2.search:返回首个匹配项的索引，没有则返回-1"></a><strong>2.search</strong>:返回首个匹配项的索引，没有则返回-1</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str.search(regexp)</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>search方法不执行全局匹配，它将忽略标志g。它同时忽略 regexp的lastIndex属性，并且总是从字符串的开始进行检索</p>
<h4 id="3-replace-用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。"><a href="#3-replace-用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。" class="headerlink" title="3.replace:用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。"></a><strong>3.replace</strong>:用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str.replace(regexp|substr, newSubStr|<span class="function"><span class="keyword">function</span>)</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>replace方法并不改变调用它的字符串本身，而只是返回一个新的替换后的字符串</p>
<p><strong>字符串/非全局模式：</strong>只替换第一个匹配项</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'aaaa'</span>.replace(<span class="string">'a'</span>, <span class="string">'b'</span>)     <span class="comment">//"baaa"</span></span><br><span class="line"><span class="string">'aaaa'</span>.replace(<span class="regexp">/\w/</span>, <span class="string">'b'</span>)    <span class="comment">//"baaa"</span></span><br></pre></td></tr></table></figure>
<p><strong>全局模式：</strong>替换所有匹配项</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'aaaa'</span>.replace(<span class="regexp">/\w/g</span>, <span class="string">'b'</span>)    <span class="comment">//"bbbb"</span></span><br></pre></td></tr></table></figure>
<p><strong>特殊变量名举例：</strong>交换两个单词的位置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/(\w+)\s(\w+)/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"John Smith"</span>;</span><br><span class="line"><span class="keyword">var</span> newstr = str.replace(re, <span class="string">"$2, $1"</span>);</span><br><span class="line"><span class="comment">// Smith, John</span></span><br><span class="line"><span class="built_in">console</span>.log(newstr);</span><br></pre></td></tr></table></figure>
<p><strong>第二个参数为函数时：</strong>函数的返回值将作为替换字符串；该回调函数的参数：</p>
<table>
<thead>
<tr>
<th align="left">变量名</th>
<th align="left">代表的值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">match</td>
<td align="left">符合正则匹配的子串</td>
</tr>
<tr>
<td align="left">p1,p2…</td>
<td align="left">捕获组，对应于特殊变量的$1，$2等</td>
</tr>
<tr>
<td align="left">offset</td>
<td align="left">匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是“abcd”，匹配到的子字符串是“bc”，那么这个参数将是1）</td>
</tr>
<tr>
<td align="left">string</td>
<td align="left">原字符串</td>
</tr>
</tbody></table>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">'aaaa'</span>.replace(<span class="regexp">/\w/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'b'</span>;</span><br><span class="line">&#125;); <span class="comment">// "bbbb"</span></span><br><span class="line"></span><br><span class="line"><span class="string">'aaaa'</span>.replace(<span class="regexp">/\w/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">match</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> match.toUpperCase();</span><br><span class="line">&#125;); <span class="comment">// "AAAA"</span></span><br></pre></td></tr></table></figure>

<h4 id="4-split-使用指定的分隔符字符串将一个String对象分割成字符串数组"><a href="#4-split-使用指定的分隔符字符串将一个String对象分割成字符串数组" class="headerlink" title="4.split:使用指定的分隔符字符串将一个String对象分割成字符串数组"></a><strong>4.split</strong>:使用指定的分隔符字符串将一个String对象分割成字符串数组</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">str.split([separator[, limit]])</span><br></pre></td></tr></table></figure>
<p><strong>举例：</strong>限制返回值中分割元素数量</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myString = <span class="string">"Hello World. How are you doing?"</span>;</span><br><span class="line"><span class="keyword">var</span> splits = myString.split(<span class="string">" "</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(splits); <span class="comment">//["Hello", "World.", "How"]</span></span><br></pre></td></tr></table></figure>
<h3 id="二、RegExp中的API："><a href="#二、RegExp中的API：" class="headerlink" title="二、RegExp中的API："></a>二、RegExp中的API：</h3><h4 id="5-exec-在一个指定字符串中执行一个搜索匹配。返回一个结果数组或-null"><a href="#5-exec-在一个指定字符串中执行一个搜索匹配。返回一个结果数组或-null" class="headerlink" title="5.exec:在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 null"></a><strong>5.exec:</strong>在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 null</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">regexp.exec(str)</span><br></pre></td></tr></table></figure>
<p>第一个元素是与整个正则匹配的子字符串；第二个元素是捕获组…index和input同match方法</p>
<p><strong>举例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="regexp">/(\d+)-(\w+)/</span>.exec(<span class="string">'12-ab'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result) <span class="comment">// --&gt; ["12-ab", "12", "ab", index: 0, input: "12-ab"]</span></span><br></pre></td></tr></table></figure>

<p><strong>非全局模式：</strong>每次实例的lastIndex属性的值总是不变的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/</span>;</span><br><span class="line"><span class="comment">//第一次匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">[<span class="string">"1"</span>]</span><br><span class="line">  <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">第二次匹配</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">[<span class="string">"1"</span>]</span><br><span class="line">  <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>全局模式：</strong>每次实例的lastIndex属性的值为匹配文本最后一个字符的下一个位置，当 exec() 再也找不到匹配的文本时，它将返回 null，并把 lastIndex 属性重置为 0</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/g</span>;</span><br><span class="line"><span class="comment">//第一次匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">[<span class="string">"1"</span>]</span><br><span class="line">  <span class="number">2</span></span><br><span class="line">  </span><br><span class="line">第二次匹配</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">[<span class="string">"2"</span>]</span><br><span class="line">  <span class="number">3</span> </span><br><span class="line"></span><br><span class="line">第三次匹配</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">[<span class="string">"3"</span>]</span><br><span class="line">  <span class="number">4</span> </span><br><span class="line"></span><br><span class="line">第四匹配</span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(<span class="string">'a123'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="literal">null</span></span><br><span class="line">  <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><strong>使用循环，获取全部匹配项：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d/g</span>,</span><br><span class="line">    result = [],</span><br><span class="line">    crt;</span><br><span class="line"><span class="keyword">while</span>((crt = reg.exec(<span class="string">'a123'</span>)) !== <span class="literal">null</span>)&#123;</span><br><span class="line">    result = result.concat(crt)</span><br><span class="line">&#125;;</span><br><span class="line">result; <span class="comment">//["1", "2", "3"]</span></span><br></pre></td></tr></table></figure>

<h4 id="6-test-执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回-true-或-false"><a href="#6-test-执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回-true-或-false" class="headerlink" title="6.test:执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回 true 或 false"></a><strong>6.test:</strong>执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回 true 或 false</h4><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">regexp.test(str)</span><br></pre></td></tr></table></figure>
<p><strong>非全局模式：</strong>lastIndex不变</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">/\d/.test(<span class="string">'asdf2'</span>) <span class="comment">// --true   检测字符串`'asdf2'`中是否包含数字</span></span><br></pre></td></tr></table></figure>
<p><strong>全局模式：</strong>连续的执行test()方法，后续的执行将会从 lastIndex 处开始匹配字符串</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> regex = <span class="regexp">/foo/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// regex.lastIndex is at 0</span></span><br><span class="line">regex.test(<span class="string">'foo'</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// regex.lastIndex is now at 3</span></span><br><span class="line">regex.test(<span class="string">'foo'</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="https://segmentfault.com/a/1190000003497780" target="_blank" rel="noopener">[ JS 进阶 ] test, exec, match, replace</a></p>
<p><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">MDN</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】常用函数</title>
    <url>/js-util-functions/</url>
    <content><![CDATA[<h4 id="1-数组求和"><a href="#1-数组求和" class="headerlink" title="1.数组求和"></a>1.数组求和</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">prev,val</span>) =&gt;</span> prev + val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-二维数组拉平"><a href="#2-二维数组拉平" class="headerlink" title="2.二维数组拉平"></a>2.二维数组拉平</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flat</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">pre, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Array</span>.isArray(value) ? [...pre, ...flat(value)] : [...pre, value]</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flattenArray</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> flattened = [].concat(...arr)</span><br><span class="line">  <span class="keyword">return</span> flattened.some(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">Array</span>.isArray(item)) ? </span><br><span class="line">    flattenArray(flattened) : flattened</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-对象数组-求某个属性的最大值"><a href="#3-对象数组-求某个属性的最大值" class="headerlink" title="3.对象数组-求某个属性的最大值"></a>3.对象数组-求某个属性的最大值</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyMax</span>(<span class="params">arr, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(<span class="built_in">Math</span>, arr.map( <span class="function"><span class="params">o</span> =&gt;</span> o[key]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-对象数组-求包含某个属性最大值的对象"><a href="#4-对象数组-求包含某个属性最大值的对象" class="headerlink" title="4.对象数组-求包含某个属性最大值的对象"></a>4.对象数组-求包含某个属性最大值的对象</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">keyMaxObj</span>(<span class="params">arr,key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> arr.reduce(<span class="function">(<span class="params">p,v</span>) =&gt;</span> p[key] &lt; v[key] ? v : p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-对象数组-根据对象某个属性值做对象排序-1-升序-0-降序"><a href="#5-对象数组-根据对象某个属性值做对象排序-1-升序-0-降序" class="headerlink" title="5.对象数组-根据对象某个属性值做对象排序(1:升序 0:降序)"></a>5.对象数组-根据对象某个属性值做对象排序(1:升序 0:降序)</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">key, sortType</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">obj1,obj2</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">let</span> a = obj1[key]</span><br><span class="line">          <span class="keyword">let</span> b = obj2[key]</span><br><span class="line">          <span class="keyword">if</span> (sortType) &#123;</span><br><span class="line">            <span class="keyword">return</span> a - b     <span class="comment">//升序</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> b - a     <span class="comment">//降序</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">objArray.sort(compare(<span class="string">'value'</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<h4 id="6-普通数组去重"><a href="#6-普通数组去重" class="headerlink" title="6.普通数组去重"></a>6.普通数组去重</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="7-根据某个属性做对象数组去重"><a href="#7-根据某个属性做对象数组去重" class="headerlink" title="7.根据某个属性做对象数组去重"></a>7.根据某个属性做对象数组去重</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">objArrayUnique</span>(<span class="params">objArray,key</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> hash = &#123;&#125;</span><br><span class="line">    objArray = objArray.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">item, next</span>) </span>&#123;</span><br><span class="line">      hash[next[key]]?<span class="string">''</span>:hash[next[key]] = <span class="literal">true</span> &amp;&amp; item.push(next)</span><br><span class="line">      <span class="keyword">return</span> item</span><br><span class="line">    &#125;, [])</span><br><span class="line">    <span class="keyword">return</span> objArray</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="8-构建树"><a href="#8-构建树" class="headerlink" title="8.构建树"></a>8.构建树</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 将一维的扁平数组转换为多层级对象</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param  <span class="type">&#123;[type]&#125;</span> </span>list 一维数组，数组中每一个元素需包含id和parent_id两个属性</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@sort </span>父节点在数组中的位置需要在子节点前，即 节点3必须排在节点3-2之前(可调用上面的compare方法)</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@type </span>选择children为数组或对象</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return <span class="type">&#123;[type]&#125;</span> </span>tree 多层级树状结构</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">buildTree: <span class="function"><span class="keyword">function</span> (<span class="params">list, parentKey</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> temp = &#123;&#125;;</span><br><span class="line">    <span class="keyword">let</span> tree = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> list)&#123;</span><br><span class="line">      temp[list[i].id] = list[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> temp)&#123;</span><br><span class="line">      <span class="keyword">if</span>(temp[i][parentKey]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!temp[temp[i][parentKey]].children) &#123;</span><br><span class="line">          temp[temp[i][parentKey]].children = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">          <span class="comment">// if (type === 'Object') temp[temp[i][parentKey]].children = new Object();</span></span><br><span class="line">        &#125;</span><br><span class="line">        temp[temp[i][parentKey]].children.push(temp[i]);</span><br><span class="line">        <span class="comment">// temp[temp[i][parentKey]].children[temp[i].id] = temp[i];</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        tree[temp[i].id] =  temp[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="9-多个对象数组-根据某个属性求并集"><a href="#9-多个对象数组-根据某个属性求并集" class="headerlink" title="9.多个对象数组-根据某个属性求并集"></a>9.多个对象数组-根据某个属性求并集</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inUnion</span>(<span class="params">list1 = [], list2 = [], key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = list1.concat(list2)</span><br><span class="line">    <span class="keyword">return</span> objArrayUnique(arr, key)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="10-多个对象数组-根据某个属性求交集"><a href="#10-多个对象数组-根据某个属性求交集" class="headerlink" title="10.多个对象数组-根据某个属性求交集"></a>10.多个对象数组-根据某个属性求交集</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inBoth</span>(<span class="params">list1, list2, key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list1.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> item1 = list1[i],</span><br><span class="line">    found = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; list2.length &amp;&amp; !found; j++) &#123;</span><br><span class="line">      found = item1[key] === list2[j][key];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (found) &#123;</span><br><span class="line">      result.push(item1);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="11-格式化时间戳"><a href="#11-格式化时间戳" class="headerlink" title="11.格式化时间戳"></a>11.格式化时间戳</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDate</span>(<span class="params">timestamp, type = <span class="string">'ymd'</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp)</span><br><span class="line">    <span class="keyword">let</span> y = date.getFullYear()</span><br><span class="line">    <span class="keyword">let</span> m = date.getMonth() + <span class="number">1</span></span><br><span class="line">    m = m &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + m) : m</span><br><span class="line">    <span class="keyword">let</span> d = date.getDate()</span><br><span class="line">    d = d &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + d) : d</span><br><span class="line">    <span class="keyword">let</span> h = date.getHours()</span><br><span class="line">    h = h &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + h) : h</span><br><span class="line">    <span class="keyword">let</span> i = date.getMinutes()</span><br><span class="line">    i = i &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + i) : i</span><br><span class="line">    <span class="keyword">let</span> s = date.getSeconds()</span><br><span class="line">    s = s &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + s) : s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'ymd'</span>: &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'ymdhi'</span>:&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span> <span class="subst">$&#123;h&#125;</span>:<span class="subst">$&#123;i&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">default</span>:&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span> <span class="subst">$&#123;h&#125;</span>:<span class="subst">$&#123;i&#125;</span>:<span class="subst">$&#123;s&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="12-yyyy-MM-dd转换成时间戳的格式"><a href="#12-yyyy-MM-dd转换成时间戳的格式" class="headerlink" title="12.yyyy-MM-dd转换成时间戳的格式"></a>12.yyyy-MM-dd转换成时间戳的格式</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateToTimestamp</span>(<span class="params">dateStr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newstr = dateStr.replace(<span class="regexp">/-/g</span>,<span class="string">'/'</span>)   </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>(newstr))</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="13-树状结构转扁平数组"><a href="#13-树状结构转扁平数组" class="headerlink" title="13.树状结构转扁平数组"></a>13.树状结构转扁平数组</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nestedToFlat</span>(<span class="params">children, parent</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> arr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; children.length; i++) &#123;</span><br><span class="line">    arr.push(&#123; <span class="attr">id</span>: children[i].id,  <span class="attr">isChecked</span>: children[i].isChecked, <span class="attr">parent</span>: parent &#125;)</span><br><span class="line">    <span class="keyword">if</span> (children[i].children) arr = arr.concat(nestedToFlat(children[i].children, children[i].id))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="14-随机颜色"><a href="#14-随机颜色" class="headerlink" title="14.随机颜色"></a>14.随机颜色</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomColor</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> rgb = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    rgb[i] = <span class="built_in">Math</span>.round(<span class="number">255</span> * <span class="built_in">Math</span>.random())</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'rgb('</span> + rgb.join(<span class="string">','</span>) + <span class="string">')'</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="15-检查是否是整数"><a href="#15-检查是否是整数" class="headerlink" title="15.检查是否是整数"></a>15.检查是否是整数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isInteger</span>(<span class="params">x</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">return</span> (x ^ <span class="number">0</span>) === x </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="16-分页函数（一维数组转二维）"><a href="#16-分页函数（一维数组转二维）" class="headerlink" title="16.分页函数（一维数组转二维）"></a>16.分页函数（一维数组转二维）</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pages</span> (<span class="params">arr, size</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> pages = []</span><br><span class="line">  arr.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> page = <span class="built_in">Math</span>.floor(index / size)</span><br><span class="line">    <span class="keyword">if</span> (!pages[page]) &#123;</span><br><span class="line">      pages[page] = []</span><br><span class="line">    &#125;</span><br><span class="line">    pages[page].push(item)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> pages</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="17-全屏函数"><a href="#17-全屏函数" class="headerlink" title="17.全屏函数"></a>17.全屏函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">launchFullScreen</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (element.requestFullscreen) &#123;</span><br><span class="line">        element.requestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class="line">        element.mozRequestFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class="line">        element.webkitRequestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.msRequestFullscreen) &#123;</span><br><span class="line">        element.msRequestFullscreen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">launchFullScreen(<span class="built_in">document</span>.documentElement) <span class="comment">//使用</span></span><br></pre></td></tr></table></figure>

<h4 id="18-退出全屏函数"><a href="#18-退出全屏函数" class="headerlink" title="18.退出全屏函数"></a>18.退出全屏函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exitFullscreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.exitFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.mozCancelFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitExitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.webkitExitFullscreen();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="19-检测变量是否是对象"><a href="#19-检测变量是否是对象" class="headerlink" title="19.检测变量是否是对象"></a>19.检测变量是否是对象</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isObject</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Object]'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="20-模拟sleep"><a href="#20-模拟sleep" class="headerlink" title="20.模拟sleep"></a>20.模拟sleep</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">milliSeconds</span>) </span>&#123; <span class="comment">// 毫秒</span></span><br><span class="line">    <span class="keyword">const</span> startTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() &lt; startTime + milliSeconds);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="21-使用Blob实现点击下载"><a href="#21-使用Blob实现点击下载" class="headerlink" title="21.使用Blob实现点击下载"></a>21.使用Blob实现点击下载</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveBlobFile</span>(<span class="params">name, type, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (data !== <span class="literal">null</span> &amp;&amp; navigator.msSaveBlob) <span class="keyword">return</span> navigator.msSaveBlob(<span class="keyword">new</span> Blob([data], &#123; <span class="attr">type</span>: type &#125;), name);</span><br><span class="line">    <span class="keyword">let</span> a = $(<span class="string">"&lt;a style='display: none;'/&gt;"</span>);</span><br><span class="line">    <span class="keyword">let</span> url = <span class="built_in">window</span>.URL.createObjectURL(<span class="keyword">new</span> Blob([data], &#123; <span class="attr">type</span>: type &#125;));</span><br><span class="line">    a.attr(<span class="string">'href'</span>, url);</span><br><span class="line">    a.attr(<span class="string">'download'</span>, name);</span><br><span class="line">    $(<span class="string">'body'</span>).append(a);</span><br><span class="line">    a[<span class="number">0</span>].click();</span><br><span class="line">    <span class="built_in">window</span>.URL.revokeObjectURL(url);</span><br><span class="line">    a.remove();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="22-等待某个dom加载后修改内容"><a href="#22-等待某个dom加载后修改内容" class="headerlink" title="22.等待某个dom加载后修改内容"></a>22.等待某个dom加载后修改内容</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setLoadableTip</span>(<span class="params">tip</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> $loadingText = $(<span class="string">'.hr1-loading-text'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($loadingText.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            $loadingText.text(i18next.t(tip));</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="23-银行卡号隐藏"><a href="#23-银行卡号隐藏" class="headerlink" title="23.银行卡号隐藏"></a>23.银行卡号隐藏</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatBankAccount</span>(<span class="params">account</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> pattern = <span class="regexp">/^(\d&#123;4&#125;)(\d&#123;4&#125;)+(\d+)$/</span>;</span><br><span class="line">    <span class="keyword">return</span> account.replace(pattern, <span class="string">'$1 **** **** $3'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="24-字符串补足到指定长度"><a href="#24-字符串补足到指定长度" class="headerlink" title="24.字符串补足到指定长度"></a>24.字符串补足到指定长度</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rightPad</span>(<span class="params">str, targetLength, padChar</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str + <span class="built_in">Array</span>(targetLength - str.length + <span class="number">1</span>).join(padChar);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>【学习小结】JSONP原理与实现</title>
    <url>/jsonp-learning-summary/</url>
    <content><![CDATA[<h3 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h3><p>我的理解：因为script标签（类似的还有img，iframe）不受同源策略限制，故可以用于跨域数据的获取，这是根本原因。</p>
<p>客户端设置一个script，其url指向支持JSONP的后端API，再声明一个callback函数，函数名需与url中?callback=字段值相同。当包含特定url的script载入时，会向后端API发起请求，后端会将数据包裹进一个函数的参数里，当然这个函数的名称是根据前端url参数自动生成的，前端script载入完成则自动调用已有的callback函数，对接受到的数据（此刻是函数参数）做出处理，从而实现了跨域。<a id="more"></a></p>
<h3 id="二、实现"><a href="#二、实现" class="headerlink" title="二、实现"></a>二、实现</h3><h4 id="1-JS实现"><a href="#1-JS实现" class="headerlink" title="1.JS实现"></a>1.JS实现</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="meta">  "use strict"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> test = <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;<span class="comment">//返回数据后的处理函数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(data);</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> url = <span class="string">"http://cache.video.iqiyi.com/jp/avlist/202861101/1/?callback=test"</span>;<span class="comment">//支持JSONP的API</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">  <span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span></span><br><span class="line"><span class="actionscript">  script.setAttribute(<span class="string">"src"</span>,url);</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(script);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-jQuery实现"><a href="#2-jQuery实现" class="headerlink" title="2.jQuery实现"></a>2.jQuery实现</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="meta">  "use strict"</span>;</span></span><br><span class="line"><span class="javascript">  $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">      url: <span class="string">"http://cache.video.iqiyi.com/jp/avlist/202861101/1/"</span>,</span></span><br><span class="line"><span class="actionscript">      dataType: <span class="string">"jsonp"</span>,</span></span><br><span class="line"><span class="actionscript">      jsonp: <span class="string">"callback"</span>,</span></span><br><span class="line"><span class="actionscript">      success: <span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(data);</span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      error: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"fail"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注：jQuery的callback函数名是随机生成的，返回的数据直接放入success函数处理，很方便。</p>
<h3 id="三、JSONP与AJAX的区别"><a href="#三、JSONP与AJAX的区别" class="headerlink" title="三、JSONP与AJAX的区别"></a>三、JSONP与AJAX的区别</h3><p>我的理解：</p>
<p>1.AJAX基于xhr对象实现，而JSONP是通过script标签动态加载后端js实现，原理不同<br>2.AJAX支持get/post，而JSONP因为需要在script的url中传参，所以只支持get</p>
<h3 id="四、JSONP优缺点"><a href="#四、JSONP优缺点" class="headerlink" title="四、JSONP优缺点"></a>四、JSONP优缺点</h3><p>优点：极好的浏览器兼容性</p>
<p>缺点：存在脚本注入的安全隐患</p>
<p>参考：</p>
<p><a href="http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html" target="_blank" rel="noopener">【原创】说说JSON和JSONP，也许你会豁然开朗，含jQuery用例</a></p>
<p><a href="https://tonghuashuo.github.io/blog/jsonp.html" target="_blank" rel="noopener">5 分钟彻底明白 JSONP</a></p>
<p><a href="https://www.jianshu.com/p/9a5a6f853fa8" target="_blank" rel="noopener">JSONP原理优缺点(只能GET不支持POST)</a></p>
]]></content>
      <categories>
        <category>跨域</category>
      </categories>
      <tags>
        <tag>跨域</tag>
        <tag>jsonp</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s service 简介</title>
    <url>/k8s-service/</url>
    <content><![CDATA[<h4 id="一、什么是k8s-service"><a href="#一、什么是k8s-service" class="headerlink" title="一、什么是k8s service?"></a>一、什么是k8s service?</h4><p>Kubernetes service是一种为一组具有相同功能的pod提供单一不变接入点的资源。当service存在时，它的IP地址和端口不会改变。客户端通过它，可以将请求负载均衡到该service包含的一组pod上，从而不需要知道每个单独的提供服务的pod的地址。</p>
<a id="more"></a>

<h4 id="二、service相关概念"><a href="#二、service相关概念" class="headerlink" title="二、service相关概念"></a>二、service相关概念</h4><h5 id="1-什么是service的clusterIP、port、targetPort、selector？"><a href="#1-什么是service的clusterIP、port、targetPort、selector？" class="headerlink" title="1.什么是service的clusterIP、port、targetPort、selector？"></a>1.什么是service的clusterIP、port、targetPort、selector？</h5><p><img src="../images/k8s-service-concept.png" alt=""><br>clusterIP：service的ip，又称集群虚拟ip，仅可以在集群内部访问</p>
<p>port：service的port</p>
<p>targetPort：service会将连接转发到的容器的目标端口</p>
<p>selector：标签选择器，用于选择service包含的一组特定的pod资源</p>
<p><img src="../images/k8s-service-structure.png" alt=""><br>由上图，引出了两个问题：前端pod如何连接后端pod（集群内访问）？浏览器如何访问前端pod（集群外访问）？</p>
<h4 id="三、前端pod如何连接后端pod（集群内访问）？"><a href="#三、前端pod如何连接后端pod（集群内访问）？" class="headerlink" title="三、前端pod如何连接后端pod（集群内访问）？"></a>三、前端pod如何连接后端pod（集群内访问）？</h4><p>k8s集群网络的一个特征是，所有pod通过ip，直接访问其他pod，而不管是否在同一台物理机上，具体可参考<a href="https://www.kubernetes.org.cn/2059.html" target="_blank" rel="noopener">k8s网络原理及方案</a></p>
<h5 id="1-使用clusterIP类型的service来实现内部访问"><a href="#1-使用clusterIP类型的service来实现内部访问" class="headerlink" title="1.使用clusterIP类型的service来实现内部访问"></a>1.使用clusterIP类型的service来实现内部访问</h5><p>虽然前端pod可以直接指向后端pod的ip，但pod是有生命周期的，删除重建后，ip会变化，不稳定。而使用k8s service，因其可以为一组选定的pod提供固定的ip和port，故可以为后端pod建立一个clusterIP类型的service，来解决ip变化的问题</p>
<h5 id="2-除了通过cluster-ip访问service，是否还有其他访问service的方式？"><a href="#2-除了通过cluster-ip访问service，是否还有其他访问service的方式？" class="headerlink" title="2.除了通过cluster-ip访问service，是否还有其他访问service的方式？"></a>2.除了通过cluster-ip访问service，是否还有其他访问service的方式？</h5><p>还可以通过k8s提供的DNS机制来访问service。在当前namespace中，会运行着一个叫kube-dns的pod，这个pod运行DNS服务，其他pod都被配置成使用其作为dns（k8s通过修改每个容器的/etc/resolv.conf文件实现）<br><img src="../images/k8s-service-resolve.png" alt=""><br>可以通过如下方式（FQDN全限定域名）来访问service：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service-name.namespace.svc.cluster.local // service名称.服务所在的命名空间.集群域名</span><br></pre></td></tr></table></figure>

<p>如果是在相同的namespace下，可直接简化为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service-name</span><br></pre></td></tr></table></figure>
<p>所以，前端pod可以通过service-name: port的方式，来和后端pod互通</p>
<h4 id="四、浏览器如何访问前端pod（集群外访问）？"><a href="#四、浏览器如何访问前端pod（集群外访问）？" class="headerlink" title="四、浏览器如何访问前端pod（集群外访问）？"></a>四、浏览器如何访问前端pod（集群外访问）？</h4><p>有几种方式，可以在外部访问service:</p>
<h5 id="1-使用NodePort类型的service"><a href="#1-使用NodePort类型的service" class="headerlink" title="1.使用NodePort类型的service"></a>1.使用NodePort类型的service</h5><p>让Kubernetes在其所有节点上保留一个端口（所有节点上都使用相同的端口号），并将传入的连接转发给service对应的pod<br><img src="../images/k8s-service-nodeport.png" alt=""><br><img src="../images/k8s-service-nodeport2.png" alt=""></p>
<h5 id="2-使用LoadBalancer类型的service"><a href="#2-使用LoadBalancer类型的service" class="headerlink" title="2.使用LoadBalancer类型的service"></a>2.使用LoadBalancer类型的service</h5><p>在云提供商上运行的k8s集群，通常支持从云基础架构自动提供负载均衡器，它拥有自己独一无二的可公开访问的IP地址，并可以将连接重定向到service<br><img src="../images/k8s-service-lb.png" alt=""><br><img src="../images/k8s-service-lb2.png" alt=""></p>
<h5 id="3-使用Ingress访问service"><a href="#3-使用Ingress访问service" class="headerlink" title="3.使用Ingress访问service"></a>3.使用Ingress访问service</h5><p>为何需要使用Ingress？一个重要的原因是每个LoadBalancer类型的service， 都需要自己的负载均衡器，以及独有的公有IP地址，而Ingress只需要一个公网IP就能为许多service提供访问。当客户端向Ingress发送HTTP请求时，Ingress会根据请求的主机名和路径决定请求转发到的service<br><img src="../images/k8s-service-ingress.png" alt=""></p>
<h4 id="五、service内部实现"><a href="#五、service内部实现" class="headerlink" title="五、service内部实现"></a>五、service内部实现</h4><p>每个节点上都会运行一个kube-proxy进程，来处理和service相关的事情。当有service被创建时，各节点上的kube-proxy会更新自己的iptables规则，来保证新的service在本节点可被解析，以下图为例：<br><img src="../images/k8s-service-inner.png" alt=""><br>pod A发出的包，目的地初始设置为service的IP和端口（在本例中，service是在 172.30.0.1:80）。发送到网络之前，节点A的内核会根据配置在该节点上的iptables规则处理数据包。</p>
<p>内核会检查数据包是否匹配任何这些iptables规则。其中有个规则规定如果有任何数据包的目的地IP等于 172.30.0.1、目的地端口等于 80，那么数据包的目的地IP和端口应该被替换为随机选中的pod的IP和端口。</p>
<p>本例中的数据包满足规则，故而它的IP/端口被改变了。在本例中，pod B2 被随机选中了，所有数据包的目的地IP变更为10.1.2.1（pod B2 的IP），端口改为8080（Service中定义的targetPort），就好像是，客户端pod直接发送数据包给pod B而不是通过Service</p>
]]></content>
      <categories>
        <category>K8S</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>【CSS】父子元素margin-top重叠问题解决</title>
    <url>/margin-top-overlap-problem/</url>
    <content><![CDATA[<p><strong>问题代码：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span> <span class="attr">style</span>=<span class="string">"background:#eee;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span> <span class="attr">style</span>=<span class="string">"margin-top:50px;"</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>方法一：</strong> 父元素设置overflow:hidden</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span> <span class="attr">style</span>=<span class="string">"background:#eee;overflow:hidden;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span> <span class="attr">style</span>=<span class="string">"margin-top:50px;"</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>方法二：</strong> 父元素设置border-top</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span> <span class="attr">style</span>=<span class="string">"background:#eee;border-top:1px solid transparent;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span> <span class="attr">style</span>=<span class="string">"margin-top:50px;"</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>方法三：</strong> 父元素设置padding-top</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span> <span class="attr">style</span>=<span class="string">"background:#eee;padding-top:1px;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span> <span class="attr">style</span>=<span class="string">"margin-top:50px;"</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>方法四：</strong> 父子元素间增加一个inline元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"father"</span> <span class="attr">style</span>=<span class="string">"background:#eee;"</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"son"</span> <span class="attr">style</span>=<span class="string">"margin-top:50px;"</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>方法五：</strong> 内容生成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>win7桌面丢失/已使用临时配置登录</title>
    <url>/login-with-temp-profile-and-desktop-lost/</url>
    <content><![CDATA[<h4 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h4><ul>
<li>登录时，发现桌面图标都没了，和新的一样</li>
<li>系统右下角提示“已使用临时配置登录”<a id="more"></a>
<h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4></li>
<li>可能是用户配置文件损坏</li>
<li>系统异常</li>
</ul>
<h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><ul>
<li>administrator登录，开启注册表（regedit）</li>
<li>定位到:<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList</code></li>
<li>假设正确的profile是roubin，错误的是roubin_ME</li>
<li>通过ProfileImagePath，找到roubin_ME对应的SID</li>
<li>将此SID下的ProfileImagePath修改为roubin的档案文件夹路径（C:\Users\roubin）</li>
<li>到C:\Users下，删除roubin_ME使用者档案文件夹，Temp文件夹也可以一并删除</li>
<li>重启，再使用roubin登录，OK</li>
</ul>
<p>参考链接：</p>
<p><a href="http://blog.sina.com.cn/s/blog_49cea9d60100mjf3.html" target="_blank" rel="noopener">win7 您已使用临时配置文件登陆以及恢复的解决办法</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>win7</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】自定义image button组件</title>
    <url>/mini-program-custom-image-button/</url>
    <content><![CDATA[<h5 id="imageButtonCmp-wxml"><a href="#imageButtonCmp-wxml" class="headerlink" title="imageButtonCmp.wxml"></a>imageButtonCmp.wxml</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/image-button/imageButtonCmp.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bind:getuserinfo</span>=<span class="string">"onGetUserInfo"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">open-type</span>=<span class="string">'&#123;&#123;openType&#125;&#125;'</span>  <span class="attr">plain</span>=<span class="string">'&#123;&#123;true&#125;&#125;'</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"img"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="imageButtonCmp-wxss"><a href="#imageButtonCmp-wxss" class="headerlink" title="imageButtonCmp.wxss"></a>imageButtonCmp.wxss</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border</span>:none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="imageButtonCmp-js"><a href="#imageButtonCmp-js" class="headerlink" title="imageButtonCmp.js"></a>imageButtonCmp.js</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/image-button/imageButtonCmp.js</span></span><br><span class="line">Component(&#123;</span><br><span class="line">  options:&#123;</span><br><span class="line">    multipleSlots: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的属性列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  properties: &#123;</span><br><span class="line">    openType:&#123;</span><br><span class="line">      type: <span class="built_in">String</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  data: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的方法列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    onGetUserInfo(e)&#123;</span><br><span class="line">      <span class="keyword">this</span>.triggerEvent(<span class="string">'getuserinfo'</span>, e.detail, &#123;&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">v-button</span> <span class="attr">class</span>=<span class="string">"share-btn"</span> <span class="attr">open-type</span>=<span class="string">"share"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"share"</span> <span class="attr">slot</span>=<span class="string">"img"</span> <span class="attr">src</span>=<span class="string">"/images/icon/share.png"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">v-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">v-button</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;!authorized&#125;&#125;"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">class</span>=<span class="string">"avatar-position"</span> <span class="attr">bind:getuserinfo</span>=<span class="string">"onGetUserInfo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">slot</span>=<span class="string">"img"</span> <span class="attr">class</span>=<span class="string">"avatar"</span> <span class="attr">src</span>=<span class="string">"/images/my/my.png"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">v-button</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】HTTP封装与使用示例</title>
    <url>/mini-program-http-encapsulation/</url>
    <content><![CDATA[<h4 id="config-js"><a href="#config-js" class="headerlink" title="config.js"></a>config.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  api_base_url: <span class="string">'http://bl.7yue.pro/v1/'</span>,</span><br><span class="line">  appkey:<span class="string">'AbhC31IG7ruCDp57'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;config&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="一、callback封装："><a href="#一、callback封装：" class="headerlink" title="一、callback封装："></a>一、callback封装：</h3><h4 id="util-http-js"><a href="#util-http-js" class="headerlink" title="util/http.js"></a>util/http.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  config</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'../config.js'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> tips = &#123;</span><br><span class="line">  <span class="number">1</span>: <span class="string">'抱歉，出现了一个错误'</span>,</span><br><span class="line">  <span class="number">1007</span>: <span class="string">'url路径错误'</span>,</span><br><span class="line">  <span class="number">1005</span>: <span class="string">'不正确的开发者key'</span>,</span><br><span class="line">  <span class="number">3000</span>: <span class="string">'该期内容不存在'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTTP</span> </span>&#123;</span><br><span class="line">  request(params) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!params.method) &#123;</span><br><span class="line">      params.method = <span class="string">'GET'</span></span><br><span class="line">    &#125;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: config.api_base_url + params.url,</span><br><span class="line">      method: params.method,</span><br><span class="line">      data: params.data,</span><br><span class="line">      header: &#123;</span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'appkey'</span>: config.appkey</span><br><span class="line">      &#125;,</span><br><span class="line">      success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> code = res.statusCode.toString()</span><br><span class="line">        <span class="keyword">if</span> (code.startsWith(<span class="string">'2'</span>)) &#123;</span><br><span class="line">          params.success &amp;&amp; params.success(res.data)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> errorCode = res.data.error_code</span><br><span class="line">          <span class="keyword">this</span>._showError(errorCode)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>._showError(<span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _showError(errorCode) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!errorCode) &#123;</span><br><span class="line">      errorCode = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: tips[errorCode],</span><br><span class="line">      icon: <span class="string">'none'</span>,</span><br><span class="line">      duration: <span class="number">2000</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  HTTP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="models-classic-js"><a href="#models-classic-js" class="headerlink" title="models/classic.js"></a>models/classic.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HTTP &#125; <span class="keyword">from</span> <span class="string">'../util/http.js'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassicModel</span> <span class="keyword">extends</span> <span class="title">HTTP</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getLatest(callBack)&#123;</span><br><span class="line">    <span class="keyword">this</span>.request(&#123;</span><br><span class="line">      url:<span class="string">'classic/latest'</span>,</span><br><span class="line">      success:<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        callBack(data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;ClassicModel&#125;</span><br></pre></td></tr></table></figure>
<h4 id="models-like-js"><a href="#models-like-js" class="headerlink" title="models/like.js"></a>models/like.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HTTP &#125; <span class="keyword">from</span> <span class="string">'../util/http.js'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LikeModel</span> <span class="keyword">extends</span> <span class="title">HTTP</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  like(behavior, artId, type)&#123;</span><br><span class="line">    <span class="keyword">let</span> url = behavior == <span class="string">'like'</span> ? <span class="string">'like'</span> : <span class="string">'like/cancel'</span></span><br><span class="line">    <span class="keyword">this</span>.request(&#123;</span><br><span class="line">      url:url,</span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        art_id: artId,</span><br><span class="line">        type: type</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;LikeModel&#125;</span><br></pre></td></tr></table></figure>

<h4 id="page-classic-classic-js"><a href="#page-classic-classic-js" class="headerlink" title="page/classic/classic.js"></a>page/classic/classic.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;ClassicModel&#125; <span class="keyword">from</span> <span class="string">'../../models/classic.js'</span></span><br><span class="line"><span class="keyword">import</span> &#123;LikeModel&#125; <span class="keyword">from</span> <span class="string">'../../models/like.js'</span></span><br><span class="line"><span class="keyword">let</span> classicModel = <span class="keyword">new</span> ClassicModel()</span><br><span class="line"><span class="keyword">let</span> likeModel = <span class="keyword">new</span> LikeModel()</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  data: &#123;</span><br><span class="line">    classicData:<span class="literal">null</span>,</span><br><span class="line">    first:<span class="literal">false</span>,</span><br><span class="line">    last:<span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    classicModel.getLatest(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        classicData:data</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  handleLike (e) &#123;</span><br><span class="line">    <span class="keyword">let</span> behavior = e.detail.behavior</span><br><span class="line">    likeModel.like(behavior, <span class="keyword">this</span>.data.classicData.id, <span class="keyword">this</span>.data.classicData.type)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面初次渲染完成</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onReady: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面显示</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面隐藏</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onHide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onUnload: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面相关事件处理函数--监听用户下拉动作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onPullDownRefresh: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onReachBottom: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用户点击右上角分享</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onShareAppMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="二、Promise封装："><a href="#二、Promise封装：" class="headerlink" title="二、Promise封装："></a>二、Promise封装：</h3><h4 id="util-http-p-js"><a href="#util-http-p-js" class="headerlink" title="util/http-p.js"></a>util/http-p.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  config</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'../config.js'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> tips = &#123;</span><br><span class="line">  <span class="number">1</span>: <span class="string">'抱歉，出现了一个错误'</span>,</span><br><span class="line">  <span class="number">1007</span>: <span class="string">'url路径错误'</span>,</span><br><span class="line">  <span class="number">1005</span>: <span class="string">'不正确的开发者key'</span>,</span><br><span class="line">  <span class="number">3000</span>: <span class="string">'该期内容不存在'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTTP</span> </span>&#123;</span><br><span class="line">  request(&#123;url, data=&#123;&#125;, method=<span class="string">'GET'</span>&#125;)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">this</span>._request(url, resolve, reject, data, method)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _request(url, resolve, reject, data=&#123;&#125;, method=<span class="string">'GET'</span>) &#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: config.api_base_url + url,</span><br><span class="line">      method: method,</span><br><span class="line">      data: data,</span><br><span class="line">      header: &#123;</span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">        <span class="string">'appkey'</span>: config.appkey</span><br><span class="line">      &#125;,</span><br><span class="line">      success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> code = res.statusCode.toString()</span><br><span class="line">        <span class="keyword">if</span> (code.startsWith(<span class="string">'2'</span>)) &#123;</span><br><span class="line">          resolve(res.data)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          reject()</span><br><span class="line">          <span class="keyword">const</span> errorCode = res.data.error_code</span><br><span class="line">          <span class="keyword">this</span>._showError(errorCode)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject()</span><br><span class="line">        <span class="keyword">this</span>._showError(<span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _showError(errorCode) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!errorCode) &#123;</span><br><span class="line">      errorCode = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> tip = tips[errorCode]</span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: tip ? tip : tips[<span class="number">1</span>],</span><br><span class="line">      icon: <span class="string">'none'</span>,</span><br><span class="line">      duration: <span class="number">2000</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  HTTP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="models-book-js"><a href="#models-book-js" class="headerlink" title="models/book.js"></a>models/book.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HTTP &#125; <span class="keyword">from</span> <span class="string">'../util/http-p.js'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookModel</span> <span class="keyword">extends</span> <span class="title">HTTP</span> </span>&#123;</span><br><span class="line">	getHotList () &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.request(&#123;</span><br><span class="line">			url: <span class="string">'/book/hot_list'</span>,</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	getMyBookCount () &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.request(&#123;</span><br><span class="line">			url: <span class="string">'/book/favor/count'</span>,</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">	BookModel</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="book-book-js"><a href="#book-book-js" class="headerlink" title="book/book.js"></a>book/book.js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;BookModel&#125; <span class="keyword">from</span> <span class="string">'../../models/book.js'</span></span><br><span class="line"><span class="keyword">const</span> bookModel = <span class="keyword">new</span> BookModel()</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  data: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    bookModel.getHotList().then(<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】使用behavior封装search组件</title>
    <url>/mini-program-use-behavior-encapsulate-search-component/</url>
    <content><![CDATA[<p>behaviors 是用于组件间代码共享的特性，类似于一些编程语言中的“mixins”或“traits”。<br>每个 behavior 可以包含一组属性、数据、生命周期函数和方法，组件引用它时，它的属性、数据和方法会被合并到组件中，生命周期函数也会在对应时机被调用。每个组件可以引用多个 behavior 。 behavior 也可以引用其他 behavior<a id="more"></a></p>
<h5 id="pagination-js"><a href="#pagination-js" class="headerlink" title="pagination.js"></a>pagination.js</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> paginationBev = Behavior(&#123;</span><br><span class="line">	data:&#123;</span><br><span class="line">		dataArray:[],</span><br><span class="line">		total:<span class="literal">null</span>,</span><br><span class="line">		noneResult:<span class="literal">false</span>,</span><br><span class="line">		loading:<span class="literal">false</span></span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	methods:&#123;</span><br><span class="line">		setMoreData(dataArray)&#123;</span><br><span class="line">			<span class="keyword">const</span> tempArray = <span class="keyword">this</span>.data.dataArray.concat(dataArray)</span><br><span class="line">			<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">				dataArray:tempArray</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		getCurrentStart()&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.data.dataArray.length</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		setTotal(total)&#123;</span><br><span class="line">			<span class="keyword">this</span>.data.total = total</span><br><span class="line">			<span class="keyword">if</span> (total == <span class="number">0</span>)&#123;</span><br><span class="line">				<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">					noneResult:<span class="literal">true</span></span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		hasMore()&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">this</span>.data.dataArray.length &gt;= <span class="keyword">this</span>.data.total)&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">			&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		initialize()&#123;</span><br><span class="line">			<span class="comment">// this.data.dataArray = []</span></span><br><span class="line">			<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">				dataArray:[],</span><br><span class="line">				noneResult:<span class="literal">false</span>,</span><br><span class="line">				loading:<span class="literal">false</span></span><br><span class="line">			&#125;)</span><br><span class="line">			<span class="keyword">this</span>.data.total = <span class="literal">null</span></span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		isLocked()&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>.data.loading</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		locked()&#123;</span><br><span class="line">			<span class="comment">// this.data.loading = true</span></span><br><span class="line">			<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">				loading:<span class="literal">true</span></span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		unLocked()&#123;</span><br><span class="line">			<span class="comment">// this.data.loading = false</span></span><br><span class="line">			<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">				loading:<span class="literal">false</span></span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;paginationBev&#125;</span><br></pre></td></tr></table></figure>

<h5 id="searchCmp-js"><a href="#searchCmp-js" class="headerlink" title="searchCmp.js"></a>searchCmp.js</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/search/searchCmp.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; KeywordModel &#125; <span class="keyword">from</span> <span class="string">"../../models/keyword"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; BookModel &#125; <span class="keyword">from</span> <span class="string">"../../models/book"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; paginationBev &#125; <span class="keyword">from</span> <span class="string">"../behaviors/pagination"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keywordModel = <span class="keyword">new</span> KeywordModel()</span><br><span class="line"><span class="keyword">const</span> bookModel = <span class="keyword">new</span> BookModel()</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors:[paginationBev],</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的属性列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  properties: &#123;</span><br><span class="line">    more:&#123;</span><br><span class="line">      type:<span class="built_in">String</span>,</span><br><span class="line">      observer:<span class="string">'loadMore'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  data: &#123;</span><br><span class="line">    historyWords:[],</span><br><span class="line">    hotWords:[],</span><br><span class="line">    searching:<span class="literal">false</span>,</span><br><span class="line">    q:<span class="string">''</span>,</span><br><span class="line">    loadingCenter:<span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  attached()&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      historyWords: keywordModel.getHistory()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    keywordModel.getHot().then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        hotWords: res.hot</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的方法列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    onCancel(e)&#123;</span><br><span class="line">      <span class="keyword">this</span>.initialize()</span><br><span class="line">      <span class="keyword">this</span>.triggerEvent(<span class="string">'cancel'</span>,&#123;&#125;,&#123;&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    onConfirm(e)&#123;</span><br><span class="line">      <span class="keyword">this</span>._showResult()</span><br><span class="line">      <span class="keyword">this</span>._showLoadingCenter()</span><br><span class="line">      <span class="comment">// this.initialize()</span></span><br><span class="line">      <span class="keyword">const</span> q = e.detail.value || e.detail.text</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        q</span><br><span class="line">      &#125;)</span><br><span class="line">      bookModel.search(<span class="number">0</span>, q).then(<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.setMoreData(res.books)</span><br><span class="line">          <span class="keyword">this</span>.setTotal(res.total)</span><br><span class="line">          keywordModel.addToHistory(q)</span><br><span class="line">          <span class="keyword">this</span>._hideLoadingCenter()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    onDelete(e)&#123;</span><br><span class="line">      <span class="keyword">this</span>.initialize()</span><br><span class="line">      <span class="keyword">this</span>._closeResult()</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    loadMore()&#123;</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">this</span>.data.q)&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.isLocked())&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'load more'</span>)</span><br><span class="line">      <span class="comment">// const length = this.data.dataArray.length</span></span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.hasMore())&#123;</span><br><span class="line">        <span class="comment">// this.data.loading = true</span></span><br><span class="line">        <span class="keyword">this</span>.locked()</span><br><span class="line">        bookModel.search(<span class="keyword">this</span>.getCurrentStart(), <span class="keyword">this</span>.data.q).then(<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.setMoreData(res.books)</span><br><span class="line">          <span class="comment">// this.data.loading = false</span></span><br><span class="line">          <span class="keyword">this</span>.unLocked()</span><br><span class="line">        &#125;, ()=&gt;&#123;</span><br><span class="line">          <span class="keyword">this</span>.unLocked()</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _showResult()&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        searching: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _closeResult()&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        searching: <span class="literal">false</span>,</span><br><span class="line">        q:<span class="string">''</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _showLoadingCenter()&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        loadingCenter:<span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    _hideLoadingCenter()&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        loadingCenter:<span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】使用wxs解决文本替换与首行缩进</title>
    <url>/mini-program-use-wxs-solve-text-indent/</url>
    <content><![CDATA[<h4 id="一段文本缩进"><a href="#一段文本缩进" class="headerlink" title="一段文本缩进"></a>一段文本缩进</h4><p>text标签在小程序中默认为内联标签，如果单独设置 text-indent是无效的，需设置为块级/行内块元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span>;</span><br><span class="line"><span class="selector-tag">text-indent</span>: 58<span class="selector-tag">rpx</span>;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="多段文本换行与缩进"><a href="#多段文本换行与缩进" class="headerlink" title="多段文本换行与缩进"></a>多段文本换行与缩进</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wxs</span> <span class="attr">src</span>=<span class="string">"../../utils/filter.wxs"</span> <span class="attr">module</span>=<span class="string">"tools"</span>&gt;</span><span class="tag">&lt;/<span class="name">wxs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">"&#123;&#123;true&#125;&#125;"</span>&gt;</span>&#123;&#123;tools.format(多段文本的内容)&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">//decode译码解码</span><br></pre></td></tr></table></figure>

<p>filter.wxs:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> format = <span class="function"><span class="keyword">function</span> (<span class="params">text</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!text) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">var</span> reg = getRegExp(<span class="string">'\\\\n'</span>, <span class="string">'g'</span>)</span><br><span class="line">    <span class="keyword">return</span> text.replace(reg, <span class="string">'\n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    format: format</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>圆梦之旅 – 日本（一）攻略篇</title>
    <url>/japan-travel/</url>
    <content><![CDATA[<h2 id="梦起"><a href="#梦起" class="headerlink" title="梦起"></a>梦起</h2><p>记得小学有位语文老师，一次在课堂上和我们聊起她去日本旅行的经历，她拿中日两国作了个简单对比，至今让我印象深刻：“……如果你在中国的大马路上不小心摔了跤，回去定得把脏衣服换了洗了，而如果是在日本，你只需要站起身，继续走你的路就好，连拍一下都不用，因为衣服根本不会脏……如果你拎着一只崭新的皮包，在中国的大城市玩上一天，回去摸摸包，一般会发现上面有一层油腻，黏糊糊，擦都擦不干净，而如果是在日本，一天下来只会留下一层薄灰，用手一抹就没了……”<a id="more"></a></p>
<p>虽说有点崇洋媚外，但不得不承认，在当时，除却那些背负着沉重历史包袱的课本，我们这群小p孩对“近邻”的了解，只限于《机器猫》、《阿童木》、《圣斗士》这类引进的动画片，而这位老师，却给我们描绘了一个完全不一样的日本，一个真实的日本，在我们心中激起层层涟漪的同时，也埋下了梦想的种子：嗯，等我长大了，也要到日本去看看。</p>
<p>一晃二十载过去。</p>
<h2 id="梦圆"><a href="#梦圆" class="headerlink" title="梦圆"></a>梦圆</h2><p>某日看到一篇文章《人生的30个梦想》，颇有感慨，于是便依葫芦画瓢，思索起自己的梦想清单来，不曾想，脑中第一个闪过的，竟然是小时候那个只梦过区区几秒的愿望：去日本。难怪人们总说做完的事容易忘，而没做的会一直留在心底（类似心理学上的“未完成事件”）。恰逢正准备新婚蜜月游，于是和老婆一说，觉得日本不错，便付诸实施了。</p>
<h3 id="1-准备阶段"><a href="#1-准备阶段" class="headerlink" title="1.准备阶段"></a>1.准备阶段</h3><p><strong>a. 确定跟团 or 自由行：</strong>因为是第一次去，人生地不熟，所以选择了跟团，有童鞋担心跟团日程会比较紧，是的，但相对的，在节省了自己做攻略时间的同时，能去到更多的景点，而且避免了旅途中很多不必要的麻烦，所以如果对日本的风土人情不了解的话，第一次还是建议跟团，后续熟悉之后，我会更推荐自由行，当然，还有一种折中的方案，后面再说。</p>
<p><strong>b. 确定行程及线路：</strong>可以对比下网上几家大型旅行社往期赴日游线路，第一次去的话，旅行社一般都会推荐本州线6日/7日游（当然如果你特别想去北海道，就当我没说），然后你会发现，日本几个著名的城市/景点，基本都会被安排到，所以价格近似的情况下，内容相差不大，比如我这次的6日游行程（如下图），除了奈良，基本都走到了：</p>
<p><img src="../images/map.png" alt="map"></p>
<p>那么除去内容，差别会在什么地方呢？</p>
<p>一个是进出的城市，即落地和返程的地点。一般为（大）阪/西进东（京）出，或东进阪出，这都是比较推荐的走法，看上面图就懂了，不走回头路嘛；当然也有很多价格实惠的线路，落地在名古屋（中部机场），那么回头路就免不了了，名古屋到京都大概2h，名古屋到富士山是3h，其他城市间基本1~1.5h，你自己算算吧，反正当初我看到落地名古屋的线路，就直接无视了；有童鞋说落地茨城机场（小机场，成田机场再往北）怎么样？它到东京都内大概2h多点，我觉得价格/航班时间合适的话，可以考虑。</p>
<p>再一个就是航班起降的时间。这里就涉及到价格，正点的都贵，红眼便宜，然后记得要算上候机的时间，和航班延误的时间（老婆：就你乌鸦嘴）。因为我不喜欢红眼航班，所以当初就因为这个，砍掉了好多线路，最后选的是去程中午12点起飞，返程是晚上7点的航班，飞3h左右，感觉时间正合适。</p>
<p>最后一个是线路上有无安排自由行。就是上文提到的折中方案，一般安排一天自由行（也有2天的），即落地过来第二天，或返程前一天，城市多为东京或大阪（方便你买买买喽），具体出团书上都会写明。这样即兼顾了跟团的便利，又不失自由，是不错的选择，当然代价就是会略贵，原因嘛，你懂的。我还是推荐自由行一天放后面，毕竟前面几天玩下来，多少会熟悉点，如果一上来就自由行，那估计要懵圈。</p>
<p><strong>c. 确定预算花费：</strong>其实上文已经提到一部分，基础价格大家都差不多，因为几家旅行社都是从批发商那儿批来的线路，可以多咨询几家比较下。然后差的大的，一般就是档期、航班（上面说的落地点和时间），住宿，和吃饭。</p>
<p>档期的话，黄金周价格肯定会贵，然后赏樱一般在3月底<del>4月初，赏枫叶在10</del>11月间，赏富士山雪景最好要等11月后，比如我十一黄金周过后去的，价格便宜些，可惜富士山还没开始下雪，来到五合目一看，整一个煤渣山嘛，略失望；然后有条件，最好避开当地的节假日，出团书上也说了，当地人举家出游，旅馆到时会挤满。</p>
<p>住宿的话，我这6天下来感觉基础设施所有酒店都差不多，但空间和舒适度上，就明显不同了，一般酒店和上档次的温泉酒店，可以说天壤之别，所以这块儿最好提前问清楚。</p>
<p>吃饭基本是团餐，日式定食或者温泉酒店提供的套餐，后者稍微丰富点，因为自己本来口味就偏清淡，对吃也没什么要求，所以感觉日餐吃着还行。</p>
<p>费用上，我这次6日游含一天自由行，2人共计1W出头点（含保险和接送），多一个伊豆半岛，带2晚温泉酒店，航班时间也可以，仅供参考吧。</p>
<p><strong>d. 办理护照和签证：</strong>护照去公安局出入境中心办理就好，我用了不到一周；赴日签证也不难，具体可以咨询旅行社，每个旅行社会有细微的差别，因为它要为你做担保，但总体原则就是你收入越高，所需的材料就越少，且越容易办下来（但网上说单身女子赴日会直接被拒签？不知道真的假的）</p>
<p><strong>e. 兑换货币：</strong>国内各大银行柜面可换，在当地换的话，有手续费。因为日本很多大商店、免税店都可以直接刷银联卡，所以现金我换的不多，就兑了4W日元（约RMB 2500），最后还是在成田机场勉强花完了，带回来没用啊</p>
<p><strong>f. 租随身wifi：</strong>万能的淘宝一搜就有，挑一家买的人多的拍下，设备押金500元，日均开销在3<del>4元吧，充满电用一天，配合充电宝，续航更持久，如果你没有打电话的需求，那足够用了。wifi设备可以邮寄，也可以去自提，推荐还是自提吧，毕竟候机这么长时间，慢慢找好了，而且商铺位置也不难找，好多家都集中在那一块儿，当然，回来的时候记得先把wifi设备还掉，别因为急着赶车忘记啦</del></p>
<p><strong>g. 看攻略/代购：</strong>有空的话，最好事先看下攻略，方便对日后的行程有个大概了解，包括当地的一些习俗、风土人情，特别是购物，中国人过去基本就是“爆买”，那种争先恐后、你抢我夺的场景，可以让你的肾上腺素分分钟爆表，一点也不夸张，我们团里的上海大妈，都是一手臂一手臂的往购物车里扫货，看的我目瞪口呆。代购这块儿，亲戚同事同学朋友要的，出发前列张清单，查好国内的价格，日用品/化妆品的话，会比国内便宜很多；吃的/伴手礼建议最后一天回来在机场买，那里基本都有，还免税。最后的最后，一定记得给自己买点东西，不要像我这样“舍己为人”，唉，太湖的水，我的泪~~</p>
<h3 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2.注意事项"></a>2.注意事项</h3><p><strong>a. 护照不能丢：</strong>在国外护照就是身份证。丢了很麻烦，在日本补办一张护照要RMB 1W元（领队反复说了N遍），而且要折腾很久，另外享受免税商品，也要出示护照，丢了就没优惠，切记切记</p>
<p><strong>b. 调时差：</strong>日本比中国快一个小时，落地后记得把手表/手机拨快一小时，哦，现在手机都有按时区自动调整时间功能，那当我没说吧</p>
<p><strong>c. 关于语言：</strong>咳咳，先来讲个笑话吧，当然，这个笑话你一定听过。话说那天我和老婆来到银座著名的三越百货，想看下包包，于是清了清嗓子，操着我那口只有N3级别的日语，问门口一位导购小姐：“かばん売り场はどこですか？”，一边问一边还在脑中默念着日语的前后左右，想着后面好接她的话，此时，只见小姐淡定地看了我一眼，指指前面，用异常标准的普通话回道：“先僧，卖包的柜台就在呀里哦”，老婆瞬间就笑岔气了，唉，咱说好的日语对话呢</p>
<p>这个笑话告诉我们，日本一般的大商场，都配有中文导购，然后因为历史原因，很多店铺都是东北人过去开的，要么就是有中国留学生在店里打工的，再加上中日两国文字一脉相承，音近形似，所以不会日语，在日本基本不会有太大问题，当然，如果像我这样懂一点点的话，体验效果会更佳，呵呵</p>
<p><strong>d. 免税/退税：</strong>不要看到免税，就觉得会便宜，除非你买的多买的贵，不然真心退不了几个钱，而且大商城退税还要排队，耗时耗力；退完税，店员会把退税凭证叠好，粘在你护照后面，最后返程那天，出关要查验，完了会都撕掉</p>
<p><strong>e. 交通：</strong>日本是靠左行的。开始会有点不习惯，就像我，走在路上总在想自己应该靠哪边走。有次不知不觉就贴右道了，结果就逆行了，差点迎面撞上骑单车的日本小学生（嗯，日本行人和自行车是在一条道上，后面再细说），然后我赶紧让开，前方找个斑马线，匆匆走到对面道上去，挺尴尬的；至于电梯上的站位，左行右立，还是右行左立，我到现在也没搞清楚，因为大阪和东京就不同，一般我就跟着前面一位站吧。这次因为前期准备不充分，没能体验一把JR地铁，网上说在地铁站有针对外国游客的一日/三日通票，很划算，然后也可以买西瓜卡，可储值反复用的，下回去一定要试试；至于在日本打的士，费用会非常昂贵，不推荐。</p>
<p><strong>f. 就餐：</strong>日本不少餐馆是自助点餐的，门口一个机器，类似国内自动售货机，点选想吃的菜品（看不懂日文可以看图样），然后投入纸币/硬币，就会有餐券和找零吐出来，把餐券给里面店员，坐等就好了</p>
<p><strong>g. 找零：</strong>去日本的便利店（7+7、全家、罗森比较多）、超市购物，结账时记得把零钱放在收银台上的小盘子里，直接放台上是不礼貌的，然后店员也会把零钱用盘子端给你。一个追求效率的国度，每一处细节都如此用心。</p>
<p><strong>h. 行李：</strong>我们这次来回坐的都是ANA(全日空)的航班，允许每人携带2个单重不超过23kg的拉杆箱（即合计46kg）托运，并可手提一件不超过10kg的随身行李登机，随身行李尺寸也不能太大，其他航空公司类似。所以如果东西买的多，可以在当地买一个拉杆箱来放，感觉比国内便宜；然后农副产品，比如水果、鸡蛋等是不能带离日本的（我好想带几个苹果啊），只能提前吃掉，最后一天领队会让大家把行李都过秤的，所以不要太担心。</p>
<p>攻略部分就先写这么多吧，原本打算把后面6天的游玩见闻/照片也一起放上，但似乎太长了，还是分两篇说吧</p>
<p><em>老婆：开头挺文艺的，怎么写着写着成攻略了？？？</em></p>
]]></content>
      <categories>
        <category>旅行</category>
      </categories>
      <tags>
        <tag>日本</tag>
      </tags>
  </entry>
  <entry>
    <title>Morgan 和 Winston</title>
    <url>/morgan-winston/</url>
    <content><![CDATA[<h3 id="一、Morgan"><a href="#一、Morgan" class="headerlink" title="一、Morgan"></a>一、<a href="https://github.com/expressjs/morgan" target="_blank" rel="noopener">Morgan</a></h3><h4 id="1-使用"><a href="#1-使用" class="headerlink" title="1.使用"></a>1.使用</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">"morgan"</span>);</span><br><span class="line"><span class="keyword">const</span> Logger = <span class="built_in">require</span>(<span class="string">"../models/logger"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stream = &#123;</span><br><span class="line">  write: <span class="function">(<span class="params">message</span>) =&gt;</span> Logger.http(message),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> morganMiddleware = morgan(</span><br><span class="line">  <span class="string">":method :url :status :res[content-length] - :response-time ms"</span>,</span><br><span class="line">  &#123; stream &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = morganMiddleware;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用中间件</span></span><br><span class="line">app.use(morganMiddleware);</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="二、Winston"><a href="#二、Winston" class="headerlink" title="二、Winston"></a>二、<a href="https://github.com/winstonjs/winston" target="_blank" rel="noopener">Winston</a></h3><h4 id="1-使用-1"><a href="#1-使用-1" class="headerlink" title="1.使用"></a>1.使用</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> winston = <span class="built_in">require</span>(<span class="string">"winston"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isDevelopment = process.env.NODE_ENV === <span class="string">"development"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> levels = &#123;</span><br><span class="line">  error: <span class="number">0</span>,</span><br><span class="line">  warn: <span class="number">1</span>,</span><br><span class="line">  info: <span class="number">2</span>,</span><br><span class="line">  http: <span class="number">3</span>,</span><br><span class="line">  debug: <span class="number">4</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> colors = &#123;</span><br><span class="line">  error: <span class="string">"red"</span>,</span><br><span class="line">  warn: <span class="string">"yellow"</span>,</span><br><span class="line">  info: <span class="string">"green"</span>,</span><br><span class="line">  http: <span class="string">"magenta"</span>,</span><br><span class="line">  debug: <span class="string">"white"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">winston.addColors(colors);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> format = isDevelopment</span><br><span class="line">  ? winston.format.combine(</span><br><span class="line">      winston.format.timestamp(&#123; <span class="attr">format</span>: <span class="string">"YYYY-MM-DD HH:mm:ss:ms"</span> &#125;),</span><br><span class="line">      winston.format.colorize(&#123; <span class="attr">all</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">      winston.format.printf(</span><br><span class="line">        (info) =&gt; <span class="string">`<span class="subst">$&#123;info.timestamp&#125;</span> <span class="subst">$&#123;info.level&#125;</span>: <span class="subst">$&#123;info.message&#125;</span>`</span></span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  : winston.format.combine(</span><br><span class="line">      winston.format.timestamp(&#123; <span class="attr">format</span>: <span class="string">"YYYY-MM-DD HH:mm:ss:ms"</span> &#125;),</span><br><span class="line">      winston.format.printf(</span><br><span class="line">        (info) =&gt; <span class="string">`<span class="subst">$&#123;info.timestamp&#125;</span> <span class="subst">$&#123;info.level&#125;</span>: <span class="subst">$&#123;info.message&#125;</span>`</span></span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> transports = [<span class="keyword">new</span> winston.transports.Console()];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Logger = winston.createLogger(&#123;</span><br><span class="line">  level: <span class="string">"debug"</span>,</span><br><span class="line">  levels,</span><br><span class="line">  format,</span><br><span class="line">  transports,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = Logger;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6938741721308069895" target="_blank" rel="noopener">Nodejs日志系统指南</a></p>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>morgan</tag>
        <tag>winston</tag>
      </tags>
  </entry>
  <entry>
    <title>我的人生清单</title>
    <url>/my-life-list/</url>
    <content><![CDATA[<blockquote>
<p>左岸记：如何让生活不再平淡无奇，我的一位好朋友有一个秘诀，他为自己定了一个主题为“一生所愿”的清单，大清单的下面是子清单。比如“最想经历的人生体验”，“最狂野的心愿”，“最想见到的人”，“三年内希望做到的事”，“与自己的十年之约”，“希望尝试的职业”，“我能想到最浪漫的事”，“最想学习的技能”，“必须改掉的坏毛病”，“想为父母做的事”，“这辈子一定要去的地方”，“希望提升的能力”，“被铭刻的誓言”……他说，小时候以为自己是不会老去的彼得潘，长大后懂得了人生无常，世事变迁，更要懂得享受每一天，全心全意地投入生活，实现绚丽多彩的梦想。</p>
</blockquote>
<a id="more"></a>

<p>维基百科：<a href="https://en.wikipedia.org/wiki/List_of_hobbies" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/List_of_hobbies</a></p>
<h4 id="想去旅行的地方"><a href="#想去旅行的地方" class="headerlink" title="想去旅行的地方"></a>想去旅行的地方</h4><ul>
<li><del>日本</del></li>
<li>杭州</li>
<li>北京</li>
<li>大理</li>
<li>海南</li>
<li>厦门</li>
<li>大溪地</li>
<li>新加坡</li>
<li>欧洲</li>
<li>南极</li>
</ul>
<h4 id="想学会的技能"><a href="#想学会的技能" class="headerlink" title="想学会的技能"></a>想学会的技能</h4><ul>
<li><del>游泳</del></li>
<li>英语</li>
<li>日语</li>
<li>吹笛</li>
<li>厨艺</li>
<li>魔术</li>
<li>唱歌</li>
<li>练字</li>
<li>冥想</li>
<li>五子棋</li>
<li>投资</li>
<li>Photoshop</li>
<li>观星</li>
</ul>
<h4 id="想体验的美食"><a href="#想体验的美食" class="headerlink" title="想体验的美食"></a>想体验的美食</h4><ul>
<li>裕兴记三虾面</li>
<li>炒肉馅团子</li>
<li>潘玉麟糖粥</li>
<li>胥城奥灶面</li>
</ul>
<h4 id="想为家人做的事"><a href="#想为家人做的事" class="headerlink" title="想为家人做的事"></a>想为家人做的事</h4><ul>
<li>洗牙</li>
<li>体检</li>
<li>居住布置</li>
<li>保险</li>
<li>旅行</li>
<li>家族故事</li>
<li>家书</li>
</ul>
<h4 id="想经历的体验"><a href="#想经历的体验" class="headerlink" title="想经历的体验"></a>想经历的体验</h4><ul>
<li>吃遍苏城各大面馆</li>
<li>VR游戏</li>
<li>坐过山车</li>
<li>操作无人机</li>
<li>蹦极</li>
<li>公益志愿者</li>
<li>看日出日落</li>
<li>看极光</li>
<li>打破吉尼斯纪录</li>
</ul>
<h4 id="想养成的习惯"><a href="#想养成的习惯" class="headerlink" title="想养成的习惯"></a>想养成的习惯</h4><ul>
<li>阅读</li>
<li>出游</li>
<li>打球</li>
</ul>
<h4 id="想了解的城市"><a href="#想了解的城市" class="headerlink" title="想了解的城市"></a>想了解的城市</h4><ul>
<li>苏州</li>
</ul>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB 基础</title>
    <url>/mongodb-basic/</url>
    <content><![CDATA[<h3 id="一、Mac下安装与运行"><a href="#一、Mac下安装与运行" class="headerlink" title="一、Mac下安装与运行"></a>一、Mac下安装与运行</h3><h4 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h4><p><a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noopener">官方下载</a>， 解压下载的文件，无需安装，直接拷贝到 /usr/local 目录，然后重命名为 mongodb</p>
<h4 id="2-设置PATH"><a href="#2-设置PATH" class="headerlink" title="2.设置PATH"></a>2.设置PATH</h4><p>如果要使用 MongoDB 的命令行，需要添加一个环境变量，找到 .zshrc 文件，添加以下代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=/usr/local/mongodb/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>生效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="3-设置数据目录"><a href="#3-设置数据目录" class="headerlink" title="3.设置数据目录"></a>3.设置数据目录</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/local/var/mongodb //数据存放路径</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /usr/local/var/log/mongodb //日志文件路径</span><br></pre></td></tr></table></figure>

<h4 id="4-设置权限"><a href="#4-设置权限" class="headerlink" title="4.设置权限"></a>4.设置权限</h4><p>确保当前用户对以上两个目录有读写的权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown `你的用户名` /usr/local/var/mongodb</span><br><span class="line">sudo chown `你的用户名` /usr/local/var/log/mongodb</span><br></pre></td></tr></table></figure>

<h4 id="5-启动-MongoDB"><a href="#5-启动-MongoDB" class="headerlink" title="5.启动 MongoDB"></a>5.启动 MongoDB</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork</span><br><span class="line"></span><br><span class="line">--dbpath 设置数据存放目录</span><br><span class="line">--logpath 设置日志存放目录</span><br><span class="line">--fork 在后台运行</span><br></pre></td></tr></table></figure>

<h4 id="6-查看服务是否启动"><a href="#6-查看服务是否启动" class="headerlink" title="6.查看服务是否启动"></a>6.查看服务是否启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps aux | grep -v grep | grep mongod</span><br></pre></td></tr></table></figure>

<h4 id="7-开启命令行终端"><a href="#7-开启命令行终端" class="headerlink" title="7.开启命令行终端"></a>7.开启命令行终端</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure>

<h4 id="8-结束服务"><a href="#8-结束服务" class="headerlink" title="8.结束服务"></a>8.结束服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> use admin;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.shutdownServer();</span></span><br></pre></td></tr></table></figure>

<h3 id="二、Node使用-mongoose-操作-MongoDB"><a href="#二、Node使用-mongoose-操作-MongoDB" class="headerlink" title="二、Node使用 mongoose 操作 MongoDB"></a>二、Node使用 mongoose 操作 MongoDB</h3><h4 id="1-连接db"><a href="#1-连接db" class="headerlink" title="1.连接db"></a>1.连接db</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</span><br><span class="line">mongoose.connect(<span class="string">'mongodb://localhost:27017/test'</span>, &#123; <span class="attr">useNewUrlParser</span>: <span class="literal">true</span>, <span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>&#125;);</span><br><span class="line"><span class="keyword">const</span> db = mongoose.connection;</span><br><span class="line">db.on(<span class="string">'error'</span>, <span class="built_in">console</span>.error.bind(<span class="built_in">console</span>, <span class="string">'connection error:'</span>));</span><br><span class="line">db.once(<span class="string">'open'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"DB Connected"</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="2-使用-Schema-和-model-建立-document"><a href="#2-使用-Schema-和-model-建立-document" class="headerlink" title="2.使用 Schema 和 model 建立 document"></a>2.使用 Schema 和 model 建立 document</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> loginSchema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">    username:<span class="built_in">String</span>,</span><br><span class="line">    password:<span class="built_in">String</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> login = db.model(<span class="string">"login"</span>,loginSchema,<span class="string">"login"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">createUser</span>(<span class="params">username,password</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">new</span> login(&#123;username, password&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> user.save().then(<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"create user done"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createUser(<span class="string">'bill'</span>, <span class="string">'1234'</span>);</span><br></pre></td></tr></table></figure>

<h4 id="2-搜索"><a href="#2-搜索" class="headerlink" title="2.搜索"></a>2.搜索</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> query = &#123;<span class="attr">id</span>:<span class="string">'xxx'</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> blogList.find(query);</span><br></pre></td></tr></table></figure>

<h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> query = &#123;<span class="attr">id</span>:<span class="string">'xxx'</span>&#125;;</span><br><span class="line"><span class="keyword">await</span> blogList.remove(query);</span><br></pre></td></tr></table></figure>


<p>参考文章：</p>
<p><a href="https://cloud.tencent.com/developer/article/1770288" target="_blank" rel="noopener">Mac OSX 平台 MongoDB 的安装及管理</a></p>
]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>人生小传--Helpdesk到底该如何转型</title>
    <url>/my-life-the-transformation-of-helpdesk/</url>
    <content><![CDATA[<p>Helpdesk到底该如何转型？这也是一个老生常谈的话题了，经常看到有坛友发文讨论，比如adamzhanglei前辈的 <a href="http://bbs.51cto.com/thread-1116210-1.html" target="_blank" rel="noopener">《Helpdesk岗位之我思和我想》</a> ,看完觉得正能量满满，颇有道理。作为一名helpdesk新手，虽然公司同事都把我们当做professional的存在，但我深知，自己从事的是IT领域最入门级的job，在把现有技术都掌握全面后，就应该考虑转型之路，毕竟不希望将来自己到而立之年，还在修电脑、掐网线、设备上架什么（记得老男孩的年薪30W视频里说：30岁后还在干这种活儿的，就是告诉别人‘hey, I’m a loser’），但每个ITer的情况都不同，文章看得再多，也不一定能寻到完全适合自己的“华丽转身”方式，万一转错方向，再回头，可能就N年过去了。<br>    所以2015新的一年，决定要三省吾身：一省过去，回顾自己犯下的种种错误，其实也是很多人容易犯的，分享出来，希望能给像我这样的IT新手以借鉴；二省当下，阐释现状，总结自己的long &amp; short；三省未来，说说自己的想法和将来的打算，同时更希望IT老鸟们作为过来人，能就我的情况，给一些指导</p>
<h3 id="一、省过去"><a href="#一、省过去" class="headerlink" title="一、省过去"></a>一、省过去</h3><h4 id="大学：怀揣梦想，但年少无知"><a href="#大学：怀揣梦想，但年少无知" class="headerlink" title="大学：怀揣梦想，但年少无知"></a>大学：怀揣梦想，但年少无知</h4><p>11年本科毕业，大学主专业和IT完全不沾边。刚入学时，和很多年轻学子一样，意气风发，踌躇满志，憧憬着美好未来，以为高考成功就是人生赢家，却不知，这只是错误的开始。当时按照父母意愿，选了一个他们认为前景不错，但实际自己没什么兴趣的专业，可惜自己那会儿什么都不懂，也就答应了。<strong>选错专业是我人生一大错</strong>，这种方向性的错误，往往就像拿着一张错版地图，纵使后续你再努力，也不过是更快到达一个错误的地方。<br>      也许有坛友要反驳：“专业算什么，现在70%应届生找到的job，都是专业不对口的，还有北大出来卖肉的呢”，抛开极个例不谈，其实这里面还有社会层面的原因，中国高等教育这种供非所求、产学脱节，已是有目共睹，而这些是我们个人无法改变的。Bill Gates说过“你的兴趣里藏着你人生成功的秘密”，所以，开始能选择一个自己真正感兴趣的专业，以一个好的开端，配合后续的努力，不是更容易成功吗？<br>      大学里有这样三类人：一类谓之大“学”者，一类谓之大“玩”者，而鄙人就是那第三类人，既没学好也没玩好的人。开始的两年，浑浑噩噩，毫无目的，偶尔做个兼职，自认为过的很惬意，实则荒废青春。看很多坛友帖子里，也谈到了大学有类似的一个时期，个人认为，除了主观的迷失导致的懈怠，外部环境也有关系。中国大学这种严进宽出的体制，必然会导致很多高考过来的学生，无法及时调节心态，导致过分放松，迷失自我，再加上学校不重视职业规划引导，如果学生没有很强的自律，后续4年就是放羊的生活，而这种教育体制问题，也不是个人能改变的。<strong>荒废了大半的学习时光，这是我第二个错误</strong>。<br>      本来就对专业没兴趣，又荒废时间，错上加错的我，发现不能再这样继续，怎么办？和学长们交流了下，说最近学校正好允许报副专业，可以试试，于是我报考了喜欢的计算机（一入IT深似海，从此学妹是路人，呵呵），其实主专业的就业前景也不明朗，修副专业就是希望能挽回下。到这里又不得不吐槽中国教育了（原谅我苦大仇深），学校开出的那些个副专业、自考、成教，包括在职研究生等，美其名曰是为学有余力、希望继续深造的同学提供机会，实则就是金钱换文凭，为学校牟利，真正教学环节的投入，其实相当有限。我的计算机副专业，大家能想象吗，学java、ASP，从头到尾没安排过实验，没碰过电脑，纯书本教学，2个月后直接考试，还好课后自己尝试做实验，不然等于没学。就这样又是两年</p>
<h4 id="第一份工作：忙碌充实，但做的太久"><a href="#第一份工作：忙碌充实，但做的太久" class="headerlink" title="第一份工作：忙碌充实，但做的太久"></a>第一份工作：忙碌充实，但做的太久</h4><p>靠着计算机副专业，毕业进了一家中小企业，从事的是电脑硬件测试，门槛不高，月薪3K不到，一干就是三年。开始的两年还是很充实的，不断有新的技术要学，要看全英文的测试文档，遵守严谨细致的标准化流程，虽然每天schedule都压很紧，但现在回想，那一时期，电脑硬件方面技术掌握得很全面。<br>       后来调到售后，做ITSupport，会和北美、欧洲、日韩等地客户间接接触，协助解决问题。所以这一年，英文经常用，没落下，同时，对客户这类群体有了基本的认识，最直接的感触就是：对待国内客户，更需要耐心，而对待国外客户，更需要专业。因为大部分国内客户更趋向于一种感性消费，即对自己要买的东西，有什么样的function，是否真正满足自身需求等，不是很清楚，即使自己不懂不会，也不愿翻下user guide，他嫌烦，故一旦出问题，就不分青红皂白投诉。记得那会儿BOSS说最多的话就是：“要把客户当傻子看，不是每个客户都像我们这样了解产品的”，于是私下大家都半开玩笑说：“还是把用户手册改成连环画吧，至少傻子能看懂”，所以对待这样的客户，你要少了耐心行吗？<br>       形成鲜明对比的是，国外客户就专业很多，这段时间我接触到的linux、windows server和网络，就是因为国外的case。老外的IT素养普遍较高，也是国外教育比较重视这块儿的原因吧，比如个人用linux的就不在少数（什么？你说买不起正版windows？呵呵），所以这期间自己也去学了个RHCE，个人观点是：在日常工作中学习积累，是提升自我的最高效途径，只可惜这样的机会，不是很多。<br>       其实在一年前，公司的业绩就开始走下坡路，行业不景气，市场萎靡不振，从自己的奖金也能看出，但一种安于现状的心态，一直控制着自己，不想折腾。直到身边很多同事都陆续离职了，才想到该主动改变了，但蓦然回首，发现自己真的原地踏步太久，很多东西只是泛泛接触，根本不精，没有积累到真正有价值的技术。就像《谁动了我的奶酪》一书中所说</p>
<blockquote>
<p>其实奶酪每天都在减少，只是你没有好好观察，而当它消失的时候，你又不愿接受事实，不愿做出改变，</p>
</blockquote>
<p> 没错，那就是当时的我，<strong>安于现状，对存在的危机熟视无睹，不愿寻求变革，这是我第三个错误</strong>。</p>
<p>对自己过去的反省就到这里，三个错误分享的用意，是希望同学们/职场新人能从我的经历中吸取教训，引以为戒。</p>
<h3 id="二、省当下"><a href="#二、省当下" class="headerlink" title="二、省当下"></a>二、省当下</h3><h4 id="第二份工作：积极学习，但迷茫不安"><a href="#第二份工作：积极学习，但迷茫不安" class="headerlink" title="第二份工作：积极学习，但迷茫不安"></a>第二份工作：积极学习，但迷茫不安</h4><p>目前是在苏州的一家大型企业做helpdesk（甲方），月薪5K，做了也快半年了，表面说是负责系统和网络工作，实际最多的是装机、掐网线、配打印机，很难得的机会才会允许配下交换机，AD server之类根本不让碰（因为老员工都包了），剩下的就是各种打杂，什么笔记本屏幕太暗不会调，要找我（吐槽：现在的女生已经不能用小白来形容了，根本就是NC）；插座没电了，要找我；打印机卡纸了，也要找我……为了不至于把时间都浪费在这些杂事上，一有空，我就会想方设法多看些书，学点东西，目前是有在继续学cisco和Linux的内容，以此为两个大方向，希望未来能拓展自己的职业道路，同时，对工作中遇到的问题，仔细钻研，通过学一些自己感兴趣的额外技术（比如自学脚本编程、自动化运维），来全面掌握并充实自己的技能储备。<br>       甲方的工作相对没什么压力，但这样的安逸也催生出了一丝不安和迷茫。拜读了kemyang888前辈的 <a href="http://bbs.51cto.com/thread-1138648-1.html" target="_blank" rel="noopener">【我的2014】 12年IT有悲有喜</a> 一文，说到“能不做甲方运维就尽量不做，一定要做和公司核心业务相关的工作（比如业务信息化）”，这样的经验之谈，我觉得非常正确，如此初级的重复劳动，技能得不到积累，同时，无法接触公司核心业务，意味着永远在边缘徘徊，不受重视，待遇职位得不到提升。想想不禁又替自己的前途担忧，到底是再待下去（父母总说这样稳定安逸的工作不好找）呢？还是找合适时机早日转型？</p>
<h3 id="三、省未来"><a href="#三、省未来" class="headerlink" title="三、省未来"></a>三、省未来</h3><p>纵观自己这几年来的职业发展历程，其实并没有什么值得称道的经历，但依旧希望在挨踢的道路上继续走下去，走出自己的人生。只是目前又遇到瓶颈，陷入了迷茫，归纳起来，主要是如下三个问题：</p>
<p>1.如何有效提升自己的技能？特别是像我这种helpdesk，很多东西不让碰，学习有限，整天打杂，除了自学（或者考证），没有其他更高效的途径，而自学往往脱离生产环境，缺乏解决实际问题的能力和经验。有考虑过尝试一些IT兼职，这样可以多接触些东西，但目前还没开始，希望有经验的前辈给些意见<br>2.后续该选择甲方还是乙方？甲方目前给我的感觉是比较安逸，但能学到的不多；乙方能接触很多，比较锻炼人，但相对压力大，需经常出差（个人不是很喜欢出差）。当然这都只是自己很有限的观察，希望有经验的前辈给些意见<br>3.该往哪个方向转型？网络和Linux我都有接触，但目前水平还比较初级，而且对这两个行业现状，不是很清楚。曾经遇到过一个CCIE，说到他这样的已经见顶了，搞网络没前途。如果是linux运维，后续还可以往开发、架构或DBA转，似乎出路较多。如果选定了一个发展，后续自己应该就会主攻这个方向，所以希望有经验的前辈给些意见</p>
<p><em>有感而发之作，写的虎头蛇尾了，希望大家见谅哈！最后祝大家新年快乐，心想事成！</em></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>人生小传</tag>
      </tags>
  </entry>
  <entry>
    <title>Nestjs 使用 mongoose 连接 mongodb</title>
    <url>/nest-connect-mongodb-using-mongoose/</url>
    <content><![CDATA[<h5 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install mongoose @nestjs/mongoose --save</span><br><span class="line">npm install @types/mongoose --save-dev</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-在app-module-ts-中引入-Mongoose-的连接模块"><a href="#2-在app-module-ts-中引入-Mongoose-的连接模块" class="headerlink" title="2.在app.module.ts 中引入 Mongoose 的连接模块"></a>2.在app.module.ts 中引入 Mongoose 的连接模块</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MongooseModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/mongoose'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppController &#125; <span class="keyword">from</span> <span class="string">'./app.controller'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppService &#125; <span class="keyword">from</span> <span class="string">'./app.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; UserModule &#125; <span class="keyword">from</span> <span class="string">'./server/user/user.module'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  imports: [MongooseModule.forRoot(<span class="string">'mongodb://localhost/test'</span>), UserModule],</span><br><span class="line">  controllers: [AppController],</span><br><span class="line">  providers: [AppService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppModule &#123;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-创建schema，定义数据表的格式"><a href="#3-创建schema，定义数据表的格式" class="headerlink" title="3.创建schema，定义数据表的格式"></a>3.创建schema，定义数据表的格式</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// user.schema.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Schema &#125; <span class="keyword">from</span> <span class="string">'mongoose'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> userSchema = <span class="keyword">new</span> Schema(&#123;</span><br><span class="line">  _id: &#123; <span class="keyword">type</span>: <span class="built_in">String</span>, required: <span class="literal">true</span> &#125;,</span><br><span class="line">  user_name: &#123; <span class="keyword">type</span>: <span class="built_in">String</span>, required: <span class="literal">true</span> &#125;,</span><br><span class="line">  password: &#123; <span class="keyword">type</span>: <span class="built_in">String</span>, required: <span class="literal">true</span> &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h5 id="4-定义interface"><a href="#4-定义interface" class="headerlink" title="4.定义interface"></a>4.定义interface</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Document &#125; <span class="keyword">from</span> <span class="string">'mongoose'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> User <span class="keyword">extends</span> Document &#123;</span><br><span class="line">  readonly _id: <span class="built_in">string</span>;</span><br><span class="line">  readonly user_name: <span class="built_in">string</span>;</span><br><span class="line">  readonly password: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-修改userModule"><a href="#5-修改userModule" class="headerlink" title="5.修改userModule"></a>5.修改userModule</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// user.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MongooseModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/mongoose'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; UserController &#125; <span class="keyword">from</span> <span class="string">'./user.controller'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; UserService &#125; <span class="keyword">from</span> <span class="string">'./user.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; userSchema &#125; <span class="keyword">from</span> <span class="string">'./user.schema'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  imports: [MongooseModule.forFeature([&#123; name: <span class="string">'Users'</span>, schema: userSchema &#125;])],</span><br><span class="line">  controllers: [UserController],</span><br><span class="line">  providers: [UserService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserModule &#123;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="6-创建userService"><a href="#6-创建userService" class="headerlink" title="6.创建userService"></a>6.创建userService</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// user.service.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InjectModel &#125; <span class="keyword">from</span> <span class="string">'@nestjs/mongoose'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Model &#125; <span class="keyword">from</span> <span class="string">'mongoose'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CreateUserDTO, EditUserDTO &#125; <span class="keyword">from</span> <span class="string">'./user.dto'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; User &#125; <span class="keyword">from</span> <span class="string">'./user.interface'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserService &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="meta">@InjectModel</span>(<span class="string">'Users'</span>) <span class="keyword">private</span> readonly userModel: Model&lt;User&gt;</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 查找所有用户 */</span></span><br><span class="line">  <span class="keyword">async</span> findAll(): <span class="built_in">Promise</span>&lt;User[]&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.userModel.find();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 查找单个用户 */</span></span><br><span class="line">  <span class="keyword">async</span> findOne(_id: <span class="built_in">string</span>): <span class="built_in">Promise</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.userModel.findById(_id);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 添加单个用户 */</span></span><br><span class="line">  <span class="keyword">async</span> addOne(body: CreateUserDTO): <span class="built_in">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userModel.create(body);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 编辑单个用户 */</span></span><br><span class="line">  <span class="keyword">async</span> editOne(_id: <span class="built_in">string</span>, body: EditUserDTO): <span class="built_in">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userModel.findByIdAndUpdate(_id, body);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** 删除单个用户 */</span></span><br><span class="line">  <span class="keyword">async</span> deleteOne(_id: <span class="built_in">string</span>): <span class="built_in">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userModel.findByIdAndDelete(_id);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="7-配置userController"><a href="#7-配置userController" class="headerlink" title="7.配置userController"></a>7.配置userController</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Controller,</span><br><span class="line">  Body,</span><br><span class="line">  Delete,</span><br><span class="line">  Get,</span><br><span class="line">  Param,</span><br><span class="line">  Post,</span><br><span class="line">  Put,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CreateUserDTO, EditUserDTO &#125; <span class="keyword">from</span> <span class="string">'./user.dto'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; User &#125; <span class="keyword">from</span> <span class="string">'./user.interface'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; UserService &#125; <span class="keyword">from</span> <span class="string">'./user.service'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> UserResponse&lt;T = unknown&gt; &#123;</span><br><span class="line">  code: <span class="built_in">number</span>;</span><br><span class="line">  data?: T;</span><br><span class="line">  message: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">'user'</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> UserController &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> readonly userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">'users'</span>)</span><br><span class="line">  <span class="keyword">async</span> findAll(): <span class="built_in">Promise</span>&lt;UserResponse&lt;User[]&gt;&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      code: <span class="number">200</span>,</span><br><span class="line">      data: <span class="keyword">await</span> <span class="keyword">this</span>.userService.findAll(),</span><br><span class="line">      message: <span class="string">'success'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>(<span class="string">':_id'</span>)</span><br><span class="line">  <span class="keyword">async</span> findOne(<span class="meta">@Param</span>(<span class="string">'_id'</span>) _id: <span class="built_in">string</span>): <span class="built_in">Promise</span>&lt;UserResponse&lt;User&gt;&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      code: <span class="number">200</span>,</span><br><span class="line">      data: <span class="keyword">await</span> <span class="keyword">this</span>.userService.findOne(_id),</span><br><span class="line">      message: <span class="string">'success'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Post</span>()</span><br><span class="line">  <span class="keyword">async</span> addOne(<span class="meta">@Body</span>() body: CreateUserDTO): <span class="built_in">Promise</span>&lt;UserResponse&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userService.addOne(body);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      code: <span class="number">200</span>,</span><br><span class="line">      message: <span class="string">'success'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Put</span>(<span class="string">':_id'</span>)</span><br><span class="line">  <span class="keyword">async</span> editOne(</span><br><span class="line">    <span class="meta">@Param</span>(<span class="string">'_id'</span>) _id: <span class="built_in">string</span>,</span><br><span class="line">    <span class="meta">@Body</span>() body: EditUserDTO,</span><br><span class="line">  ): <span class="built_in">Promise</span>&lt;UserResponse&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userService.editOne(_id, body);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      code: <span class="number">200</span>,</span><br><span class="line">      message: <span class="string">'Success.'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Delete</span>(<span class="string">':_id'</span>)</span><br><span class="line">  <span class="keyword">async</span> deleteOne(<span class="meta">@Param</span>(<span class="string">'_id'</span>) _id: <span class="built_in">string</span>): <span class="built_in">Promise</span>&lt;UserResponse&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.userService.deleteOne(_id);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      code: <span class="number">200</span>,</span><br><span class="line">      message: <span class="string">'Success.'</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6885751452015263758" target="_blank" rel="noopener">写给前端的 Nest.js 教程——10分钟上手后端接口开发</a></p>
<p><a href="https://docs.nestjs.com/techniques/mongodb" target="_blank" rel="noopener">Nestjs-Mongo</a></p>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-build-a-blog-with-nest-js-mongodb-and-vue-js" target="_blank" rel="noopener">How To Build a Blog with Nest.js, MongoDB, and Vue.js</a></p>
]]></content>
      <categories>
        <category>Nest.js</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
        <tag>nestjs</tag>
      </tags>
  </entry>
  <entry>
    <title>Nestjs 使用 TypeORM 连接 mysql</title>
    <url>/nest-connect-mysql-using-typeorm/</url>
    <content><![CDATA[<h5 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save @nestjs/typeorm typeorm mysql2</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-在app-module-ts-中引入-MySQL-的连接模块"><a href="#2-在app-module-ts-中引入-MySQL-的连接模块" class="headerlink" title="2.在app.module.ts 中引入 MySQL 的连接模块"></a>2.在app.module.ts 中引入 MySQL 的连接模块</h5><p>方法：1</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppController &#125; <span class="keyword">from</span> <span class="string">'./app.controller'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppService &#125; <span class="keyword">from</span> <span class="string">'./app.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ArticleModule &#125; <span class="keyword">from</span> <span class="string">'./modules/article/article.module'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypeOrmModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/typeorm'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    <span class="comment">// 使用 TypeORM 配置数据库</span></span><br><span class="line">    TypeOrmModule.forRoot(&#123;</span><br><span class="line">      <span class="keyword">type</span>: <span class="string">'mysql'</span>,</span><br><span class="line">      host: <span class="string">'localhost'</span>,</span><br><span class="line">      port: <span class="number">3306</span>,</span><br><span class="line">      username: <span class="string">'root'</span>,</span><br><span class="line">      password: <span class="string">'root'</span>,</span><br><span class="line">      database: <span class="string">'test'</span>,</span><br><span class="line">      entities: [<span class="string">"dist/modules/**/*.entity&#123;.ts,.js&#125;"</span>],</span><br><span class="line">      synchronize: <span class="literal">true</span>, <span class="comment">//生产环境不要使用</span></span><br><span class="line">    &#125;),</span><br><span class="line">    ArticleModule</span><br><span class="line">  ],</span><br><span class="line">  controllers: [AppController],</span><br><span class="line">  providers: [AppService],</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppModule &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>方法：2<br>在根目录创建ormconfig.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"mysql"</span>,</span><br><span class="line">  <span class="attr">"host"</span>: <span class="string">"localhost"</span>,</span><br><span class="line">  <span class="attr">"port"</span>: <span class="number">3306</span>,</span><br><span class="line">  <span class="attr">"username"</span>: <span class="string">"root"</span>,</span><br><span class="line">  <span class="attr">"password"</span>: <span class="string">"root"</span>,</span><br><span class="line">  <span class="attr">"database"</span>: <span class="string">"test"</span>,</span><br><span class="line">  <span class="attr">"entities"</span>: [<span class="string">"dist/modules/**/*.entity&#123;.ts,.js&#125;"</span>],</span><br><span class="line">  <span class="attr">"synchronize"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypeOrmModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/typeorm'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    imports: [TypeOrmModule.forRoot()],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppModule &#123;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-创建实体-Entity"><a href="#3-创建实体-Entity" class="headerlink" title="3.创建实体 Entity"></a>3.创建实体 Entity</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; </span><br><span class="line">  Entity, </span><br><span class="line">  Column, </span><br><span class="line">  PrimaryGeneratedColumn, </span><br><span class="line">  UpdateDateColumn,</span><br><span class="line">  CreateDateColumn,</span><br><span class="line">  VersionColumn,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> Article &#123;</span><br><span class="line">    <span class="comment">// 主键id</span></span><br><span class="line">    <span class="meta">@PrimaryGeneratedColumn</span>()</span><br><span class="line">    id: <span class="built_in">number</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 创建时间</span></span><br><span class="line">    <span class="meta">@CreateDateColumn</span>()</span><br><span class="line">    createTime: <span class="built_in">Date</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 更新时间</span></span><br><span class="line">    <span class="meta">@UpdateDateColumn</span>()</span><br><span class="line">    updateTime: <span class="built_in">Date</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 软删除</span></span><br><span class="line">    <span class="meta">@Column</span>(&#123;</span><br><span class="line">      <span class="keyword">default</span>: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">    isDelete: <span class="built_in">boolean</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 更新次数</span></span><br><span class="line">    <span class="meta">@VersionColumn</span>()</span><br><span class="line">    version: <span class="built_in">number</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 文章标题</span></span><br><span class="line">    <span class="meta">@Column</span>(<span class="string">'text'</span>)</span><br><span class="line">    title: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文章描述</span></span><br><span class="line">    <span class="meta">@Column</span>(<span class="string">'text'</span>)</span><br><span class="line">    description: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文章内容</span></span><br><span class="line">    <span class="meta">@Column</span>(<span class="string">'text'</span>)</span><br><span class="line">    content: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-在article-module中声明repository"><a href="#4-在article-module中声明repository" class="headerlink" title="4.在article.module中声明repository"></a>4.在article.module中声明repository</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// article.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Module &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ArticleService &#125; <span class="keyword">from</span> <span class="string">'./article.service'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ArticleController &#125; <span class="keyword">from</span> <span class="string">'./article.controller'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Article &#125; <span class="keyword">from</span> <span class="string">'./entity/article.entity'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TypeOrmModule &#125; <span class="keyword">from</span> <span class="string">'@nestjs/typeorm'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  imports: [</span><br><span class="line">    TypeOrmModule.forFeature([Article]),</span><br><span class="line">  ],</span><br><span class="line">  providers: [ArticleService],</span><br><span class="line">  controllers: [ArticleController]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ArticleModule &#123;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-在article-service中注入repository"><a href="#5-在article-service中注入repository" class="headerlink" title="5.在article.service中注入repository"></a>5.在article.service中注入repository</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// article.service.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; Injectable &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; InjectRepository &#125; <span class="keyword">from</span> <span class="string">'@nestjs/typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Repository &#125; <span class="keyword">from</span> <span class="string">'typeorm'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Article &#125; <span class="keyword">from</span> <span class="string">'./entity/article.entity'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ArticleService &#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">        <span class="meta">@InjectRepository</span>(Article)</span></span><br><span class="line"><span class="params">        <span class="keyword">private</span> articleRepository: Repository&lt;Article&gt;,</span></span><br><span class="line"><span class="params">    </span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> findAll(): <span class="built_in">Promise</span>&lt;User[]&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.articleRepository.find();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://docs.nestjs.com/techniques/database#typeorm-integration" target="_blank" rel="noopener">Nestjs-Database</a></p>
<p><a href="https://juejin.cn/post/6992097780487929870" target="_blank" rel="noopener">使用TypeORM+Mysql实现数据持久化</a></p>
]]></content>
      <categories>
        <category>Nest.js</category>
      </categories>
      <tags>
        <tag>nestjs</tag>
        <tag>typeorm</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Nestjs 使用拦截器、异常过滤器统一response格式</title>
    <url>/nest-format-response/</url>
    <content><![CDATA[<p>格式举例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 成功返回</span></span><br><span class="line">&#123;</span><br><span class="line">  code: <span class="number">200</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="comment">// 详情类</span></span><br><span class="line">    info: &#123; </span><br><span class="line">      <span class="comment">// 返回数据</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 列表类</span></span><br><span class="line">    list: [],</span><br><span class="line"></span><br><span class="line">    pagination: &#123;</span><br><span class="line">      total: <span class="number">100</span>,</span><br><span class="line">      pageSize: <span class="number">10</span>,</span><br><span class="line">      pages: <span class="number">10</span>,</span><br><span class="line">      page: <span class="number">1</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  message: <span class="string">"请求成功"</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 失败返回</span></span><br><span class="line">&#123;</span><br><span class="line">  code: <span class="number">400</span>,</span><br><span class="line">  message: <span class="string">"查询失败"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="1-创建拦截器，统一成功返回的response格式"><a href="#1-创建拦截器，统一成功返回的response格式" class="headerlink" title="1.创建拦截器，统一成功返回的response格式"></a>1.创建拦截器，统一成功返回的response格式</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nest g in transform interceptor</span><br></pre></td></tr></table></figure>

<h5 id="2-拦截器代码"><a href="#2-拦截器代码" class="headerlink" title="2.拦截器代码"></a>2.拦截器代码</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/interception/transform.interception.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  CallHandler,</span><br><span class="line">  ExecutionContext,</span><br><span class="line">  Injectable,</span><br><span class="line">  NestInterceptor,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Observable &#125; <span class="keyword">from</span> <span class="string">'rxjs'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map &#125; <span class="keyword">from</span> <span class="string">'rxjs/operators'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> TransformInterceptor <span class="keyword">implements</span> NestInterceptor &#123;</span><br><span class="line">  intercept(context: ExecutionContext, next: CallHandler): Observable&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> next.handle().pipe(</span><br><span class="line">      map(<span class="function">(<span class="params">data</span>) =&gt;</span> (&#123;</span><br><span class="line">        code: <span class="number">200</span>,</span><br><span class="line">        data,</span><br><span class="line">        message: <span class="string">'success'</span>,</span><br><span class="line">      &#125;)),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-创建异常过滤器，统一失败返回的response格式"><a href="#3-创建异常过滤器，统一失败返回的response格式" class="headerlink" title="3.创建异常过滤器，统一失败返回的response格式"></a>3.创建异常过滤器，统一失败返回的response格式</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nest g f httpExecption filter</span><br></pre></td></tr></table></figure>

<h5 id="4-异常过滤器代码"><a href="#4-异常过滤器代码" class="headerlink" title="4.异常过滤器代码"></a>4.异常过滤器代码</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/filter/http-execption.filter.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  ArgumentsHost,</span><br><span class="line">  Catch,</span><br><span class="line">  ExceptionFilter,</span><br><span class="line">  HttpException,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Request, Response &#125; <span class="keyword">from</span> <span class="string">'express'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Catch</span>(HttpException)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpExecptionFilter <span class="keyword">implements</span> ExceptionFilter &#123;</span><br><span class="line">  <span class="keyword">catch</span>(exception: HttpException, host: ArgumentsHost) &#123;</span><br><span class="line">    <span class="keyword">const</span> ctx = host.switchToHttp();</span><br><span class="line">    <span class="keyword">const</span> response = ctx.getResponse&lt;Response&gt;();</span><br><span class="line">    <span class="keyword">const</span> status = exception.getStatus();</span><br><span class="line">    <span class="keyword">const</span> message = exception.message;</span><br><span class="line"></span><br><span class="line">    response.status(status).json(&#123;</span><br><span class="line">      code: status,</span><br><span class="line">      message,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-在-main-ts-中全局使用拦截器、异常过滤器"><a href="#5-在-main-ts-中全局使用拦截器、异常过滤器" class="headerlink" title="5.在 main.ts 中全局使用拦截器、异常过滤器"></a>5.在 main.ts 中全局使用拦截器、异常过滤器</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/main.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; NestFactory &#125; <span class="keyword">from</span> <span class="string">'@nestjs/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppModule &#125; <span class="keyword">from</span> <span class="string">'./app.module'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; HttpExceptionFilter &#125; <span class="keyword">from</span> <span class="string">'./filters/http-execption.filter'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TransformInterceptor &#125; <span class="keyword">from</span> <span class="string">'./interceptor/transform.interceptor'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule);</span><br><span class="line"></span><br><span class="line">  app.useGlobalInterceptors(<span class="keyword">new</span> TransformInterceptor())</span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> HttpExceptionFilter())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> app.listen(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure>

<h5 id="6-修改service中的方法"><a href="#6-修改service中的方法" class="headerlink" title="6.修改service中的方法"></a>6.修改service中的方法</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/modules/article/article.service.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; Injectable, NotFoundException &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> getOne(idDTO: IdDTO) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; id &#125; = idDto</span><br><span class="line">    <span class="keyword">const</span> articleDetail = <span class="keyword">await</span> <span class="keyword">this</span>.articleRepository</span><br><span class="line">      .createQueryBuilder(<span class="string">'article'</span>)</span><br><span class="line">      .where(<span class="string">'article.id = :id'</span>, &#123; id &#125;)</span><br><span class="line">      .getOne();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!articleDetail) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> NotFoundException(<span class="string">'找不到文章'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      info: articleDetail,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6992098170540916773" target="_blank" rel="noopener">使用拦截器、异常过滤器实现统一返回格式</a></p>
<p><a href="https://docs.nestjs.com/exception-filters" target="_blank" rel="noopener">Nestjs-Exception filters</a></p>
]]></content>
      <categories>
        <category>Nest.js</category>
      </categories>
      <tags>
        <tag>nestjs</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】谈谈我的“三观”</title>
    <url>/my-world-views/</url>
    <content><![CDATA[<p>也许是人到了四十多了，敢写这么大的命题，我也醉了，不过，我还是想把我的想法记录下来，算是对我思考的一个snapshot，给未来的我看看，要么被未来的我打脸，要么打未来我的脸。无论怎么样，我觉得对我自己都很有意义。注意，这篇文章是长篇大论。<a id="more"></a></p>
<p>三观是世界观、人生观和价值观，</p>
<ul>
<li>世界观代表你是怎么看这个世界的。是左还是右，是激进还是保守，是理想还是现实，是乐观还是悲观……</li>
<li>人生观代表你要想成为什么样的人。是成为有钱人，还是成为人生的体验者，是成为老师，还是成为行业专家，是成为有思想的人，还是成为有创造力的人……</li>
<li>价值观则是你觉得什么对你来说更重要。是名是利，是过程还是结果，是付出还是索取，是国家还是自己，是家庭还是职业……</li>
</ul>
<p>人的三观其实是会变的，回顾一下我的过去，我感觉我的三观至少有这么几比较明显的变化，学生时代、刚走上社会的年轻时代，三十岁后的时代，还有现在。估计人都差不多吧……</p>
<ul>
<li>学生时代的三观更多的是学校给的，用各种标准答案给的，是又红又专的</li>
<li>刚走上社会后发现完全不是这么一回事，但学生时代的三观根深蒂固，三观开始分裂，内心开始挣扎</li>
<li>三十岁后，不如意的事越来越多，对社会越来越了解，有些人屈从现实，有些人不服输继续奋斗，而有些人展露才能开始影响社会，而分裂的三观开始收敛，我属于还在继续奋斗的人。</li>
<li>四十岁时，经历过的事太多，发现留给自己的时间不多，世界太复杂，而还有好多事没做，从而变得与世无争，也变得更为地自我。</li>
</ul>
<h3 id="面对世界"><a href="#面对世界" class="headerlink" title="面对世界"></a>面对世界</h3><p>年轻的时候，抵制过日货，虽然没上过街，但是也激动过，一次是1999南斯拉夫大使馆被炸，一次是2005反日示威，以前，我也是一个爱国愤青。但是后来，有过各种机会出国长时间生活工作，加拿大、英国、美国、日本……随着自己的经历和眼界的开阔，自己的三观自己也随着有了很多的变化，发现有些事并不是自己一开始所认识的那样，而且还是截然相反的。我深深感觉到，要有一个好的世界观，你需要亲身去经历和体会这个世界，而不是听别人说。所以，当我看到身边的人情绪激动地要抵制这个国家，搞死那个民族的时候，我都会建议他去趟那个国家最好在在那个国家呆上一段时间，亲自感受一下。</p>
<p>再后来发现，要抵制的越来越多，小时候的美英帝国主义，然后是日本，再后面是法国、韩国、菲利宾、印度、德国、瑞典、加拿大……从小时候的台独到现在的港独、藏独、疆独……发现再这样下去，基本上来说，自己的人生也不用干别的事了……另外，随着自己的成长，越来越明白，抵制这个抵制那个只不过是幼稚和狭隘的爱国主义，真想强国，想别让他人看得起，就应该把时间和精力放在努力学习放在精益求精上，做出比他们更好的东西来。另外，感觉用对内的爱国主义解决对外的外交问题也有点驴唇不对马嘴，无非也就是转移一下内部的注意力罢了，另外还发现爱国主义还可以成为消费营销手段……不是我不爱国，是我觉得世道变复杂了，我只是一个普通的老百姓，能力有限，请不要赋予我那么大的使命，我只想在我的专业上精进，能力所能及地帮助身边的人，过一个简单纯粹安静友善的生活……</p>
<p>另外，为什么国与国之间硬要比个你高我低，硬要分个高下，硬要争出个输赢，我也不是太理解，世界都已经发展到全球化的阶段了，很多产品早就是你中有我，我中有你的情况了。举个例子，一部手机中的元件，可能来自全世界数十个国家，我们已经说不清楚一部手机是究竟是哪个国家生产的了。即然，整个世界都在以一种合作共赢全球化的姿态下运作，认准自己的位置，拥抱世界，持续向先进国家学习，互惠互利，不好吗？你可能会说，不是我们不想这样，是别人不容我们发展……老实说，大的层面我也感受不到，但就我在的互联网计算机行业方面，我觉得整个世界的开放性越来越好，开源项目空前地繁荣，世界上互联网文化也空前的开放，在计算机和互联网行业，我们享受了太多的开源和开放的红利，人家不开放，我们可能在很多领域还落后数十年。然而现在很多资源我们都访问不了，用个VPN也非法，你说是谁阻碍了发展？我只想能够流畅地访问互联网，让我的工作能够更有效率，然而，我在自己的家里却像做贼一样去学习新知识新技术，随时都有可能被抓进监狱……</p>
<p>随着自己的经历越多，发现这个世界越复杂，也发现自己越渺小，很多国家大事并不是我不关心，是我觉得那根本不是我这个平头老百姓可以操心的事，这个世界有这个世界运作的规律和方法，而还有很多事情超出了我能理解的范围，也超出了我能控制的范围，我关心不关心都一个样，这些大事都不会由我的意志所决定的。而所谓的关心，无非就是喊喊口号，跟人争论一下，试图改变其它老百姓的想法，然而，对事情的本身的帮助却没有多大意义。过上几天，生活照旧，人家该搞你还不是继续搞你，而你自己并不因为做这些事而过得更好。</p>
<p>我对国与国之间的关系的态度是，有礼有节，不卑不亢，对待外国人，有礼貌但也要有节气，既不卑躬屈膝，也不趾高气昂，整体上，我并不觉得我们比国外有多差，但我也不觉得我们比国外有多好，我们还在成长，还需要帮助和协作，四海之内皆兄弟，无论在哪个国家，在老百姓的世界里，哪有那么多矛盾。有机会多出去走走，多结交几个其它民族的朋友，你会觉得，在友善和包容的环境下，你的心情和生活可以更好。</p>
<p>我现在更多关心的是和我生活相关的东西，比如：上网、教育、医疗、食品、治安、税务、旅游、收入、物价、个人权益、个人隐私……这些东西对我的影响会更大一些，也更值得关注，可以看到过去的几十年，我们国家已经有了长足的进步，这点也让我让感到很开心和自豪的，在一些地方也不输别人。但是，依然有好些事的仍然没有达到我的预期，而且还很糟糕，这个也要承认。而对，未来的变数谁也不好说，我在这个国度里的安全感似乎还不足够，所以，我还是要继续努力，以便我可以有更多的选项。有选项总比没得选要好。所以，我想尽一切办法，努力让选项多起来，无法改变无法影响，那就只能提高自己有可选择的可能性。</p>
<h3 id="面对社会"><a href="#面对社会" class="headerlink" title="面对社会"></a>面对社会</h3><p>另外，在网上与别人对一些事或观点的争论，我觉得越来越无聊，以前被怼了，一定要怼回去，现在不会了，视而不见，不是怕了，是因为，网络上的争论在我看来大多数都是些没有章法，逻辑混乱的争论。</p>
<ul>
<li>很多讨论不是说事，直接就是怼人骂人。随意就给人扣个帽子。</li>
<li>非黑即白的划分，你说这个不是黑的，他们就把你划到白的那边</li>
<li>飘移观点，复杂化问题。东拉西扯，牵强附会，还扯出其它不相关的事来混淆。</li>
<li>杠精很多，不关心你的整体观点，抓住一个小辫子大作文章。</li>
</ul>
<p>很明显，与其花时间教育这些人，不如花时间提升自己，让自己变得更优秀，这样就有更高的可能性去接触更聪明更成功更高层次的人。因为，一方面，你改变不了他们，另外，改变他们对你自己也没什么意义，改变自己，提升自己，让自己成长才有意义。时间是宝贵的，那些人根本不值得花时间，应该花时间去结交更有素质更聪明的人，做更有价值的事。</p>
<p>美国总统富兰克林·罗斯福妻子埃莉诺·罗斯福（Eleanor Roosevelt）说过下面的一句话。</p>
<blockquote>
<p>Great minds discuss ideas;<br> Average minds discuss events;<br> Small minds discuss people</p>
</blockquote>
<p>把时间多放在一些想法上，对自己对社会都是有意义的，把时间放在八卦别人，说长到短，你也不可能改善自己的生活，你批评这个批评那个，看不上这个看不起那个，不会让你有成长，也不会提升你的影响力，你的影响力不是你对别人说长道短的能力，而是别人信赖你并希望得到你的帮助的现象。多交一些有想法的朋友，多把自己的想法付诸实践，那怕没有成功，你的人生也会比别人过得有意义。</p>
<p>如果你看过我以前的文章，你会看到一些吐槽性质的文章，而后面就再也没有了。另外，我也不再没有针对具体的某个人做出评价，因为人太复杂的了，经历的越多，你就会发现你很难评价人，与其花时间在评论人和事上，不如把时间花在做一些力所能及的事来改善自己或身边的环境。所以，我建议大家少一些对人的指责和批评，通过对一件事来引发你的思考，想一想有什么可以改善，有什么方法可以做得更好，有哪些是自己可以添砖加瓦的？你会发现，只要你坚持这么做，你个人的提升和对社会的价值会越来越大，而你的影响力也会越来越大。</p>
<h3 id="面对人生"><a href="#面对人生" class="headerlink" title="面对人生"></a>面对人生</h3><p>现在的我，即不是左派也不是右派，我不喜欢爱国主义，我也不喜欢崇洋媚外，我更多的时候是一个自由派，哪边我都不站，我站我自己。因为，生活在这样的一个时代，能让自己过好都是一些比较奢望的事了。</p>
<p>《教父》里有这样的人生观：第一步要努力实现自我价值，第二步要全力照顾好家人，第三步要尽可能帮助善良的人，第四步为族群发声，第五步为国家争荣誉。事实上作为男人，前两步成功，人生已算得上圆满，做到第三步堪称伟大，而随意颠倒次序的那些人，一般不值得信任。这也是古人的“修身齐家治国平天下”！所以，在你我准备要开始要“平天下”的时候，也得先想想，自己的生活有没有过好了，家人照顾好了么，身边有哪些力所能及的事是可以去改善的……</p>
<p>穷则独善其身，达则兼济天下。提升自己，实现自我，照顾好自己的家人，帮助身边的人。这已经很不错了！</p>
<p>什么样的人干什么样的事，什么样的阶段做什么样的选择，有人的说，选择比努力更重要的，我深以为然，而且，我觉得选择和决定，比努力更难，努力是认准了一个事后不停地发力，而决定要去认准哪个事是自己该坚持努力的，则是令人彷徨和焦虑的（半途而废的人也很多）。面对人生，你每天都在作一个一个的决定，在做一个又一个的选择，有的决定大，有的决定小，你的人生的轨迹就是被这一个一个的决定和选择所走走出来的。</p>
<p>我在24岁放弃了一房子离开银行到小公司的时候，我就知道，人生的选择就是一个翘翘板，你要一头就没有另一头，选择是有代价的，你不选择的代价更大；选择是要冒险的，你不敢冒险的风险更大；选择是需要放弃的，因为无论怎么选你都会要放弃。想想你老了以后，回头一看，好多事情在年轻的时候都不敢做，而你再也没有机会，你就知道不敢选择不敢冒险的代价有多大了。选择就是一种 trade-off，这世上根本不会有什么完美，只要你想做事，你有雄心壮志，你的人生就是一个坑接着一个坑，你所能做的就是找到你喜欢的方向跳坑。</p>
<p>所以， 你要想清楚你要什么，不要什么，而且还不能要得太多，这样你才好做选择。否则，你影响你的因子太多，决定不好做，也做不好。</p>
<p>就像最前面说的一样，你是激进派还是保守派，你是喜欢领导还是喜欢跟从，你是注重长期还是注重短期，你是注重过程还是注重结果……等等，你对这些东西的坚持和守护，成为了你的“三观”，而你的三观则影响着你的选择，而你的选择影响着你的人生。</p>
<h3 id="价值取向"><a href="#价值取向" class="headerlink" title="价值取向"></a>价值取向</h3><p>下面是一些大家经常在说，可能也是大多数人关心的问题，就这些问题，我也谈谈我的价值取向。</p>
<p>挣钱。挣钱是一个大家都想做的事，但你得解决一个很核心的问题，那就是为什么别人愿意给你钱？对于挣钱的价值观从我大学毕业到现我就没怎么变过，那就是我更多关注的是怎么提高自己的能力，让自己值那个价钱，让别人愿意付钱。另外一方面，我发现，越是有能力的人，就越不计较一些短期得失，越计较短期得失的人往往都是很平庸的人。有能力的人不会关心自己的年终奖得拿多少，会不会晋升，他们更多的关心自己真正的实力有没有超过更多的人，更多的关注的是自己长远的成长，而不是一时的利益。聪明的人从来不关心眼前的得失，不会关心表面上的东西，他们更多关心的是长期利益，关心长期利益的人一定不是投机者，一定是投资者，投资会把自己的时间精力金钱投资在能让自己成长和提升的地方，那些让自己可以操更大的盘的地方，他们培养自己的领导力和影响力。而投机者在职场上会通过溜须拍马讨好领导，在学习上追求速成，在投资上使用跟随策略，在创业上甚至会不择手段，当风险来临时，投机者是几乎完全没有抗风险能力的，他们所谓的能力只不过因为形势好。</p>
<p>技术。对于计算机技术来说，要学的东西实在是太多，我并不害怕要学的东西很多，因为学习能力是一个好的工程师必需具备的事，我不惧怕困难和挑战。我觉得在语言和技术争论谁好谁坏是一种幼稚的表现， 没有完美的技术，Engineering 玩的是 Tradeoff。所以，我对没有完美的技术并不担心，但是我反而担心的是，当我们进入到一些公司后，这些公司会有一些技术上的沉淀也就是针对公司自己的专用技术，比如一些中间件，一些编程框架，lib库什么的。老实说，我比较害怕公司的专用技术，因为一旦失业，我建立在这些专用技术上的技能也会随之瓦解，有时候，我甚至害怕把我的技术建立在某一个平台上，小众的不用说了，大众的我也比较担扰，比如Windows或Unix/Linux上，因为一旦这个平台不流行或是被取代，那么我也会随之淘汰（过去的这20年已经发生过太多这样的事了）。为了应对这样的焦虑，我更愿意花时间在技术的原理和技术的本质上，这导致我需要了解各种各样的技术的设计方法，以及内在原理。所以，当国内的绝大多数程序员们更多的关注架构性能的今天，我则花更多的时间去了解编程范式，代码重构，软件设计，计算机系统原理，领域设计，工程方法……因为只有原理、本质和设计思想才可能让我不会被绑在某个专用技术或平台上，除非，我们人类的计算机这条路没走对。</p>
<p>职业。在过去20多年的职业生涯中，我从基层工程师做到管理，很多做技术的人都会转管理，但我却还是扎根技术，就算是在今天，还是会抠很多技术细节，包括写代码。因为我心里觉得，不写代码的人一定是做不好技术管理的，因为做技术管理有人要做技术决定，从不上手技术的人是做不好技术决定的，另一方面，我觉得管理是支持性的工作，不是产出性的工作，大多数的管理者无非是因为组织大了，所以需要管人管事，所以，必然要花大量的时间和精力处理各种问题，甚至办公室政治，然而，如果有一天失业了，大环境变得不好了，一个管理者和一个程序员要出去找工作，程序员会比管理者更能自食其力。所以，我并不觉得管理者这个职业有意思，我还是觉得程序员这个有创造性的职业更有趣。通常来说，管理者的技能力需要到公司和组织里才能展现，而有创造力的技能的人是可以自己独立的能力，所以，我觉得程序员的技能比管理者的技能能让我更稳定更自地活着。所以，我更喜欢“电影工作组”那样的团队和组织形式。</p>
<p>打工。对于打工，也就是加入一家公司工作，无论是在一家小公司还是一家大公司工作，都会有好的和不好的，任何公司都有其不完美的地方，这个需要承认。首先第一的肯定是完成公司交给你的任务（但我也不会是傻傻地完成工作，对于一些有问题的任务我也会提出我的看法），然后我会尽我所能在工作找到可以提高效率的地方进行改善。在推动公司/部门/团队在一技术和工程方面进步并不是一件很容易的事，因为进步是需要成本的，有时候，这种成本并不一定是公司和团队愿意接受的，而另外，从客观规律上来说，一件事的进步一定是会有和现状有一些摩擦的。有的人害怕有摩擦而忍了，而我则不是，我觉得与别人的摩擦并不可怕，因为大家的目标都是基本一致的，只是做事的标准和方式不一样，这是可能沟通的，始终是会相互理解的。而如果你没有去推动一个事，我觉得对于公司对于我个人来说，都是一种对人生的浪费，敬业也好，激情也好，其就是体现在你是否愿意冒险去推动一件于公于私都有利的事，而不是成为一个“听话”、“随大流”、“懒政”的人，即耽误了公司也耽误了自己。所以，我更信仰的是《做正确的事情，等着被开除》，这些东西，可参看《我看绩效考核》，以及我在Gitchat上的一些问答。</p>
<p>创业。前两天，有个小伙来跟我说，说他要离开BAT要去创业公司了，说在那些更自由一些，没有大公司的种种问题。我毫不犹豫地教育了他一下，我说，你选择这个创业公司的动机不对啊，你无非就是在逃避一些东西罢了，你把创业公司当做是一个避风港，这是不对的，创业公司的问题可能会更多，去创业公司的更好的心态是，这个创业公司在干的事业是不是你的事业？说白了，如果你是为了你的事业，为了解决个什么，为了改进个什么，那么，创业是适合你的，也只有在做自己事业的时候，你才能不惧困难，才会勇敢地面对一切。那种想找一个安稳的避风港呆着的心态是不会让你平静地，你要知道世界本来就是不平静的，找了自己的归宿和目标才可能让你真正的平静。所以，在我现的创业团队，我不要求大家加班，我也不鸡汤洗脑，对于想要加入的人，我会跟他讲我现在遇到的各种问题以及各种机遇，并一直在让他自己思考，我们在做的事是不是自己的事业诉求？还可不可以更好？每个人都应该为自己的事业为自己的理想去活一次，追逐自己的事业和理想并不容易，需要有很大的付出，而也只有你心底里的那个理想值得这么大的付出……</p>
<p>客户。基于上述的价值观，在我现在创业的时候，我在面对客户的时候，也是一样的，我并不会完全的迁就于客户，我的一些银行客户和互联网客户应该体会到我的做的方式了，我并不觉得迁就用户，用户要什么我就应该给什么，用户想听什么，我就说什么，虽然这样可以省着精力，更圆滑，但这都不是我喜欢的，我更愿意鲜明地表达我的观点，并拉着用户跟我一起成长，因为我并不觉得完成客户的项目有成就感，我的成就感来自客户的成长。所以，面对客户有些做得不对有问题有隐患的地方，或是有什么做错的事，我基本上都是直言不讳地说出来，因为我觉得把真实的相法说出来是对客户和对自己最基本的尊重，不管客户最终的选择是什么，我都要把利弊跟客户讲清楚。我并不是在这里装，因为，我也想做一些更高级更有技术含量的事，所以，对于一些还达到的客户，我如果不把他们拉上来，我也对不起自己。</p>
<p>在我“不惑之年”形成了这些价值观体系，也许未来还会变，也许还不成熟，总之，我不愿跟大多数人一样，因为大多数人都是随遇而安随大流的，因为这样风险最小，而我想走一条属于自己的路，做真正的自己，就像我24岁从银行里出来时想的那样，我选择对了一个正确的专业（计算机科学），呆在了一个正确的年代（信息化革命），这样的“狗屎运”几百年不遇，如果我还患得患失，那我岂不辜负活在这样一个刺激的时代？！我所要做的就是在这个时代中做有价值的事就好了！这个时代真的是太好了！</p>
<p>作者：酷 壳 – CoolShell </p>
<p>原文链接：<a href="https://coolshell.cn/articles/19085.html" target="_blank" rel="noopener">https://coolshell.cn/articles/19085.html</a></p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>Nestjs 使用class-validator实现输入验证</title>
    <url>/nest-input-validation/</url>
    <content><![CDATA[<h5 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i --save class-validator class-transformer</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-启用全局验证"><a href="#2-启用全局验证" class="headerlink" title="2.启用全局验证"></a>2.启用全局验证</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/main.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ValidationPipe &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NestFactory &#125; <span class="keyword">from</span> <span class="string">'@nestjs/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppModule &#125; <span class="keyword">from</span> <span class="string">'./app.module'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; HttpExceptionFilter &#125; <span class="keyword">from</span> <span class="string">'./filters/http-execption.filter'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TransformInterceptor &#125; <span class="keyword">from</span> <span class="string">'./interceptor/transform.interceptor'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule);</span><br><span class="line"></span><br><span class="line">  app.useGlobalPipes(<span class="keyword">new</span> ValidationPipe())</span><br><span class="line">  app.useGlobalInterceptors(<span class="keyword">new</span> TransformInterceptor())</span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> HttpExceptionFilter())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> app.listen(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure>

<h5 id="3-修改异常过滤器，返回验证的错误信息"><a href="#3-修改异常过滤器，返回验证的错误信息" class="headerlink" title="3.修改异常过滤器，返回验证的错误信息"></a>3.修改异常过滤器，返回验证的错误信息</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/filter/http-exception.filter.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ExceptionFilter, Catch, ArgumentsHost, HttpException, Logger &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Request, Response &#125; <span class="keyword">from</span> <span class="string">'express'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; execPath &#125; <span class="keyword">from</span> <span class="string">'process'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Catch</span>(HttpException)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> HttpExceptionFilter <span class="keyword">implements</span> ExceptionFilter &#123;</span><br><span class="line">  <span class="keyword">catch</span>(exception: HttpException, host: ArgumentsHost) &#123;</span><br><span class="line">    <span class="keyword">const</span> ctx = host.switchToHttp();</span><br><span class="line">    <span class="keyword">const</span> response = ctx.getResponse&lt;Response&gt;();</span><br><span class="line">    <span class="keyword">const</span> status = exception.getStatus();</span><br><span class="line">    <span class="keyword">const</span> message = exception.message</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> exceptionResponse: <span class="built_in">any</span> = exception.getResponse()</span><br><span class="line">    <span class="keyword">let</span> validatorMessage = exceptionResponse</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> validatorMessage === <span class="string">'object'</span>) &#123;</span><br><span class="line">      validatorMessage = exceptionResponse.message[<span class="number">0</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response</span><br><span class="line">      .status(status)</span><br><span class="line">      .json(&#123;</span><br><span class="line">        code: status,</span><br><span class="line">        message: validatorMessage || message,</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-工具类增加正则"><a href="#4-工具类增加正则" class="headerlink" title="4.工具类增加正则"></a>4.工具类增加正则</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/utils/index.ts</span></span><br><span class="line"><span class="comment">// 非 0 正整数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> regPositive: <span class="built_in">RegExp</span> = <span class="regexp">/^[1-9]\d*$/</span></span><br></pre></td></tr></table></figure>

<h5 id="5-修改dto"><a href="#5-修改dto" class="headerlink" title="5.修改dto"></a>5.修改dto</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/modules/article/dto/id.dto.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; IsNotEmpty, Matches &#125; <span class="keyword">from</span> <span class="string">"class-validator"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; regPositive &#125; <span class="keyword">from</span> <span class="string">"src/utils/regex.util"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> IdDTO &#123;</span><br><span class="line">    <span class="meta">@Matches</span>(regPositive, &#123;message: <span class="string">'请输入有效 id'</span>&#125;)</span><br><span class="line">    <span class="meta">@IsNotEmpty</span>(&#123;message: <span class="string">'id 不能为空'</span>&#125;)</span><br><span class="line">    readonly id: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="6-修改controller"><a href="#6-修改controller" class="headerlink" title="6.修改controller"></a>6.修改controller</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Get</span>(<span class="string">'detail'</span>)</span><br><span class="line"><span class="keyword">async</span> getOne(<span class="meta">@Query</span>() params: IdDTO) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.articleService.getOne(params);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6992098387713589284" target="_blank" rel="noopener">使用class-validator+类验证器实现表单验证</a></p>
<p><a href="https://docs.nestjs.com/techniques/validation" target="_blank" rel="noopener">Nestjs-Validation</a></p>
]]></content>
      <categories>
        <category>Nest.js</category>
      </categories>
      <tags>
        <tag>nestjs</tag>
      </tags>
  </entry>
  <entry>
    <title>Next.js 搭配 AntD 问题总结</title>
    <url>/nextjs-with-antd-issue/</url>
    <content><![CDATA[<h4 id="一、AntD"><a href="#一、AntD" class="headerlink" title="一、AntD"></a>一、AntD</h4><h5 id="1-Warning-useLayoutEffect-does-nothing-on-the-server"><a href="#1-Warning-useLayoutEffect-does-nothing-on-the-server" class="headerlink" title="1.Warning: useLayoutEffect does nothing on the server"></a>1.<a href="https://github.com/ant-design/ant-design/issues/30396" target="_blank" rel="noopener">Warning: useLayoutEffect does nothing on the server</a></h5><p>解决：AntD降级到4.15.6</p>
<h5 id="2-Warning-findDOMNode-is-deprecated-in-StrictMode"><a href="#2-Warning-findDOMNode-is-deprecated-in-StrictMode" class="headerlink" title="2.Warning: findDOMNode is deprecated in StrictMode"></a>2.<a href="https://github.com/ant-design/ant-design/issues/26136" target="_blank" rel="noopener">Warning: findDOMNode is deprecated in StrictMode</a></h5><p>解决：next.config.js中reactStrictMode设为false</p>
<a id="more"></a>

<h4 id="二、Next-js"><a href="#二、Next-js" class="headerlink" title="二、Next.js"></a>二、Next.js</h4><h5 id="1-next-js-chunkloaderror-loading-chunk-node-modules-next-dist-client-dev-noop-js-failed"><a href="#1-next-js-chunkloaderror-loading-chunk-node-modules-next-dist-client-dev-noop-js-failed" class="headerlink" title="1.next js chunkloaderror loading chunk node_modules next_dist_client_dev_noop js failed"></a>1.<a href="https://stackoverflow.com/questions/65858803/vercel-next-js-uncaught-in-promise-chunkloaderror-loading-chunk-0-failed" target="_blank" rel="noopener">next js chunkloaderror loading chunk node_modules next_dist_client_dev_noop js failed</a></h5><p>解决：删除.next文件夹</p>
<h5 id="2-Next-js-API-routes-and-pages-should-support-reading-files"><a href="#2-Next-js-API-routes-and-pages-should-support-reading-files" class="headerlink" title="2.Next.js API routes (and pages) should support reading files"></a>2.<a href="https://github.com/vercel/next.js/issues/8251" target="_blank" rel="noopener">Next.js API routes (and pages) should support reading files</a></h5><p>解决：<a href="https://blog.vulcanjs.org/how-to-set-configuration-variables-in-next-js-a81505e43dad?gi=7ce8100a35fb" target="_blank" rel="noopener">配置使用import导入</a></p>
<h5 id="3-如何使用pm2启动"><a href="#3-如何使用pm2启动" class="headerlink" title="3.如何使用pm2启动"></a>3.如何使用pm2启动</h5><p>解决：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "dev": "next dev",</span><br><span class="line">  "build": "next build &amp;&amp; PORT=4000 npm start",</span><br><span class="line">  "start": "next start",</span><br><span class="line">  "deploy": "pm2 start npm --name mlcNext --log-type=json --log-date-format 'YYYY-MM-DD HH:mm:ss' -- run build"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Next.js</category>
      </categories>
      <tags>
        <tag>next.js</tag>
        <tag>antd</tag>
      </tags>
  </entry>
  <entry>
    <title>Nestjs 使用 Swagger 生成接口文档</title>
    <url>/nest-swagger/</url>
    <content><![CDATA[<h5 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save @nestjs/swagger swagger-ui-express</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-配置swagger"><a href="#2-配置swagger" class="headerlink" title="2.配置swagger"></a>2.配置swagger</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/main.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ValidationPipe &#125; <span class="keyword">from</span> <span class="string">'@nestjs/common'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NestFactory &#125; <span class="keyword">from</span> <span class="string">'@nestjs/core'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; AppModule &#125; <span class="keyword">from</span> <span class="string">'./app.module'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; HttpExceptionFilter &#125; <span class="keyword">from</span> <span class="string">'./filters/http-exception.filter'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TransformInterceptor &#125; <span class="keyword">from</span> <span class="string">'./interceptor/transform.interceptor'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; SwaggerModule, DocumentBuilder &#125; <span class="keyword">from</span> <span class="string">'@nestjs/swagger'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bootstrap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> app = <span class="keyword">await</span> NestFactory.create(AppModule);</span><br><span class="line"></span><br><span class="line">  app.useGlobalPipes(<span class="keyword">new</span> ValidationPipe())</span><br><span class="line">  app.useGlobalInterceptors(<span class="keyword">new</span> TransformInterceptor())</span><br><span class="line">  app.useGlobalFilters(<span class="keyword">new</span> HttpExceptionFilter())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = <span class="keyword">new</span> DocumentBuilder()</span><br><span class="line">    .setTitle(<span class="string">'blog-serve'</span>)</span><br><span class="line">    .setDescription(<span class="string">'接口文档'</span>)</span><br><span class="line">    .setVersion(<span class="string">'1.0'</span>)</span><br><span class="line">    .build();</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">document</span> = SwaggerModule.createDocument(app, options);</span><br><span class="line">  SwaggerModule.setup(<span class="string">'swagger-doc'</span>, app, <span class="built_in">document</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> app.listen(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">bootstrap();</span><br></pre></td></tr></table></figure>

<h5 id="3-设置nest-cli-json"><a href="#3-设置nest-cli-json" class="headerlink" title="3.设置nest-cli.json"></a>3.设置nest-cli.json</h5><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"collection"</span>: <span class="string">"@nestjs/schematics"</span>,</span><br><span class="line">  <span class="attr">"sourceRoot"</span>: <span class="string">"src"</span>,</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"plugins"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"@nestjs/swagger"</span>,</span><br><span class="line">        <span class="attr">"options"</span>: &#123;</span><br><span class="line">          <span class="attr">"introspectComments"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-修改dto，添加文档说明"><a href="#4-修改dto，添加文档说明" class="headerlink" title="4.修改dto，添加文档说明"></a>4.修改dto，添加文档说明</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; IsNotEmpty, IsOptional &#125; <span class="keyword">from</span> <span class="string">'class-validator'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; IdDTO &#125; <span class="keyword">from</span> <span class="string">'./id.dto'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> ArticleEditDTO <span class="keyword">extends</span> IdDTO &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 文章标题</span></span><br><span class="line"><span class="comment">   * @example 美丽的大海</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@IsOptional</span>()</span><br><span class="line">  <span class="meta">@IsNotEmpty</span>(&#123; message: <span class="string">'请输入文章标题'</span> &#125;)</span><br><span class="line">  readonly title?: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 文章描述</span></span><br><span class="line"><span class="comment">   * @example 给你讲述美丽的大海</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@IsOptional</span>()</span><br><span class="line">  <span class="meta">@IsNotEmpty</span>(&#123; message: <span class="string">'请输入文章描述'</span> &#125;)</span><br><span class="line">  readonly description?: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 文章内容</span></span><br><span class="line"><span class="comment">   * @example 美丽的大海，你是如此美丽</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@IsOptional</span>()</span><br><span class="line">  <span class="meta">@IsNotEmpty</span>(&#123; message: <span class="string">'请输入文章内容'</span> &#125;)</span><br><span class="line">  readonly content?: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-查看"><a href="#5-查看" class="headerlink" title="5.查看"></a>5.查看</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localhost:3000/swagger-doc</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://juejin.cn/post/6992098225020911629" target="_blank" rel="noopener">使用 Swagger 生成文档</a></p>
<p><a href="https://docs.nestjs.com/openapi/cli-plugin" target="_blank" rel="noopener">Nestjs-CLI Plugin</a></p>
<p><a href="https://docs.nestjs.com/openapi/introduction" target="_blank" rel="noopener">Nestjs-Open API</a></p>
<p><a href="https://github.com/nestjs/nest/tree/master/sample/11-swagger" target="_blank" rel="noopener">Nestjs-Swagger sample</a></p>
<p><a href="https://github.com/huihuipan/blog-serve" target="_blank" rel="noopener">blog-serve</a></p>
]]></content>
      <categories>
        <category>Nest.js</category>
      </categories>
      <tags>
        <tag>nestjs</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS下Nginx简易部署网站</title>
    <url>/nginx-deploy-website/</url>
    <content><![CDATA[<h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y nginx &#x2F;&#x2F; 可以root安装，CentOS</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 配置文件：&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">	listen   4000; &#x2F;&#x2F; 修改默认监听端口</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ &#x2F;api&#x2F;  &#123;</span><br><span class="line">	proxy_pass http:&#x2F;&#x2F;ip:port &#x2F;&#x2F; 修改proxy配置，指向后端</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-修改运行时的用户-解决403-forbidden"><a href="#3-修改运行时的用户-解决403-forbidden" class="headerlink" title="3.修改运行时的用户(解决403 forbidden)"></a>3.修改运行时的用户(解决403 forbidden)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 配置文件：&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line"></span><br><span class="line">user root;</span><br></pre></td></tr></table></figure>

<h4 id="4-添加网站静态资源文件"><a href="#4-添加网站静态资源文件" class="headerlink" title="4.添加网站静态资源文件"></a>4.添加网站静态资源文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -r * &#x2F;user&#x2F;share&#x2F;nginx&#x2F;html</span><br></pre></td></tr></table></figure>

<h4 id="5-启动nginx"><a href="#5-启动nginx" class="headerlink" title="5.启动nginx"></a>5.启动nginx</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure>

<h4 id="6-添加nginx开机启动"><a href="#6-添加nginx开机启动" class="headerlink" title="6.添加nginx开机启动"></a>6.添加nginx开机启动</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>npm常用命令</title>
    <url>/npm-commands/</url>
    <content><![CDATA[<h4 id="1-常用"><a href="#1-常用" class="headerlink" title="1.常用"></a>1.常用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v                          &#x2F;&#x2F; 查看版本</span><br><span class="line">npm -l                          &#x2F;&#x2F; 显示各个命令简单用法</span><br><span class="line">npm config list                 &#x2F;&#x2F; 查看npm配置信息</span><br><span class="line">npm cache clean                 &#x2F;&#x2F; 删除缓存目录下的所有数据</span><br><span class="line">npm view &lt;package&gt; version      &#x2F;&#x2F; 查看 package 的最新的版本信息</span><br><span class="line">npm ls &lt;package&gt; (-g)           &#x2F;&#x2F; 查看本地安装的 package 版本</span><br><span class="line">npm update package              &#x2F;&#x2F; 更新本地 package</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config list                           &#x2F;&#x2F; 查看npm信息；注意：此命令不是查看所有参数配置</span><br><span class="line">npm config ls -l                          &#x2F;&#x2F; 可查看 npm 的所有配置</span><br><span class="line"></span><br><span class="line">npm config set &lt;key&gt; &lt;value&gt; [--global]   &#x2F;&#x2F; 设置指定参数</span><br><span class="line">npm config get &lt;key&gt;                      &#x2F;&#x2F; 获取现有参数值</span><br><span class="line">npm config delete &lt;key&gt;                   &#x2F;&#x2F; 删除指定参数，此时参数值会变为默认值</span><br><span class="line">npm config edit                           &#x2F;&#x2F; 编辑全量的npm配置文件（.npmrc）</span><br></pre></td></tr></table></figure>

<h4 id="3-缓存"><a href="#3-缓存" class="headerlink" title="3.缓存"></a>3.缓存</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm cache clean                  &#x2F;&#x2F; 删除缓存目录下的所有数据</span><br></pre></td></tr></table></figure>

<h4 id="4-查看远程包信息"><a href="#4-查看远程包信息" class="headerlink" title="4.查看远程包信息"></a>4.查看远程包信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm view &lt;package&gt; versions      &#x2F;&#x2F; 查看 package 的所有版本信息</span><br><span class="line">npm view &lt;package&gt; version       &#x2F;&#x2F; 查看 package 的最新的版本信息</span><br><span class="line">npm view &lt;package&gt; dependencies  &#x2F;&#x2F; 查看包的依赖关系</span><br></pre></td></tr></table></figure>

<h4 id="5-查看本地包信息"><a href="#5-查看本地包信息" class="headerlink" title="5.查看本地包信息"></a>5.查看本地包信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm ls &lt;package&gt; (-g)           &#x2F;&#x2F; 查看本地安装的 package 版本</span><br></pre></td></tr></table></figure>

<h4 id="6-安装"><a href="#6-安装" class="headerlink" title="6.安装"></a>6.安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install package --save [-S]     &#x2F;&#x2F; 安装运行时依赖包</span><br><span class="line">npm install package --save-dev [-D] &#x2F;&#x2F; 安装开发时依赖包</span><br><span class="line">npm install package -g              &#x2F;&#x2F; 全局安装 package</span><br><span class="line">npm install package@version         &#x2F;&#x2F; 安装指定版本 package</span><br></pre></td></tr></table></figure>

<h4 id="7-卸载"><a href="#7-卸载" class="headerlink" title="7.卸载"></a>7.卸载</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall package          &#x2F;&#x2F; 卸载本地package</span><br><span class="line">npm uninstall -g package       &#x2F;&#x2F; 卸载全局package</span><br></pre></td></tr></table></figure>

<h4 id="8-更新升级"><a href="#8-更新升级" class="headerlink" title="8.更新升级"></a>8.更新升级</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm outdated                  &#x2F;&#x2F; 列出未升级到最新版本的依赖</span><br><span class="line">npm update package            &#x2F;&#x2F; 更新本地package</span><br><span class="line">npm update package -g         &#x2F;&#x2F; 更新全局package</span><br></pre></td></tr></table></figure>

<h4 id="9-查看安装目录"><a href="#9-查看安装目录" class="headerlink" title="9.查看安装目录"></a>9.查看安装目录</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm root      &#x2F;&#x2F; 查看本地安装目录</span><br><span class="line">npm root -g   &#x2F;&#x2F; 查看全局安装目录</span><br></pre></td></tr></table></figure>

<h4 id="10-版本管理"><a href="#10-版本管理" class="headerlink" title="10.版本管理"></a>10.版本管理</h4><ul>
<li>~: 当安装依赖时获取到有新版本时，安装到 x.y.z 中 z 的最新的版本。即保持主版本号、次版本号不变的情况下，保持修订号的最新版本。</li>
<li>^: 当安装依赖时获取到有新版本时，安装到 x.y.z 中 y 和 z 都为最新版本。 即保持主版本号不变的情况下，保持次版本号、修订版本号为最新版本。</li>
</ul>
]]></content>
      <categories>
        <category>NPM</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>【JS】offset、scroll、client宽高属性总结</title>
    <url>/offset-scroll-client/</url>
    <content><![CDATA[<p><img src="../images/summary.jpg" alt="summary.jpg"></p>
<a id="more"></a>
<p><img src="../images/all.gif" alt="all.gif"></p>
<h2 id="一、JS宽高属性"><a href="#一、JS宽高属性" class="headerlink" title="一、JS宽高属性"></a>一、JS宽高属性</h2><h3 id="1-window相关"><a href="#1-window相关" class="headerlink" title="1.window相关"></a>1.window相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">window.innerHeight</td>
<td align="left">浏览器窗口高度，如果存在水平滚动条，则包括滚动条（不包括标题、工具栏、状态栏）</td>
</tr>
<tr>
<td align="left">window.innerWidth</td>
<td align="left">浏览器窗口宽度，如果存在垂直滚动条，则包括滚动条（不包括标题、工具栏、状态栏）</td>
</tr>
<tr>
<td align="left">window.outerHeight</td>
<td align="left">浏览器窗口整个高度，包括窗口标题、工具栏、状态栏等</td>
</tr>
<tr>
<td align="left">window.outerWidth</td>
<td align="left">浏览器窗口整个宽度，包括侧边栏，窗口镶边和调正窗口大小的边框</td>
</tr>
<tr>
<td align="left"><img src="../images/innerHeight_outerHeight.png" alt="innerHeight_outerHeight.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<h3 id="2-window-screen相关"><a href="#2-window-screen相关" class="headerlink" title="2.window.screen相关"></a>2.window.screen相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">window.screen.width</td>
<td align="left">显示器屏幕的宽度（与分辨率有关）</td>
</tr>
<tr>
<td align="left">window.screen.height</td>
<td align="left">显示器屏幕的高度（与分辨率有关）</td>
</tr>
<tr>
<td align="left">window.screen.availHeight</td>
<td align="left">浏览器窗口在屏幕上可占用的垂直空间（桌面高度去掉任务栏高度）</td>
</tr>
<tr>
<td align="left">window.screen.availWidth</td>
<td align="left">返回浏览器窗口可占用的水平宽度</td>
</tr>
<tr>
<td align="left">window.screenTop</td>
<td align="left">返回浏览器上边距离屏幕上边界的距离</td>
</tr>
<tr>
<td align="left">window.screenLeft</td>
<td align="left">返回浏览器左边距离屏幕左边界的距离</td>
</tr>
<tr>
<td align="left"><img src="../images/height_availHeight.png" alt="height_availHeight.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<p><img src="../images/screen.png" alt="screen.png"></p>
<p><img src="../images/screen_window_body.png" alt="screen_window_body.png"></p>
<h3 id="3-client相关"><a href="#3-client相关" class="headerlink" title="3.client相关"></a>3.client相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">clientHeight</td>
<td align="left">元素可视区域的高度，包含内边距，但不包括水平滚动条、边框和外边距</td>
</tr>
<tr>
<td align="left">clientWidth</td>
<td align="left">元素可视区域的宽度，包含内边距，但不包括垂直滚动条、边框和外边距</td>
</tr>
<tr>
<td align="left">clientTop</td>
<td align="left">元素顶部边框的宽度，等于border-top</td>
</tr>
<tr>
<td align="left">clientLeft</td>
<td align="left">元素左边边框的宽度，等于border-left</td>
</tr>
<tr>
<td align="left"><img src="../images/clientHeight_clientWidth.png" alt="clientHeight_clientWidth.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<h3 id="4-offset相关"><a href="#4-offset相关" class="headerlink" title="4.offset相关"></a>4.offset相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">offsetParent</td>
<td align="left">返回一个指向最近的包含该元素的已定位元素。如果没有定位的元素，则 offsetParent 为最近的 table元素对象或根元素（标准模式下为 html；怪异模式下为 body）。当元素的 style.display设置为 none 或定位为fixed时，offsetParent 返回 null</td>
</tr>
<tr>
<td align="left">offsetHeight</td>
<td align="left">在clientHeight的基础上， 加上边框和滚动条的高度</td>
</tr>
<tr>
<td align="left">offsetWidth</td>
<td align="left">在clientWidth的基础上， 加上边框和滚动条的高度</td>
</tr>
<tr>
<td align="left">offsetLeft</td>
<td align="left">当前元素到其offsetParent 节点的左边的距离</td>
</tr>
<tr>
<td align="left">offsetTop</td>
<td align="left">当前元素到其offsetParent 节点的上边的距离</td>
</tr>
<tr>
<td align="left"><img src="../images/offset.png" alt="offset.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<p><img src="../images/clientHeight_offsetHeight_scrollHeight.png" alt="clientHeight_offsetHeight_scrollHeight.png"></p>
<p><img src="../images/offsetParent.png" alt="offsetParent.png"></p>
<h3 id="5-scroll相关"><a href="#5-scroll相关" class="headerlink" title="5.scroll相关"></a>5.scroll相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">scrollHeight</td>
<td align="left">元素完整的高度和内边距，这个高度包括肉眼看不见、溢出、被窗口遮挡的部分</td>
</tr>
<tr>
<td align="left">scrollWidth</td>
<td align="left">元素完整的宽度和内边距，这个宽度度包括肉眼看不见、溢出、被窗口遮挡的部分</td>
</tr>
<tr>
<td align="left">scrollTop</td>
<td align="left">元素的 scrollTop 值是这个元素的顶部到它的最顶部可见内容（的顶部）的距离的度量。当一个元素的内容没有产生垂直方向的滚动条，那么它的 scrollTop 值为0；获取元素若为body时，document.body.scrollTop == window.scrollY;</td>
</tr>
<tr>
<td align="left">scrollLeft</td>
<td align="left">可以读取或设置元素滚动条到元素左边的距离，元素被卷起来的宽度；获取元素若为body时，document.body.scrollLeft == window.scrollX;</td>
</tr>
<tr>
<td align="left">window.scrollX</td>
<td align="left">返回文档/页面水平方向滚动的像素值</td>
</tr>
<tr>
<td align="left">window.scrollY</td>
<td align="left">返回文档在垂直方向已滚动的像素值</td>
</tr>
<tr>
<td align="left"><img src="../images/scrollHeight.png" alt="scrollHeight.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<h3 id="6-Event相关"><a href="#6-Event相关" class="headerlink" title="6.Event相关"></a>6.Event相关</h3><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">e.clientX/clientY</td>
<td align="left">相对于可视区域左上角的坐标</td>
</tr>
<tr>
<td align="left">e.pageX/pageY</td>
<td align="left">相对于整个文档（包括未显示区域）左上角的坐标</td>
</tr>
<tr>
<td align="left">e.screenX/screenY</td>
<td align="left">相对于屏幕左上角的坐标</td>
</tr>
<tr>
<td align="left">e.offsetX/offsetY</td>
<td align="left">相对于事件源（当前元素）左上角的坐标</td>
</tr>
<tr>
<td align="left"><img src="../images/clientX_pageX.png" alt="clientX_pageX.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="二、jQuery宽高属性"><a href="#二、jQuery宽高属性" class="headerlink" title="二、jQuery宽高属性"></a>二、jQuery宽高属性</h2><table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">width()</td>
<td align="left">元素的content区域宽度</td>
</tr>
<tr>
<td align="left">height()</td>
<td align="left">元素的content区域高度</td>
</tr>
<tr>
<td align="left">innerWidth()</td>
<td align="left">元素的content+padding区域宽度</td>
</tr>
<tr>
<td align="left">innerHeight()</td>
<td align="left">元素的content+padding区域高度</td>
</tr>
<tr>
<td align="left">outerWidth(Boolean)</td>
<td align="left">可选，默认表示元素的content+padding+border区域的宽度，如果为true表示元素的content+padding+border+margin区域的宽度</td>
</tr>
<tr>
<td align="left">outerHeight(Boolean)</td>
<td align="left">可选，默认表示元素的content+padding+border区域的高度，如果为true表示元素的content+padding+border+margin区域的高度</td>
</tr>
<tr>
<td align="left">scrollLeft()</td>
<td align="left">相对于水平滚动条左边的距离</td>
</tr>
<tr>
<td align="left">scrollTop()</td>
<td align="left">相对于垂直滚动条上边的距离</td>
</tr>
<tr>
<td align="left">offset()</td>
<td align="left">返回相对于document的当前坐标值，包含left、top值</td>
</tr>
<tr>
<td align="left">position()</td>
<td align="left">返回相对于offsetParent的当前坐标值，包含left、top值</td>
</tr>
<tr>
<td align="left"><img src="../images/jquery.png" alt="jquery.png"></td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="三、常用判断"><a href="#三、常用判断" class="headerlink" title="三、常用判断"></a>三、常用判断</h2><h3 id="1-判定元素是否滚动到底"><a href="#1-判定元素是否滚动到底" class="headerlink" title="1.判定元素是否滚动到底"></a>1.判定元素是否滚动到底</h3><p>如果元素滚动到底，下面等式返回true，没有则返回false：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">element.scrollHeight - element.scrollTop === element.clientHeight</span><br></pre></td></tr></table></figure>

<h3 id="2-offsetTop-与-style-top-的区别"><a href="#2-offsetTop-与-style-top-的区别" class="headerlink" title="2.offsetTop 与 style.top 的区别"></a>2.offsetTop 与 style.top 的区别</h3><p>(1) offsetTop 返回的是数字，而 style.top 返回的是字符串，除了数字外还带有单位：px</p>
<p>(2) offsetTop 只读，而 style.top 可读写</p>
<p>(3) 如果没有给 HTML 元素指定过 top 样式，则 style.top 返回的是空字符串</p>
<h3 id="3-获取页面滚动条当前位置"><a href="#3-获取页面滚动条当前位置" class="headerlink" title="3.获取页面滚动条当前位置"></a>3.获取页面滚动条当前位置</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.documentElement &amp;&amp; <span class="built_in">document</span>.documentElement.scrollTop) &#123; </span><br><span class="line">    scrollTop = <span class="built_in">document</span>.documentElement.scrollTop; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.body) &#123;</span><br><span class="line">	scrollTop = <span class="built_in">document</span>.body.scrollTop; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-获取页面可视范围高度"><a href="#4-获取页面可视范围高度" class="headerlink" title="4.获取页面可视范围高度"></a>4.获取页面可视范围高度</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.body.clientHeight &amp;&amp; <span class="built_in">document</span>.documentElement.clientHeight) &#123; </span><br><span class="line">    warpHeight = <span class="built_in">Math</span>.min(<span class="built_in">document</span>.body.clientHeight, <span class="built_in">document</span>.documentElement.clientHeight);</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">	warpHeight = <span class="built_in">Math</span>.max(<span class="built_in">document</span>.body.clientHeight, <span class="built_in">document</span>.documentElement.clientHeight); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-获取页面完整高度"><a href="#5-获取页面完整高度" class="headerlink" title="5.获取页面完整高度"></a>5.获取页面完整高度</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Math</span>.max(<span class="built_in">document</span>.body.scrollHeight, <span class="built_in">document</span>.documentElement.scrollHeight)</span><br></pre></td></tr></table></figure>

<h3 id="6-获取滚动条宽度"><a href="#6-获取滚动条宽度" class="headerlink" title="6.获取滚动条宽度"></a>6.获取滚动条宽度</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> scrollBarWidth = el.offsetWidth - el.clientWidth;</span><br></pre></td></tr></table></figure>

<h3 id="7-页面滚动离开首屏-这时可显示回到顶部的按钮"><a href="#7-页面滚动离开首屏-这时可显示回到顶部的按钮" class="headerlink" title="7.页面滚动离开首屏(这时可显示回到顶部的按钮)"></a>7.页面滚动离开首屏(这时可显示回到顶部的按钮)</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.scrollTop &gt; <span class="built_in">window</span>.innerHeight</span><br></pre></td></tr></table></figure>

<h3 id="8-图片懒加载判断"><a href="#8-图片懒加载判断" class="headerlink" title="8.图片懒加载判断"></a>8.图片懒加载判断</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lazyload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	    <span class="keyword">var</span> images = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'img'</span>);</span><br><span class="line">	    <span class="keyword">var</span> len    = images.length;</span><br><span class="line">	    <span class="keyword">var</span> n      = <span class="number">0</span>;      <span class="comment">//存储图片加载到的位置，避免每次都从第一张图片开始遍历		</span></span><br><span class="line">	    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">var</span> seeHeight = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line">		<span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i = n; i &lt; len; i++) &#123;</span><br><span class="line">		    <span class="keyword">if</span>(images[i].offsetTop &lt; seeHeight + scrollTop) &#123;</span><br><span class="line">		        <span class="keyword">if</span>(images[i].getAttribute(<span class="string">'src'</span>) === <span class="string">'images/loading.gif'</span>) &#123;</span><br><span class="line">			     images[i].src = images[i].getAttribute(<span class="string">'data-src'</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			n = n + <span class="number">1</span>;</span><br><span class="line">		     &#125;</span><br><span class="line">		&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> loadImages = lazyload();</span><br><span class="line">	loadImages();          <span class="comment">//初始化首页的页面图片</span></span><br><span class="line">	<span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, loadImages, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure>

<p> 参考链接：</p>
<p> <a href="https://juejin.im/entry/58523bf8128fe1006d9990ee" target="_blank" rel="noopener">JavaScript 及 jQuery 中的各种宽高属性图解</a></p>
<p> <a href="https://www.w3cplus.com/javascript/offset-scroll-client.html" target="_blank" rel="noopener">JavaScript学习笔记：视口宽高、位置与滚动高度</a></p>
<p> <a href="https://segmentfault.com/a/1190000007681873" target="_blank" rel="noopener">JS、jQuery各种宽高属性</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>离职分析</title>
    <url>/quit-job-analysis/</url>
    <content><![CDATA[<h4 id="一、第一家公司存在的问题"><a href="#一、第一家公司存在的问题" class="headerlink" title="一、第一家公司存在的问题"></a>一、第一家公司存在的问题</h4><p>1.打杂，过于清闲</p>
<p>2.缺乏挑战性、没有成就感、重复劳动</p>
<p>3.没有自我认同</p>
<p>4.同事养老，没有同路人</p>
<p>5.薪资不满意</p>
<p>6.制度僵化</p>
<p>7.行业不景气、公司前景堪忧<a id="more"></a></p>
<p><strong>离职诉求：</strong></p>
<p>1.尝试新的行业、新的岗位</p>
<p>2.做自己喜欢的，自我认同</p>
<p>3.理想薪资</p>
<p>4.追求工作的成就感、挑战性</p>
<p><strong>离职未解决的问题：</strong>没有成就感、重复劳动</p>
<h4 id="二、第二家公司存在的问题"><a href="#二、第二家公司存在的问题" class="headerlink" title="二、第二家公司存在的问题"></a>二、第二家公司存在的问题</h4><p>1.加班加点，工作强度大，劳累</p>
<p>2.诸多不确定的因素（今天几点下班？周末是否休息？新功能何时提测？何时发版？需求是否敲定？UI是否会改？），过于被动</p>
<p>3.工作没有成就感</p>
<p>4.工作侵占太多私人时间</p>
<p>5.因为劳累，没有心力做其他事，包括学习、生活</p>
<p>6.工作环境过于喧闹、个别同事不午休影响他人</p>
<p>7.公司制度不规范、不够人性化</p>
<p>8.开发流程不规范</p>
<p>9.对公司的产品缺乏兴趣</p>
<h4 id="三、现状分析"><a href="#三、现状分析" class="headerlink" title="三、现状分析"></a>三、现状分析</h4><p><strong>现状根因：</strong></p>
<p>1.人生观：追求工作与生活平衡</p>
<p>2.自由：做自己喜欢的、自主时间</p>
<p>3.稳定：确定性</p>
<p>4.自我认同</p>
<p><strong>担忧：</strong></p>
<p>1.是否能找到合适的工作</p>
<p>2.自身能力还不够、缺乏经验</p>
<p>3.离职不顺利</p>
<p>4.未来的职业发展，自己想要做什么</p>
<p>5.家人亲戚朋友的理解</p>
<p><strong>解决理念：</strong><br>平静独处、积极主动、回归初心、长线思维</p>
<p>参考文章：</p>
<p><a href="http://www.zreading.cn/archives/6746.html" target="_blank" rel="noopener">迷茫，不过是我们走到了生活的拐点</a></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>【JS】数组取随机数</title>
    <url>/randomize-shuffle-a-javascript-array/</url>
    <content><![CDATA[<h2 id="一、使用数组sort方法对数组元素随机排序，并取指定长度的元素"><a href="#一、使用数组sort方法对数组元素随机排序，并取指定长度的元素" class="headerlink" title="一、使用数组sort方法对数组元素随机排序，并取指定长度的元素"></a>一、使用数组sort方法对数组元素随机排序，并取指定长度的元素</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.shuffle = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = <span class="keyword">this</span>.length,</span><br><span class="line">      num = n ? <span class="built_in">Math</span>.min(n, len) : len,</span><br><span class="line">      arr = <span class="keyword">this</span>.slice(<span class="number">0</span>);</span><br><span class="line">  arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Math</span>.random() - <span class="number">0.5</span>; &#125;);</span><br><span class="line">  <span class="keyword">return</span> arr.slice(<span class="number">0</span>, num - <span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h2 id="二、随机交换数组内的元素"><a href="#二、随机交换数组内的元素" class="headerlink" title="二、随机交换数组内的元素"></a>二、随机交换数组内的元素</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">lib = &#123;&#125;;</span><br><span class="line">lib.range = <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>&#123; <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)); &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>.prototype.shuffle = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = <span class="keyword">this</span>.length,</span><br><span class="line">      num = n ? <span class="built_in">Math</span>.min(n, len) : len,</span><br><span class="line">      arr = <span class="keyword">this</span>.slice(<span class="number">0</span>), </span><br><span class="line">      temp, </span><br><span class="line">      index;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    index = lib.range(i, len - <span class="number">1</span>);</span><br><span class="line">    temp = arr[i];</span><br><span class="line">    arr[i] = arr[index];</span><br><span class="line">    arr[index] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr.slice(<span class="number">0</span>, num);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="三、随机从原数组抽取一个元素-加入到新数组"><a href="#三、随机从原数组抽取一个元素-加入到新数组" class="headerlink" title="三、随机从原数组抽取一个元素,加入到新数组"></a>三、随机从原数组抽取一个元素,加入到新数组</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">lib = &#123;&#125;;</span><br><span class="line">lib.range = <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>) </span>&#123; <span class="keyword">return</span> min + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)); &#125;;</span><br><span class="line"><span class="built_in">Array</span>.prototype.shuffle = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len = <span class="keyword">this</span>.length,</span><br><span class="line">    num = n ? <span class="built_in">Math</span>.min(n, len) : len,</span><br><span class="line">    arr = <span class="keyword">this</span>.slice(<span class="number">0</span>),</span><br><span class="line">    result = [],</span><br><span class="line">    index;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">    index = lib.range(<span class="number">0</span>, len - <span class="number">1</span> - i);</span><br><span class="line">    <span class="comment">// 或者 result.concat(arr.splice(index,1)) </span></span><br><span class="line">    result.push(arr.splice(index, <span class="number">1</span>)[<span class="number">0</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="简易版本"><a href="#简易版本" class="headerlink" title="简易版本"></a>简易版本</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.sort(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">Math</span>.random() - <span class="number">0.5</span>)[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://www.w3cplus.com/javascript/how-to-randomize-shuffle-a-javascript-array.html" target="_blank" rel="noopener" title="JavaScript学习笔记：数组随机排序">JavaScript学习笔记：数组随机排序</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>redis基础命令</title>
    <url>/redis-basic/</url>
    <content><![CDATA[<p>安装参考：<a href="https://cloud.tencent.com/developer/article/1606701" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1606701</a></p>
<h3 id="一、全局命令"><a href="#一、全局命令" class="headerlink" title="一、全局命令"></a>一、全局命令</h3><p>1.列出所有键（大量键时，生产禁止使用）：keys *</p>
<p>2.查询有多少个键：dbsize</p>
<p>3.是否存在某个键（0否1是）：exists [key]</p>
<p>4.删除一个/多个键，返回成功删除的键的个数：del [key/keys]</p>
<p>5.为键设置过期时间（不存在返回0）：expire [key] seconds</p>
<p>6.查询键的过期时间：ttl [key]</p>
<a id="more"></a>

<p>说明：</p>
<blockquote>
<p>返回大于0的整数：键的剩余过期时间</p>
<p>-1: 键未设置过期时间</p>
<p>-2: 键不存在</p>
</blockquote>
<p>7.为键设置过期时间点(秒级时间戳)：expire [key] [timestamp]</p>
<p>8.清除键设置的过期时间：persist [key]</p>
<p>9.查询键的类型，不存在返回none：type [key]</p>
<p>10.重命名键：rename/renamenx [oldName] [newName]</p>
<p>11.随机返回一个键：randomkey</p>
<p>12.渐进式遍历所有键：scan</p>
<p>13.清库：flushdb</p>
<h3 id="二、字符串命令"><a href="#二、字符串命令" class="headerlink" title="二、字符串命令"></a>二、字符串命令</h3><p>使用场景：缓存、计数、共享session、限速</p>
<p>1.设置键：set [key] [value] [秒级过期时间] [毫秒级过期时间] [nx|xx]</p>
<p>说明：</p>
<blockquote>
<p>nx: 键必须不存在，才会设置成功，用于添加<br>xx: 键必须存在，才会设置成功，用于更新</p>
</blockquote>
<p>2.setnx和set xx：意义同上</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setnx hello world</span><br><span class="line">set hello newWorld xx</span><br></pre></td></tr></table></figure>

<p>3.获取键的值，不存在返回(nil)：get [key]</p>
<p>4.批量设置键值：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mset a 1 b 2 c 3 d 4</span><br></pre></td></tr></table></figure>

<p>5.批量获取键值,不存在返回(nil)：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mget a b c d</span><br></pre></td></tr></table></figure>

<p>6.计数/自增：incr [key]</p>
<blockquote>
<p>说明：</p>
<p>键值不是整数，返回错误</p>
<p>键值是整数，返回自增后结果</p>
<p>键不存在，值按0，返回结果1</p>
</blockquote>
<p>7.自减：decr [key]</p>
<p>8.自增指定数字：incrby [key] [number]</p>
<p>9.自减指定数字：decrby [key] [number]</p>
<p>10.自增浮点数：incrbyfloat [key]</p>
<p>11.追加值：append [key] [value]</p>
<p>12.查询字符串长度：strlen [key]</p>
<blockquote>
<p>说明：中文一个字占3个字节</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set chinese "世界"</span><br><span class="line">strlen chinese // 6</span><br></pre></td></tr></table></figure>

<p>13.设置完后，返回旧的值：getset [key] [value]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set name bill</span><br><span class="line">getset name kate // 返回 bill</span><br></pre></td></tr></table></figure>

<p>14.设置指定位置的字符：setrange [key] [index] [value]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set word test</span><br><span class="line">setrange word 0 p</span><br><span class="line">get word // "pest"</span><br></pre></td></tr></table></figure>

<p>15.获取部分字符串：getrange [key] [start] [end]</p>
<h3 id="三、哈希命令"><a href="#三、哈希命令" class="headerlink" title="三、哈希命令"></a>三、哈希命令</h3><p>1.设置值：hset [key] [field] [value]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hset user:1 name bill</span><br></pre></td></tr></table></figure>

<p>2.获取值：hget [key] [field]</p>
<p>3.删除一个/多个field，返回成功删除的个数: hdel [key] [field1] [field2]…</p>
<p>4.查询某个key的field个数：hlen [key]</p>
<p>5.批量设置field: hmset [key] [field1] [value1] [field2] [value2]…</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hmset user:1 name mike age 18 job worker</span><br></pre></td></tr></table></figure>

<p>6.批量获取field: hmget [key] [field1] [field2]…</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hmget user:1 name age job</span><br></pre></td></tr></table></figure>

<p>7.判断field是否存在：hexists [key] [field]</p>
<p>8.获取某个key的所有field: hkeys [key]</p>
<p>9.获取某个key的所有value：hvals [key]</p>
<p>10.获取某个key的所有field-value: hgetall [key]</p>
<p>11.自增field: hincrby [key] [field]</p>
<p>12.浮点自增field: hincrbyfloat [key] [field]</p>
<p>13.计算value的字符串长度：hstrlen [key] [field]</p>
<h3 id="四、列表命令"><a href="#四、列表命令" class="headerlink" title="四、列表命令"></a>四、列表命令</h3><p>使用场景：消息队列、分页获取文章列表</p>
<h4 id="1-添加操作"><a href="#1-添加操作" class="headerlink" title="1.添加操作"></a>1.添加操作</h4><p>a.从右侧插入一个/多个值：rpush [listname] [value1] [value2]…</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpush list a b c // a b c</span><br></pre></td></tr></table></figure>

<p>b.从左侧插入一个/多个值： lpush  [listname] [value1] [value2]…</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lpush list 0 1 2 // 2 1 0</span><br></pre></td></tr></table></figure>

<p>c.在某个值之前/之后插入：linsert [listname] [before/after] [targetValue] [value]</p>
<h4 id="2-查找操作"><a href="#2-查找操作" class="headerlink" title="2.查找操作"></a>2.查找操作</h4><p>a.从左到右获取列表所有元素：lrange [listname] [start] [end]</p>
<blockquote>
<p>说明：下标start和end会包含自身</p>
</blockquote>
<p>b.获取指定索引下标的元素：lindex [listname] [index]</p>
<p>c.获取列表长度：llen [listname]</p>
<h4 id="3-删除操作"><a href="#3-删除操作" class="headerlink" title="3.删除操作"></a>3.删除操作</h4><p>a.左侧弹出元素：lpop [listname]</p>
<p>b.右侧弹出元素： rpop [listname]</p>
<p>c.删除指定元素：lrem [listname] [count] [value]</p>
<blockquote>
<p>说明：</p>
<p>count &gt; 0，从左到右，删除count个值等于value的元素</p>
<p>count &lt; 0，从右到左，删除count个值等于value的元素</p>
<p>count=0，删除所有的值等于value的元素</p>
</blockquote>
<p>d.按照索引范围修建列表：ltrim [listname] [start] [end]</p>
<h4 id="4-修改操作"><a href="#4-修改操作" class="headerlink" title="4.修改操作"></a>4.修改操作</h4><p>a.修改指定下标的元素：lset [listname] [index] [newValue]</p>
<h4 id="5-阻塞操作"><a href="#5-阻塞操作" class="headerlink" title="5.阻塞操作"></a>5.阻塞操作</h4><p>brpop和blpop: brpop [listname1] [listname2]…[timeout]</p>
<blockquote>
<p>说明：timeout单位为秒</p>
<p>如果list为空：则等待timeout秒后返回(timeout为0则一直等待)，如果此时有元素加入，则立即返回</p>
<p>如果list不为空：则立即返回</p>
<p>当list为多个时，会从左至右遍历，一旦有哪个list的元素能弹出，则立即返回</p>
<p>先请求的客户端会优先获取到返回值</p>
</blockquote>
<h3 id="五、集合-set-命令"><a href="#五、集合-set-命令" class="headerlink" title="五、集合(set)命令"></a>五、集合(set)命令</h3><p>使用场景：给用户贴标签、抽奖、社交喜好</p>
<p>与列表区别：无序、无重复，支持并交补差</p>
<h4 id="1-集合内操作"><a href="#1-集合内操作" class="headerlink" title="1.集合内操作"></a>1.集合内操作</h4><p>a.添加元素：sadd [key] [element1] [element2]…</p>
<p>b.删除元素：srem [key] [element1] [element2]…</p>
<p>c.计算元素个数：scard [key]</p>
<p>d.判断元素是否在集合中(0否1是)：sismember [key] [element]</p>
<p>e.随机从集合中返回指定个元素(默认1个)：srandmember [key] [count] 或 spop [key] [count]<br>说明：两者区别，spop会删除元素</p>
<p>f.获取集合的所有元素：smembers [key]</p>
<h4 id="2-集合间操作"><a href="#2-集合间操作" class="headerlink" title="2.集合间操作"></a>2.集合间操作</h4><p>a.求多个集合的交集：sinter [key1][key2]…</p>
<p>b.求多个集合的并集：sunion [key1][key2]…</p>
<p>c.求多个集合的差集：sdiff [key1][key2]…</p>
<p>d.将交并差的结果保存，结果也为set：sinterstore/sunionstore/sdiffstore [destKey] [sourceKey1][sourceKey2]…</p>
<h3 id="六、有序集合-zset-命令"><a href="#六、有序集合-zset-命令" class="headerlink" title="六、有序集合(zset)命令"></a>六、有序集合(zset)命令</h3><p>使用场景：排行榜、社交</p>
<p>与集合的区别：元素也不能重复，但用来排序的score可以重复</p>
<h4 id="1-集合内操作-1"><a href="#1-集合内操作-1" class="headerlink" title="1.集合内操作"></a>1.集合内操作</h4><p>a.添加元素：zadd [key] [score1] [element1] [score2] [element2]…</p>
<p>b.删除元素：zrem [key] [element1] [element2]…</p>
<p>c.计算元素个数：zcard [key]</p>
<p>d.获取元素的分数：zscore [key] [element]</p>
<p>e.获取元素的排名（从0位开始）: zrank/zrevrank [key] [element]</p>
<blockquote>
<p>说明：zrank从低到高排名，zrevrank从高到低</p>
</blockquote>
<p>f.增加元素的分数：zincrby [key] [incrementScore] [element]</p>
<p>g.获取指定排名范围的元素（从0位开始）: zrange/zrevrange [key] [start] [end] [withscores]</p>
<blockquote>
<p>说明：start/end为排名，zrange从低到高，zrevrange从高到低；withscores时会同时返回分数</p>
</blockquote>
<p>h.获取指定score范围的元素: zrangebyscore/zrevrangebyscore [key] [min] [max] [withscores]</p>
<p>i.获取指定score范围的元素个数：zcount [key] [min] [max]</p>
<p>j.删除指定排名范围的元素：zremrangebyrank [key] [start] [end]</p>
<p>k.删除指定score范围的元素：zremrangebyscore [key] [min] [max]</p>
<h4 id="2-集合间操作-1"><a href="#2-集合间操作-1" class="headerlink" title="2.集合间操作"></a>2.集合间操作</h4><p>a.求多个集合的交集：zinterstore [destKey] [numKeys] [key1][key2]…weights [weight] aggregate [sum/min/max]</p>
<p>b.求多个集合的并集：zunionstore [destKey] [numKeys] [key1][key2]…weights [weight] aggregate [sum/min/max]</p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>pm2基础</title>
    <url>/pm2-basic/</url>
    <content><![CDATA[<h3 id="一、命令"><a href="#一、命令" class="headerlink" title="一、命令"></a>一、命令</h3><h4 id="1-设置开机启动"><a href="#1-设置开机启动" class="headerlink" title="1.设置开机启动"></a>1.设置开机启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 startup</span><br></pre></td></tr></table></figure>

<h4 id="2-关闭开机启动"><a href="#2-关闭开机启动" class="headerlink" title="2.关闭开机启动"></a>2.关闭开机启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 unstartup systemd</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="3-无中断式重启"><a href="#3-无中断式重启" class="headerlink" title="3.无中断式重启"></a>3.无中断式重启</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 reload app</span><br></pre></td></tr></table></figure>

<h4 id="4-清空所有应用日志"><a href="#4-清空所有应用日志" class="headerlink" title="4.清空所有应用日志"></a>4.清空所有应用日志</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 flush</span><br></pre></td></tr></table></figure>

<h4 id="5-以cluster模式启动"><a href="#5-以cluster模式启动" class="headerlink" title="5.以cluster模式启动"></a>5.以cluster模式启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 start index.js -i n/max // max: 按cpu数量自动分配</span><br></pre></td></tr></table></figure>

<h3 id="二、配置-Ecosystem选项参考"><a href="#二、配置-Ecosystem选项参考" class="headerlink" title="二、配置(Ecosystem选项参考)"></a>二、配置(<a href="https://www.bookstack.cn/read/pm2-runtime/22.md" target="_blank" rel="noopener">Ecosystem选项参考</a>)</h3><h4 id="1-以json格式输出日志"><a href="#1-以json格式输出日志" class="headerlink" title="1.以json格式输出日志"></a>1.以json格式输出日志</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--log-type=json</span><br><span class="line">`</span><br></pre></td></tr></table></figure>

<h4 id="2-cluster模式下日志合并"><a href="#2-cluster模式下日志合并" class="headerlink" title="2.cluster模式下日志合并"></a>2.cluster模式下日志合并</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--merge-logs</span><br><span class="line">`</span><br></pre></td></tr></table></figure>

<h4 id="3-以server所在时区显示timestamp-遵循moment-js"><a href="#3-以server所在时区显示timestamp-遵循moment-js" class="headerlink" title="3.以server所在时区显示timestamp(遵循moment.js)"></a>3.以server所在时区显示timestamp(<a href="https://momentjs.com/docs/#/parsing/string-format/" target="_blank" rel="noopener">遵循moment.js</a>)</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--log-date-format 'YYYY-MM-DD HH:mm:ss'</span><br></pre></td></tr></table></figure>

<h3 id="三、pm2-logrotate"><a href="#三、pm2-logrotate" class="headerlink" title="三、pm2-logrotate"></a>三、<a href="https://github.com/keymetrics/pm2-logrotate" target="_blank" rel="noopener">pm2-logrotate</a></h3><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 install pm2-logrotate</span><br></pre></td></tr></table></figure>

<h4 id="2-日志位置："><a href="#2-日志位置：" class="headerlink" title="2.日志位置："></a>2.日志位置：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/.pm2/logs/</span><br></pre></td></tr></table></figure>

<h4 id="3-设置"><a href="#3-设置" class="headerlink" title="3.设置"></a>3.设置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 set pm2-logrotate:option value</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://www.bookstack.cn/read/pm2-runtime/0.md" target="_blank" rel="noopener">PM2教程</a></p>
<p><a href="https://www.bookstack.cn/read/pm2-runtime/22.md" target="_blank" rel="noopener">Ecosystem选项参考</a></p>
<p><a href="https://github.com/keymetrics/pm2-logrotate" target="_blank" rel="noopener">pm2-logrotate</a></p>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>pm2</tag>
      </tags>
  </entry>
  <entry>
    <title>【CSS】image下方多余像素问题解决</title>
    <url>/resolution-of-extra-pixel-under-image/</url>
    <content><![CDATA[<p><strong>问题代码：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">	p &#123;</span><br><span class="line"><span class="css">		<span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">background</span>:<span class="selector-id">#eee</span>;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="css">	<span class="selector-id">#img2</span> &#123;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">height</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line">	&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"1.jpg"</span> <span class="attr">id</span>=<span class="string">"img2"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>方法1：</strong>设置image的display为block</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">		<span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">		<span class="attribute">background</span>:<span class="number">#eee</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="selector-id">#img2</span> &#123;</span><br><span class="line">		<span class="attribute">display</span>:block;</span><br><span class="line">		<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">		<span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p><strong>方法2：</strong>修改image的vertical-align为非默认值（middle/top/bottom）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">		<span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">		<span class="attribute">background</span>:<span class="number">#eee</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="selector-id">#img2</span> &#123;</span><br><span class="line">		<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">		<span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">		<span class="attribute">vertical-align</span>:middle;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p><strong>方法3：</strong>设置p的line-height为0</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">		<span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">		<span class="attribute">background</span>:<span class="number">#eee</span>;</span><br><span class="line">		<span class="attribute">line-height</span>:<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="selector-id">#img2</span> &#123;</span><br><span class="line">		<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">		<span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p><strong>方法4：</strong>设置p的font-size为0</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">		<span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">		<span class="attribute">background</span>:<span class="number">#eee</span>;</span><br><span class="line">		<span class="attribute">font-size</span>:<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="selector-id">#img2</span> &#123;</span><br><span class="line">		<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">		<span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>ShadowsocksR+锐速配置及优化</title>
    <url>/shadowsocksr-serverspeed-configuration/</url>
    <content><![CDATA[<p><strong>前言</strong>：用科学上网服务有段时间了，最早搬瓦工推出年付2.9刀机子的时候，就出手买了2台，一键安装，甚是方便，性价比超高。但最近感觉用git、看油土鳖什么的，速度不是很理想，再考虑到安全因素，还是打算自建一台server，求人不如求己嘛，搭建的时候做了下记录，于是便有了此文<a id="more"></a></p>
<p><strong>VPS商</strong>：看了多方评测，这里选用了Vultr JP的机子，也是极具性价比，带宽应该是G口的</p>
<p>第一次deploy，人品不错，分到了108开头的IP（因为论坛上有说45开头的不稳定，其实我感觉应该关系不大吧），ping值还可以，平均120ms</p>
<p><strong>OS</strong>：这里以CentOS 7 x64为例，当然CentOS 6也可以，而且兼容性可能更好，遇到问题更容易找到资料</p>
<p><strong>软件</strong>：主体是SSR，SS的增强版，带混淆插件，有效防止gfw找上门，且兼容原版；加速软件是锐速，单边加速，只需在服务端部署，虽说不如FS那种双边加速来得爽，但能少装一个客户端，清爽。另外还有一些TCP协议的优化配置，也建议一起加上</p>
<p><strong>参考教程</strong>：主要是官方Github上的<a href="https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup" target="_blank" rel="noopener">单用户版安装教程</a></p>
<h5 id="1-VPS安全设置"><a href="#1-VPS安全设置" class="headerlink" title="1.VPS安全设置"></a>1.VPS安全设置</h5><p>可以参考我之前的文章<a href="http://www.jianshu.com/p/6d6a00ee6c23" target="_blank" rel="noopener">VPS安全设置</a>，先做下安全配置，免得被入侵了。<br>防火墙的话，不建议直接disable，但如果你怕后续有什么问题，可以参考下面的命令，先关闭掉</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service #CentOS 7 停止firewall</span><br><span class="line">systemctl disable firewalld.service #CentOS 7 禁止firewall开机启动</span><br><span class="line">service iptables stop #CentOS 6 下停止firewall</span><br><span class="line">chkconfig iptables off #CentOS 6 下禁止firewall开机启动</span><br></pre></td></tr></table></figure>
<h5 id="2-关闭Selinux"><a href="#2-关闭Selinux" class="headerlink" title="2.关闭Selinux"></a>2.关闭Selinux</h5><p>这个还是推荐先关闭吧，高手的话，可以略过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setenforce 0 #临时关闭</span><br><span class="line">vim &#x2F;etc&#x2F;sysconfig&#x2F;selinux</span><br><span class="line">SELINUX&#x3D;disabled #改为disabled，永久关闭</span><br></pre></td></tr></table></figure>
<h5 id="3-检查python版本，要有2-6-or-2-7"><a href="#3-检查python版本，要有2-6-or-2-7" class="headerlink" title="3.检查python版本，要有2.6 or 2.7"></a>3.检查python版本，要有2.6 or 2.7</h5><p>因为SSR基于python，所以确认下有装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<h5 id="4-查看并调整时间和时区（参考CentOS-7时区设置）"><a href="#4-查看并调整时间和时区（参考CentOS-7时区设置）" class="headerlink" title="4.查看并调整时间和时区（参考CentOS 7时区设置）"></a>4.查看并调整时间和时区（参考<a href="http://www.centoscn.com/CentOS/config/2015/0723/5901.html" target="_blank" rel="noopener">CentOS 7时区设置</a>）</h5><p>默认不是东八区，所以手动改下，到时看log档，会比较清楚</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date #查看</span><br><span class="line">timedatectl set-timezone Asia&#x2F;Shanghai #CentOS 7 修改时区</span><br><span class="line">cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime #CentOS 6 修改时区</span><br></pre></td></tr></table></figure>
<h5 id="5-安装ShadowsocksR（参考ShadowsocksR-服务端安装教程、配置文件介绍、协议和混淆插件说明）"><a href="#5-安装ShadowsocksR（参考ShadowsocksR-服务端安装教程、配置文件介绍、协议和混淆插件说明）" class="headerlink" title="5.安装ShadowsocksR（参考ShadowsocksR 服务端安装教程、配置文件介绍、协议和混淆插件说明）"></a>5.安装ShadowsocksR（参考<a href="https://github.com/breakwa11/shadowsocks-rss/wiki/Server-Setup" target="_blank" rel="noopener">ShadowsocksR 服务端安装教程</a>、<a href="[https://github.com/breakwa11/shadowsocks-rss/wiki/config.json]">配置文件介绍</a>、<a href="[https://github.com/breakwa11/shadowsocks-rss/wiki/obfs]">协议和混淆插件说明</a>）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install git &#x2F;&#x2F;安装git</span><br><span class="line">git clone -b manyuser https:&#x2F;&#x2F;github.com&#x2F;breakwa11&#x2F;shadowsocks.git &#x2F;&#x2F;获取源码</span><br><span class="line">cd ~&#x2F;shadowsocks </span><br><span class="line">bash initcfg.sh &#x2F;&#x2F;初始化根目录</span><br><span class="line">vim user-config.json &#x2F;&#x2F;编辑配置文件</span><br><span class="line">cd ~&#x2F;shadowsocks&#x2F;shadowsocks &#x2F;&#x2F;进入子目录（单用户）</span><br><span class="line">python server.py -d start &#x2F;&#x2F;后台启动</span><br><span class="line">python server.py -d stop&#x2F;restart &#x2F;&#x2F;停止或重启</span><br><span class="line">tail -f &#x2F;var&#x2F;log&#x2F;shadowsocks.log &#x2F;&#x2F;查看日志</span><br><span class="line">git pull &#x2F;&#x2F;更新源码</span><br></pre></td></tr></table></figure>
<p>其实安装还蛮简单的，如果想要长期使用，协议还是推荐用auth_aes128_md5，混淆插件推荐tls1.2_ticket_auth</p>
<h5 id="6-配置开机自启动脚本-参考启动脚本"><a href="#6-配置开机自启动脚本-参考启动脚本" class="headerlink" title="6.配置开机自启动脚本(参考启动脚本)"></a>6.配置开机自启动脚本(参考<a href="https://github.com/breakwa11/shadowsocks-rss/wiki/System-startup-script" target="_blank" rel="noopener">启动脚本</a>)</h5><p>这里需要注意，ExecStart和ExecStop里的server.py，和user-config文件路径，需要和你实际的文件一一对应，如果你是在root下直接下载安装的SSR，那就应该像下面这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Start or stop the ShadowsocksR server</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">Wants&#x3D;network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">PIDFile&#x3D;&#x2F;var&#x2F;run&#x2F;shadowsocks.pid</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;python &#x2F;root&#x2F;shadowsocks&#x2F;shadowsocks&#x2F;server.py --pid-file &#x2F;var&#x2F;run&#x2F;shadowsocks.pid -c &#x2F;root&#x2F;shadowsocks&#x2F;user-config.json -d start</span><br><span class="line">ExecStop&#x3D;&#x2F;usr&#x2F;bin&#x2F;python &#x2F;root&#x2F;shadowsocks&#x2F;shadowsocks&#x2F;server.py --pid-file &#x2F;var&#x2F;run&#x2F;shadowsocks.pid -c &#x2F;root&#x2F;shadowsocks&#x2F;user-config.json -d stop</span><br><span class="line">ExecReload&#x3D;&#x2F;bin&#x2F;kill -HUP $MAINPID</span><br><span class="line">KillMode&#x3D;process</span><br><span class="line">Restart&#x3D;always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>
<p>然后执行<code>systemctl enable shadowsocks.service &amp;&amp; systemctl start shadowsocks.service</code>，看是否报错，没有就OK</p>
<h5 id="7-锐速安装（参考VPS科学上网教程）"><a href="#7-锐速安装（参考VPS科学上网教程）" class="headerlink" title="7.锐速安装（参考VPS科学上网教程）"></a>7.锐速安装（参考<a href="https://jasper-1024.github.io/2016/06/26/VPS%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/" target="_blank" rel="noopener">VPS科学上网教程</a>）</h5><p>a.【可选】更换内核(参考<a href="https://www.91yun.org/archives/795" target="_blank" rel="noopener">CentOS更换内核</a>)<br>这步其实可选，锐速默认会去匹配最适合你当前内核的版本，然后安装，如果遇到问题，可以尝试更换内核，具体参考上面链接教程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ivh http:&#x2F;&#x2F;buildlogs.centos.org&#x2F;c7.1511.00&#x2F;kernel&#x2F;20151119220809&#x2F;3.10.0-327.el7.x86_64&#x2F;kernel-3.10.0-327.el7.x86_64.rpm --force &#x2F;&#x2F;更换内核版本</span><br><span class="line">rpm -qa | grep kernel &#x2F;&#x2F;查看内核是否安装成功</span><br><span class="line">reboot &#x2F;&#x2F;重启</span><br><span class="line">uname -r &#x2F;&#x2F;查看当前内核版本</span><br><span class="line">yum remove xxxx &#x2F;&#x2F;移除多余内核启动项</span><br></pre></td></tr></table></figure>
<p>b.一键安装锐速（参考<a href="https://www.91yun.org/archives/683" target="_blank" rel="noopener">一键自动安装包</a>）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;91yun&#x2F;serverspeeder&#x2F;master&#x2F;serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh &#x2F;&#x2F;安装</span><br><span class="line">chattr -i &#x2F;serverspeeder&#x2F;etc&#x2F;apx* &amp;&amp; &#x2F;serverspeeder&#x2F;bin&#x2F;serverSpeeder.sh uninstall -f &#x2F;&#x2F;这是卸载</span><br></pre></td></tr></table></figure>
<p>c.锐速常用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;serverspeeder&#x2F;bin&#x2F;serverSpeeder.sh start&#x2F;stop&#x2F;restart</span><br><span class="line">service serverSpeeder status</span><br></pre></td></tr></table></figure>
<h5 id="8-TCP优化和锐速优化（参考TCP优化配置）"><a href="#8-TCP优化和锐速优化（参考TCP优化配置）" class="headerlink" title="8.TCP优化和锐速优化（参考TCP优化配置）"></a>8.TCP优化和锐速优化（参考<a href="https://www.91yun.org/archives/545" target="_blank" rel="noopener">TCP优化配置</a>）</h5><p>a.锐速优化的话，只需修改配置文件的一个地方：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;serverSpeeder.conf</span><br><span class="line">advinacc &#x3D; 1 #改为1，优化入栈流量</span><br></pre></td></tr></table></figure>

<p>b.TCP优化的话，参考上面的链接，非常详细了，记得最后将hybla算法写入rc.local，使其自启动，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;rc.local</span><br><span class="line">&#x2F;sbin&#x2F;modprobe tcp_hybla &#x2F;&#x2F;添加命令</span><br><span class="line">chmod +x &#x2F;etc&#x2F;rc.d&#x2F;rc.local &#x2F;&#x2F;赋予启动权限</span><br></pre></td></tr></table></figure>
<p>c.之后重启ssr和锐速，或者直接重启VPS</p>
<h5 id="9-重启回来检查各服务是否自启动正常"><a href="#9-重启回来检查各服务是否自启动正常" class="headerlink" title="9.重启回来检查各服务是否自启动正常"></a>9.重启回来检查各服务是否自启动正常</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control &#x2F;&#x2F;检查hybla模块是否加载，有显示hybla字样就OK</span><br><span class="line">service serverSpeeder status &#x2F;&#x2F;查看锐速运行状态</span><br><span class="line">service shadowsocks status &#x2F;&#x2F;查看SSR运行状态</span><br></pre></td></tr></table></figure>

<h5 id="10-【可选】更改为chacha20加密"><a href="#10-【可选】更改为chacha20加密" class="headerlink" title="10.【可选】更改为chacha20加密"></a>10.【可选】更改为chacha20加密</h5><p>user-config.json里，加密方式默认是aes-256-cfb，可以更改为现在比较流行的chacha20加密，该加密对手机CPU负荷较低，具体可参考<a href="https://www.91yun.org/zh/archives/1232" target="_blank" rel="noopener">为SS启用chacha20加密算法</a>，配置也比较简单</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ShadowsocksR</tag>
        <tag>锐速</tag>
      </tags>
  </entry>
  <entry>
    <title>SSL证书申请与配置</title>
    <url>/ssl-certificate-request-and-configuration/</url>
    <content><![CDATA[<p>快到年底了，估计很多人都在折腾这货，其实HTTPS很早就出现了，只是一直像IPv6那样，普及率不高。这次谷歌和苹果两大巨头决定强推HTTPS，估计也是因为安全问题，毕竟有了太多“前车之鉴”，是时候该有所行动了。<a id="more"></a></p>
<p>领袖的“振臂一呼”，当然“应者云集”，国内各互联网服务商、知名网站、包括草根站长们，都纷纷跟进，陆续部署起了SSL证书，全面迎来了一波HTTPS升级浪潮。作为关注互联网的我，喜欢尝试新事物，所以趁着博客改版之际，也试了下，为了点亮那把小绿锁，真是各种折腾，在此做个阶段性小结，分享下踩坑经验吧。</p>
<p>HTTPS的安全基础是SSL，因此加密内容就需要配合SSL证书，目前国内外都有厂商提供免费版的SSL证书，下面就我知道的做个介绍吧：</p>
<h4 id="1-Let’s-Encrypt"><a href="#1-Let’s-Encrypt" class="headerlink" title="1. Let’s Encrypt"></a>1. Let’s Encrypt</h4><p>这家目前是国外信誉最好、推荐度最高的，由Mozilla、思科、Akamai等组织发起，来头不小。</p>
<p><strong>证书时效</strong>：90天，到期可以手动renew</p>
<p><strong>部署教程</strong>：可以参考<a href="https://www.freehao123.com/lets-encrypt/" target="_blank" rel="noopener">这篇</a>，写的非常详细了。另外，下面评论里有推荐一个网站：<a href="https://certbot.eff.org/" target="_blank" rel="noopener">https://certbot.eff.org/</a>，也是基于官方的程序，但操作上要更简单些，我试了下，可以成功获取到证书，这里就以CentOS 7 LNMP环境为例，大致命令如下（可访问该<a href="https://certbot.eff.org/" target="_blank" rel="noopener">网站</a>获取更多详情）：</p>
<p>a. 下载安装程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install certbot  <span class="comment">#下载安装程序</span></span><br><span class="line">certbot certonly  <span class="comment">#此处为只获取证书</span></span><br></pre></td></tr></table></figure>
<p>b. 然后会弹出图形界面，按提示操作即可，切记网站根目录路径要写正确，因为后面要做验证。</p>
<p>c. 这里坑就来了，可能会有童鞋和我一样，所有设置都填写无误，但每次都提示404验证失败，Why？后来查了下，发现是Nginx的锅，默认对.开头的访问有阻挡，需要添加配置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~ /.well-known &#123;</span><br><span class="line">  allow all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>d. 这样证书就顺利下来了，一般会在/etc/letsencrypt/live/你的域名/下面，有4个.pem文件。最后在nginx的配置里添加下ssl的内容，我加的是这些：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">listen 443 ssl;  </span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/roubintech.com/fullchain.pem;   <span class="comment">#路径要写对</span></span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/roubintech.com/privkey.pem;  <span class="comment">#路径要写对</span></span><br><span class="line">    ssl_ciphers <span class="string">"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"</span>;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br></pre></td></tr></table></figure>
<p>e. 90天到期之后，可以手动输命令renew，<a href="https://certbot.eff.org/" target="_blank" rel="noopener">网站</a>上也有写，运行<code>certbot renew --quiet</code>，renew后建议再跟上<code>service nginx reload</code>命令。</p>
<h4 id="2-阿里云-七牛-腾讯云SSL证书"><a href="#2-阿里云-七牛-腾讯云SSL证书" class="headerlink" title="2. 阿里云/七牛/腾讯云SSL证书"></a>2. 阿里云/七牛/腾讯云SSL证书</h4><p>这里放一起，是因为目前国内各家都是和赛门铁克合作，发的他家证书，而且操作上也类似，都要验证域名等。而因为DV SSL证书，是一张证书只能对应一个域名（附送www前缀），所以申请前，建议先想好用哪个域名。</p>
<p><strong>证书时效</strong>：1年</p>
<p><strong>部署教程</strong>：参考下七牛官方的<a href="https://support.qiniu.com/hc/kb/article/223541/?from=draft" target="_blank" rel="noopener">说明文档</a>吧，挺详细，就是CNAME的主机记录填写，记得把后面的主域名去掉。</p>
<h4 id="3-使用CDN部署HTTPS"><a href="#3-使用CDN部署HTTPS" class="headerlink" title="3. 使用CDN部署HTTPS"></a>3. 使用CDN部署HTTPS</h4><p>如果是VPS、云主机、服务器等，可以使用上面申请的SSL证书直接部署，而像虚拟主机那种本身不支持HTTPS，或无法开启443端口的网站，就可以使用CDN来“曲线救国”了。<br>阿里云/七牛/腾讯云都有自己的CDN，再配合上自家的证书，是极为方便的，但总体价格嘛，呵呵，仁者见仁吧，这里要介绍的是推荐度比较高的VeryCloud云分发(CDN)服务，50G/月的免费流量，够用了。</p>
<p><strong>部署教程</strong>：VeryCloud官方的<a href="https://www.verycloud.cn/cloud/help/4" target="_blank" rel="noopener">帮助文档</a>，记得先上传你的证书（七牛的证书只能用于自家服务），然后创建频道，用主域名就好，原站点写IP，回源用HTTP方式，因为你网站本身不支持嘛（支持的请用HTTPS），然后按要求，到DNS管理的地方，为主域名添加一条CNAME，建议此时给WWW的记录也加一条CNAME，这样两个都走CDN，然后A记录就可以先暂停了。</p>
<h4 id="4-图片等多媒体资源的HTTPS化"><a href="#4-图片等多媒体资源的HTTPS化" class="headerlink" title="4. 图片等多媒体资源的HTTPS化"></a>4. 图片等多媒体资源的HTTPS化</h4><p>这里我用的是七牛的云存储，支持图片等HTTPS方式访问，配合上七牛融合CDN，速度很快</p>
<p><strong>部署教程</strong>：<a href="https://support.qiniu.com/hc/kb/article/68977" target="_blank" rel="noopener">七牛官方文档</a></p>
<p>因为加速资源访问的是七牛云存储，可能需要一个二级域名做解析，而且上HTTPS的话，同样需要对应的证书，略麻烦，其实还好，直接在七牛申请挺快的，当然你不用担心一个网站上了多张SSL证书会有问题(内心是多想来一张wildcard SSL证书啊)，有个东西叫SNI可以解决。</p>
<h4 id="5-多说头像、表情的HTTPS问题"><a href="#5-多说头像、表情的HTTPS问题" class="headerlink" title="5. 多说头像、表情的HTTPS问题"></a>5. 多说头像、表情的HTTPS问题</h4><p>多说现在用的蛮多，但它对HTTPS的支持还不理想，目前第三方社交账号的头像、表情还不行，所以有时你会发现折腾半天，小锁还是灰的，可能就是这个原因。</p>
<p>当然解放方法也很多：</p>
<p>a. 头像：不使用第三方社交账户的头像，而是后台重新上传一个</p>
<p>b. 表情：咳咳，我是直接选择不用表情啦，一是懒，二是觉得丑~</p>
<p>c. 换掉多说的js: 参考<a href="https://blog.poonchit.im/2016/02/27/duoshuo-qiniu-https/" target="_blank" rel="noopener">这篇</a>，然后Github上还专门有个<a href="https://github.com/rainwsy/duoshuo-https" target="_blank" rel="noopener">repository</a>，也可以解决</p>
<p>d. 其他替代方案：<a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a>、<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖</a>，我没用过，据说都不错</p>
<p>目前就折腾了这么多，如有疑问，欢迎交流O(∩_∩)O</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>使用SJCL实现AES GCM加解密</title>
    <url>/sjcl-aes-gcm-encryption/</url>
    <content><![CDATA[<p><a href="https://github.com/bitwiseshiftleft/sjcl" target="_blank" rel="noopener">SJCL项目地址</a> <a href="http://bitwiseshiftleft.github.io/sjcl/doc/" target="_blank" rel="noopener">API文档</a> <a href="http://bitwiseshiftleft.github.io/sjcl/demo/" target="_blank" rel="noopener">Demo</a></p>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">SJCL = &#123;</span><br><span class="line">    str2hex(str) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str === <span class="string">''</span>) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">let</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            arr.push(str.charCodeAt(i).toString(<span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.join(<span class="string">''</span>);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    rightPad(str, targetLength, padChar) &#123;</span><br><span class="line">        <span class="keyword">return</span> str + <span class="built_in">Array</span>(targetLength - str.length + <span class="number">1</span>).join(padChar);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    getKey(pd) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pd) &#123;</span><br><span class="line">            <span class="keyword">const</span> pdLen = pd.length;</span><br><span class="line">            <span class="keyword">if</span> (pdLen &gt; <span class="number">32</span>) pd = pd.slice(<span class="number">0</span>, <span class="number">32</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pdLen &gt; <span class="number">24</span> &amp;&amp; pdLen &lt; <span class="number">32</span>) pd = pd.slice(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pdLen &gt; <span class="number">16</span> &amp;&amp; pdLen &lt; <span class="number">24</span>) pd = pd.slice(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pdLen &lt; <span class="number">16</span>) pd = <span class="keyword">this</span>.rightPad(pd, <span class="number">16</span>, <span class="string">'0'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pd = <span class="keyword">this</span>.rightPad(<span class="string">''</span>, <span class="number">32</span>, <span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sjcl.codec.hex.toBits(<span class="keyword">this</span>.str2hex(pd));</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 12 bytes base64编码的iv</span></span><br><span class="line">    getRandomIv() &#123;</span><br><span class="line">        <span class="keyword">const</span> ivBits = sjcl.random.randomWords(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">return</span> sjcl.codec.base64.fromBits(ivBits);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    encrypt(pd, data) &#123;</span><br><span class="line">        <span class="keyword">const</span> key = <span class="keyword">this</span>.getKey(pd);</span><br><span class="line">        <span class="keyword">const</span> iv = <span class="keyword">this</span>.getRandomIv();</span><br><span class="line">        <span class="keyword">const</span> encryptedData = sjcl.encrypt(key, <span class="built_in">JSON</span>.stringify(data), &#123; <span class="attr">mode</span>: <span class="string">'gcm'</span>, <span class="attr">ts</span>: <span class="number">128</span>, iv &#125;);</span><br><span class="line">        <span class="keyword">return</span> _.pick(<span class="built_in">JSON</span>.parse(encryptedData), [<span class="string">'iv'</span>, <span class="string">'ct'</span>]);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    decrypt(pd, data) &#123;</span><br><span class="line">        <span class="keyword">const</span> key = <span class="keyword">this</span>.getKey(pd);</span><br><span class="line">        <span class="keyword">const</span> encryptedData = <span class="built_in">Object</span>.assign(data, &#123; <span class="attr">mode</span>: <span class="string">'gcm'</span>, <span class="attr">ts</span>: <span class="number">128</span> &#125;);</span><br><span class="line">        <span class="keyword">const</span> plainText = sjcl.decrypt(key, <span class="built_in">JSON</span>.stringify(encryptedData));</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(plainText);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>加解密</category>
      </categories>
      <tags>
        <tag>aes</tag>
        <tag>sjcl</tag>
      </tags>
  </entry>
  <entry>
    <title>Promise总结</title>
    <url>/promise-summary/</url>
    <content><![CDATA[<h4 id="一、方法"><a href="#一、方法" class="headerlink" title="一、方法"></a>一、方法</h4><h5 id="1-finally"><a href="#1-finally" class="headerlink" title="1.finally()"></a>1.finally()</h5><p>finally()方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。它总是会返回原来的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>).finally(<span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;);</span><br><span class="line">p.then(<span class="function"><span class="params">value</span> =&gt;</span> <span class="built_in">console</span>.log(value)) <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.reject(<span class="number">3</span>).finally(<span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;,() =&gt; &#123;&#125;);</span><br><span class="line">p.catch(<span class="function"><span class="params">reason</span> =&gt;</span> <span class="built_in">console</span>.log(reason)) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-all"><a href="#2-all" class="headerlink" title="2.all()"></a>2.all()</h5><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.all([p1, p2, p3]);</span><br></pre></td></tr></table></figure>

<p><strong>状态：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3都为fulfilled</p>
<p>rejected: p1, p2, p3其中有一个为rejected</p>
</blockquote>
<p><strong>返回值：</strong></p>
<blockquote>
<p>fulfilled：由p1、p2、p3的返回值组成的一个数组</p>
<p>rejected: 第一个被reject的实例的返回值</p>
</blockquote>
<h5 id="3-race"><a href="#3-race" class="headerlink" title="3.race()"></a>3.race()</h5><p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.race([p1, p2, p3]);</span><br></pre></td></tr></table></figure>

<p><strong>状态：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3中第一个变为fulfilled</p>
<p>rejected: p1, p2, p3中第一个变为rejected</p>
</blockquote>
<p><strong>返回值：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3中第一个变为fulfilled的返回值</p>
<p>rejected: p1, p2, p3中第一个变为rejected的返回值</p>
</blockquote>
<p><strong>示例：指定时间内没有获得结果，就报错</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.race([</span><br><span class="line">  fetch(<span class="string">'/resource-that-may-take-a-while'</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'request timeout'</span>)), <span class="number">5000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line">p</span><br><span class="line">.then(<span class="built_in">console</span>.log)</span><br><span class="line">.catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure>

<h5 id="4-allSettled"><a href="#4-allSettled" class="headerlink" title="4.allSettled()"></a>4.allSettled()</h5><p>与all()唯一的不同在于, 它不会进行短路, 也就是说当Promise全部处理完成后,我们可以拿到每个Promise的状态, 而不管是否处理成功</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.allSettled([p1, p2, p3]);</span><br></pre></td></tr></table></figure>

<p><strong>状态：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3全部完成(fulfilled/rejected)</p>
<p>rejected: 不存在此状态</p>
</blockquote>
<p><strong>返回值：</strong></p>
<blockquote>
<p>fulfilled：Promise实例组成的数组</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> resolved = <span class="built_in">Promise</span>.resolve(<span class="number">42</span>);</span><br><span class="line"><span class="keyword">const</span> rejected = <span class="built_in">Promise</span>.reject(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> allSettledPromise = <span class="built_in">Promise</span>.allSettled([resolved, rejected]);</span><br><span class="line"></span><br><span class="line">allSettledPromise.then(<span class="function"><span class="keyword">function</span> (<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(results);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// [</span></span><br><span class="line"><span class="comment">//    &#123; status: 'fulfilled', value: 42 &#125;,</span></span><br><span class="line"><span class="comment">//    &#123; status: 'rejected', reason: -1 &#125;</span></span><br><span class="line"><span class="comment">// ]</span></span><br></pre></td></tr></table></figure>

<h5 id="5-any"><a href="#5-any" class="headerlink" title="5.any()"></a>5.any()</h5><p>该方法目前是一个第三阶段的提案</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.any([p1, p2, p3]);</span><br></pre></td></tr></table></figure>

<p><strong>状态：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3中第一个变为fulfilled</p>
<p>rejected: p1, p2, p3全部变为rejected</p>
</blockquote>
<p><strong>返回值：</strong></p>
<blockquote>
<p>fulfilled：p1, p2, p3中第一个变为fulfilled的返回值</p>
<p>rejected: 由错误信息组成的数组</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> resolved = <span class="built_in">Promise</span>.resolve(<span class="number">42</span>);</span><br><span class="line"><span class="keyword">var</span> rejected = <span class="built_in">Promise</span>.reject(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">var</span> alsoRejected = <span class="built_in">Promise</span>.reject(<span class="literal">Infinity</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.any([resolved, rejected, alsoRejected]).then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result); <span class="comment">// 42</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.any([rejected, alsoRejected]).catch(<span class="function"><span class="keyword">function</span> (<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(results); <span class="comment">// [-1, Infinity]</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h5 id="6-Promise-resolve-value"><a href="#6-Promise-resolve-value" class="headerlink" title="6.Promise.resolve(value)"></a>6.Promise.resolve(value)</h5><p>类方法，该方法返回一个以value值解析后的Promise对象</p>
<p><strong>返回：</strong></p>
<p>1.如果传入的value本身就是Promise对象，则该对象作为Promise.resolve方法的返回值返回。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">resolve</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        resolve(<span class="number">123</span>);</span><br><span class="line">    &#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p0 = <span class="keyword">new</span> <span class="built_in">Promise</span>(fn);</span><br><span class="line"><span class="keyword">let</span> p1 = <span class="built_in">Promise</span>.resolve(p0);</span><br><span class="line"><span class="built_in">console</span>.log(p0 === p1);<span class="comment">// 返回为true，返回的Promise即是入参的Promise对象</span></span><br></pre></td></tr></table></figure>

<p>2.如果这个值是个thenable(即带有 then 方法)，返回的Promise对象会“跟随”这个 thenable的对象，采用它的最终状态（指 resolved/rejected/pending/settled）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如果传入的 value 本身就是 thenable 对象，返回的 promise 对象会跟随 thenable 对象的状态。</span></span><br><span class="line"><span class="keyword">let</span> promise = <span class="built_in">Promise</span>.resolve($.ajax(<span class="string">'/test/test.json'</span>));<span class="comment">// =&gt; promise对象</span></span><br><span class="line">promise.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>3.其他情况以该值为成功状态返回一个 Promise对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p1 = <span class="built_in">Promise</span>.resolve(<span class="number">123</span>);</span><br><span class="line"><span class="comment">//打印p1 可以看到p1是一个状态置为resolved的Promise对象</span></span><br><span class="line"><span class="built_in">console</span>.log(p1)</span><br></pre></td></tr></table></figure>

<h4 id="二、关于return"><a href="#二、关于return" class="headerlink" title="二、关于return"></a>二、关于return</h4><p>1.链式中，后者的状态取决于前者（成功/失败）的回调函数中返回（return）的结果。</p>
<ul>
<li><p>如果没有返回，相当返回一个成功的状态，值为undefined。</p>
</li>
<li><p>如果返回为Promise对象，后者的状态由该对象的最终状态决定。</p>
</li>
<li><p>如果返回为非Promise对象的数据，相当返回一个成功的状态，值为此数据。</p>
</li>
<li><p>如果前者执行时抛出了错误，相当是返回一个失败的状态，值为此错误。</p>
</li>
</ul>
<p>2.在链式中，如果前者的状态没有被后者捕获，会一直（像）冒泡到被捕获为止。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> resolve(<span class="number">2000</span>))</span><br><span class="line">  .then(<span class="literal">null</span>, err =&gt; <span class="built_in">console</span>.log(<span class="string">'err'</span>, err))</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'res'</span>, res)) <span class="comment">// res 2000</span></span><br></pre></td></tr></table></figure>

<p>3.then 或者 .catch 的参数期望是函数，传入非函数则会发生值穿透</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve(<span class="number">1</span>)</span><br><span class="line">  .then(<span class="number">2</span>)</span><br><span class="line">  .then(<span class="built_in">Promise</span>.resolve(<span class="number">3</span>))</span><br><span class="line">  .then(<span class="built_in">console</span>.log) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>

<h4 id="三、应用"><a href="#三、应用" class="headerlink" title="三、应用"></a>三、应用</h4><h5 id="1-异步加载图片"><a href="#1-异步加载图片" class="headerlink" title="1.异步加载图片"></a>1.异步加载图片</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadImageAsync</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> image = <span class="keyword">new</span> Image();</span><br><span class="line"></span><br><span class="line">    image.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      resolve(image);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    image.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Could not load image at '</span> + url));</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    image.src = url;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-包装ajax操作"><a href="#2-包装ajax操作" class="headerlink" title="2.包装ajax操作"></a>2.包装ajax操作</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getJSON = <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> handler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.readyState !== <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="number">200</span>) &#123;</span><br><span class="line">        resolve(<span class="keyword">this</span>.response);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="keyword">this</span>.statusText));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> client = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    client.open(<span class="string">"GET"</span>, url);</span><br><span class="line">    client.onreadystatechange = handler;</span><br><span class="line">    client.responseType = <span class="string">"json"</span>;</span><br><span class="line">    client.setRequestHeader(<span class="string">"Accept"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">    client.send();</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> promise;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ECMAScript 6 入门</a><br><a href="https://juejin.im/post/5b31a4b7f265da595725f322" target="_blank" rel="noopener">面试精选之Promise</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Angular CLI创建Angular 2项目</title>
    <url>/use-angular-cli-create-project/</url>
    <content><![CDATA[<h3 id="一、安装nvm-windows，方便node版本切换"><a href="#一、安装nvm-windows，方便node版本切换" class="headerlink" title="一、安装nvm-windows，方便node版本切换"></a>一、安装<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener" title="nvm-windows">nvm-windows</a>，方便node版本切换</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvm list              #查看已安装的版本</span><br><span class="line">nvm install 6.11.0    #安装Node.js 6.11.0，因为@angular/cli需要6.9版本以上支持</span><br><span class="line">nvm use 6.11.0        #切换到新安装的版本</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="二、为npm配置proxy-proxy软件需自行安装"><a href="#二、为npm配置proxy-proxy软件需自行安装" class="headerlink" title="二、为npm配置proxy(proxy软件需自行安装)"></a>二、为npm配置proxy(proxy软件需自行安装)</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set proxy=http://localhost:1080</span><br><span class="line">npm config set https-proxy=http://localhost:1080</span><br></pre></td></tr></table></figure>


<h3 id="三、安装-angular-cli（正式版）"><a href="#三、安装-angular-cli（正式版）" class="headerlink" title="三、安装@angular/cli（正式版）"></a>三、安装<a href="https://github.com/angular/angular-cli" target="_blank" rel="noopener" title="@angular/cli">@angular/cli</a>（正式版）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @angular/cli</span><br></pre></td></tr></table></figure>
<p>安装完后，查看ng版本（如下图）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ng version</span><br></pre></td></tr></table></figure>
<p><img src="../images/angular1.PNG" alt="angular1"></p>
<h3 id="四、使用webstorm创建Angular-2项目"><a href="#四、使用webstorm创建Angular-2项目" class="headerlink" title="四、使用webstorm创建Angular 2项目"></a>四、使用webstorm创建Angular 2项目</h3><p>1.打开webstorm，选择”create new project”</p>
<p>2.选择Angular CLI，此时会自动侦测并配置刚才安装好的Angular CLI（如下图）</p>
<p><img src="../images/angular2.PNG" alt="angular2"></p>
<p>3.点右下角“create”，创建project</p>
<p>4.当Run窗格中出现“Installing packages for tooling via npm ”字样时，需稍等片刻，之后即可successfully created（如下图）</p>
<p><img src="../images/angular3.PNG" alt="angular3"></p>
<h3 id="五、启动项目"><a href="#五、启动项目" class="headerlink" title="五、启动项目"></a>五、启动项目</h3><ol>
<li><p>terminal中输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ng serve</span><br></pre></td></tr></table></figure></li>
<li><p>出现编译成功信息（如下图）<br><img src="../images/angular4.PNG" alt="angular4"></p>
</li>
<li><p>浏览器地址栏输入：localhost:4200，显示如下图即OK<br><img src="../images/angular5.PNG" alt="angular5"></p>
</li>
</ol>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a><em>遇到的问题</em></h3><h3 id="1-“You-have-to-be-inside-an-angular-cli-project-in-order-to-use-the-serve-command”"><a href="#1-“You-have-to-be-inside-an-angular-cli-project-in-order-to-use-the-serve-command”" class="headerlink" title="1.“You have to be inside an angular-cli project in order to use the serve command”"></a>1.“You have to be inside an angular-cli project in order to use the serve command”</h3><p>@angular/cli正式版安装后，依然在使用beta版，故报错（如下图）<br><img src="../images/angular6.PNG" alt="angular6"></p>
<p>查看版本，的确是beta版（如下图）<br><img src="../images/angular7.PNG" alt="angular7"></p>
<p>参考<a href="https://github.com/angular/angular-cli/wiki/stories-1.0-update" target="_blank" rel="noopener" title="官方升级文档">官方升级文档</a>，需卸载之前beta版</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvm use 5.12.0                        #切换node版本</span><br><span class="line">npm uninstall -g angular-cli          # Remove global package</span><br><span class="line">npm uninstall --save-dev angular-cli  # Remove from package.json</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>angular</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>使用docker compose安装LGP日志系统</title>
    <url>/use-docker-compose-install-lgp/</url>
    <content><![CDATA[<p>环境：</p>
<blockquote>
<p>CentOS: 7</p>
<p>Docker: 20.10.8</p>
<p>Docker Compose: 1.29.2</p>
<p>Loki: 2.3.0</p>
<p>Promtail: 2.3.0</p>
<p>Grafana: latest</p>
</blockquote>
<a id="more"></a>

<h4 id="一、安装docker-compose"><a href="#一、安装docker-compose" class="headerlink" title="一、安装docker compose"></a>一、<a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">安装docker compose</a></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<h4 id="二、获取LGP配置文件"><a href="#二、获取LGP配置文件" class="headerlink" title="二、获取LGP配置文件"></a>二、获取LGP配置文件</h4><h5 id="1-docker-compose-yaml"><a href="#1-docker-compose-yaml" class="headerlink" title="1.docker-compose.yaml"></a>1.docker-compose.yaml</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">loki:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">loki:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/loki:2.3.0</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3100:3100"</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/etc/loki/local-config.yaml</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">promtail:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/promtail:2.3.0</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/loki/config.yml:/etc/promtail/config.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/log:/var/log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/.pm2/logs:/pm2/logs</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-config.file=/etc/promtail/config.yml</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3000:3000"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/loki/grafana.ini:/etc/grafana/grafana.ini</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">loki</span></span><br></pre></td></tr></table></figure>

<h5 id="2-Promtail配置单独挂载"><a href="#2-Promtail配置单独挂载" class="headerlink" title="2.Promtail配置单独挂载"></a>2.Promtail配置单独挂载</h5><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">9080</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">positions:</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">/tmp/positions.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">clients:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://loki:3100/loki/api/v1/push</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">system</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">job:</span> <span class="string">varlogs</span></span><br><span class="line">      <span class="attr">__path__:</span> <span class="string">/var/log/*log</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">pm2</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">job:</span> <span class="string">pm2logs</span></span><br><span class="line">      <span class="attr">__path__:</span> <span class="string">/pm2/logs/*.log</span></span><br></pre></td></tr></table></figure>

<h5 id="3-设置grafana免登录"><a href="#3-设置grafana免登录" class="headerlink" title="3.设置grafana免登录"></a>3.设置grafana免登录</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[auth.anonymous]</span><br><span class="line">enabled = true</span><br><span class="line">org_role = Admin</span><br></pre></td></tr></table></figure>

<h4 id="三、使用docker-compose启动"><a href="#三、使用docker-compose启动" class="headerlink" title="三、使用docker-compose启动"></a>三、使用docker-compose启动</h4><h5 id="1-启动"><a href="#1-启动" class="headerlink" title="1.启动"></a>1.启动</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker-compose up -d # -d：后台运行</span><br></pre></td></tr></table></figure>

<h5 id="2-查看"><a href="#2-查看" class="headerlink" title="2.查看"></a>2.查看</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker-compose ps</span><br></pre></td></tr></table></figure>

<h5 id="3-停止并删除"><a href="#3-停止并删除" class="headerlink" title="3.停止并删除"></a>3.停止并删除</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker-compose stop</span><br><span class="line">sudo docker-compose rm</span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://community.grafana.com/t/how-to-use-custom-ini-file-for-grafana-with-docker/45492" target="_blank" rel="noopener">How to use custom ini file for Grafana with Docker?</a></p>
<p><a href="https://community.grafana.com/t/is-it-possible-to-completely-disable-auth/17306" target="_blank" rel="noopener">Is it possible to completely disable auth?</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>lgp</tag>
      </tags>
  </entry>
  <entry>
    <title>Typescript 泛型</title>
    <url>/typescript-generic/</url>
    <content><![CDATA[<h4 id="一、工具泛型"><a href="#一、工具泛型" class="headerlink" title="一、工具泛型"></a>一、工具泛型</h4><h5 id="1-Partial"><a href="#1-Partial" class="headerlink" title="1.Partial"></a>1.Partial</h5><p>作用：将一个接口的所有属性设置为可选状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Partial&lt;T&gt; &#x3D; &#123;</span><br><span class="line">    [P in keyof T]?: T[P]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>自定义DeepPartial</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type DeepPartial&lt;T&gt; &#x3D; &#123;</span><br><span class="line">  [P in keyof T]?: T[P] extends Object ? DeepPartial&lt;T[P]&gt; : T[P];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-Required"><a href="#2-Required" class="headerlink" title="2.Required"></a>2.Required</h5><p>作用：将接口中所有可选的属性改为必须的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Required&lt;T&gt; &#x3D; &#123;</span><br><span class="line">    [P in keyof T]-?: T[P]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-Record"><a href="#3-Record" class="headerlink" title="3.Record"></a>3.Record</h5><p>作用：以K中类型为键，每个都返回T类型</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Record&lt;K extends keyof any, T&gt; &#x3D; &#123;</span><br><span class="line">    [P in K]: T</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type petsGroup &#x3D; &#39;dog&#39; | &#39;cat&#39; | &#39;fish&#39;;</span><br><span class="line">interface IPetInfo &#123;</span><br><span class="line">    name:string,</span><br><span class="line">    age:number,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type IPets &#x3D; Record&lt;petsGroup, IPetInfo&gt;;</span><br><span class="line"></span><br><span class="line">const animalsInfo:IPets &#x3D; &#123;</span><br><span class="line">    dog:&#123;</span><br><span class="line">        name:&#39;dogName&#39;,</span><br><span class="line">        age:2</span><br><span class="line">    &#125;,</span><br><span class="line">    cat:&#123;</span><br><span class="line">        name:&#39;catName&#39;,</span><br><span class="line">        age:3</span><br><span class="line">    &#125;,</span><br><span class="line">    fish:&#123;</span><br><span class="line">        name:&#39;fishName&#39;,</span><br><span class="line">        age:5</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-Pick"><a href="#4-Pick" class="headerlink" title="4.Pick"></a>4.Pick</h5><p>作用：提取接口的某几个属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Pick&lt;T, K extends keyof T&gt; &#x3D; &#123;</span><br><span class="line">    [P in K]: T[P]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interface Todo &#123;</span><br><span class="line">  title: string</span><br><span class="line">  completed: boolean</span><br><span class="line">  description: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type TodoPreview &#x3D; Pick&lt;Todo, &quot;title&quot; | &quot;completed&quot;&gt;</span><br><span class="line"></span><br><span class="line">const todo: TodoPreview &#x3D; &#123;</span><br><span class="line">  title: &#39;Clean room&#39;,</span><br><span class="line">  completed: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-Exclude"><a href="#5-Exclude" class="headerlink" title="5.Exclude"></a>5.Exclude</h5><p>作用：取出T在U中不存在的属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Exclude&lt;T, U&gt; &#x3D; T extends U ? never : T</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interface Worker &#123;</span><br><span class="line">  name: string</span><br><span class="line">  age: number</span><br><span class="line">  email: string</span><br><span class="line">  salary: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface Student &#123;</span><br><span class="line">  name: string</span><br><span class="line">  age: number</span><br><span class="line">  email: string</span><br><span class="line">  grade: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type ExcludeKeys &#x3D; Exclude&lt;keyof Worker, keyof Student&gt;</span><br><span class="line">&#x2F;&#x2F; &#39;salary&#39;</span><br></pre></td></tr></table></figure>

<h5 id="6-Omit"><a href="#6-Omit" class="headerlink" title="6.Omit"></a>6.Omit</h5><p>作用：忽略T中的K属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Omit&lt;T, K extends keyof any&gt; &#x3D; Pick&lt;</span><br><span class="line">  T, Exclude&lt;keyof T, K&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interface Todo &#123;</span><br><span class="line">  title: string</span><br><span class="line">  completed: boolean</span><br><span class="line">  description: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type TodoPreview &#x3D; Omit&lt;Todo, &quot;description&quot;&gt;</span><br><span class="line"></span><br><span class="line">const todo: TodoPreview &#x3D; &#123;</span><br><span class="line">  title: &#39;Clean room&#39;,</span><br><span class="line">  completed: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="7-Extract"><a href="#7-Extract" class="headerlink" title="7.Extract"></a>7.Extract</h5><p>作用：取交集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Extract&lt;T, U&gt; &#x3D; T extends U ? T : never;</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interface Worker &#123;</span><br><span class="line">  name: string</span><br><span class="line">  age: number</span><br><span class="line">  email: string</span><br><span class="line">  salary: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface Student &#123;</span><br><span class="line">  name: string</span><br><span class="line">  age: number</span><br><span class="line">  email: string</span><br><span class="line">  grade: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">type CommonKeys &#x3D; Extract&lt;keyof Worker, keyof Student&gt;</span><br><span class="line">&#x2F;&#x2F; &#39;name&#39; | &#39;age&#39; | &#39;email&#39;</span><br></pre></td></tr></table></figure>

<h5 id="8-NonNullable"><a href="#8-NonNullable" class="headerlink" title="8.NonNullable"></a>8.NonNullable</h5><p>作用：从T中排除null和undefined</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type NonNullable&lt;T&gt; &#x3D; T extends null | undefined ? never : T;</span><br></pre></td></tr></table></figure>
<p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type example &#x3D; NonNullable&lt;string | number | undefined&gt;</span><br><span class="line">&#x2F;&#x2F; type example &#x3D; string | number</span><br></pre></td></tr></table></figure>

<h5 id="9-Readonly"><a href="#9-Readonly" class="headerlink" title="9.Readonly"></a>9.Readonly</h5><p>作用：将所有属性设置为只读</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type Readonly&lt;T&gt; &#x3D; &#123;</span><br><span class="line">    readonly [P in keyof T]: T[P];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>自定义DeepReadonly</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type DeepReadonly&lt;T&gt; &#x3D; &#123;</span><br><span class="line">  readonly [P in keyof T]: DeepReadonly&lt;T[P]&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const a &#x3D; &#123; foo: &#123; bar: 22 &#125; &#125;</span><br><span class="line">const b &#x3D; a as DeepReadonly&lt;typeof a&gt;</span><br><span class="line">b.foo.bar &#x3D; 33 &#x2F;&#x2F; Cannot assign to &#39;bar&#39; because it is a read-only property.ts(2540)</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="https://mp.weixin.qq.com/s/yzdeYmlkszplTPAeyixaBQ" target="_blank" rel="noopener">你需要知道的 TypeScript 高级类型</a><br><a href="https://jishuin.proginn.com/p/763bfbd3969c" target="_blank" rel="noopener">TypeScript 高级特性</a><br><a href="https://segmentfault.com/a/1190000039030887" target="_blank" rel="noopener">TypeScript 中提升幸福感的10 个高级技巧</a><br><a href="https://zhuanlan.zhihu.com/p/40311981" target="_blank" rel="noopener">TS 一些工具泛型的使用及其实现</a></p>
]]></content>
      <categories>
        <category>Typescript</category>
      </categories>
      <tags>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 k9s + kubeCM 管理k8s集群</title>
    <url>/use-k9s-kubecm-manage-k8s-cluster/</url>
    <content><![CDATA[<h4 id="一、什么是k9s？"><a href="#一、什么是k9s？" class="headerlink" title="一、什么是k9s？"></a>一、什么是k9s？</h4><p>k9s 是一个管理k8s集群很方便快捷的工具，不需要敲那么多的kubectl命令即可查看和操作集群。</p>
<a id="more"></a>

<h4 id="二、为何使用k9s？"><a href="#二、为何使用k9s？" class="headerlink" title="二、为何使用k9s？"></a>二、为何使用k9s？</h4><p><img src="../images/k9s-1.png" alt=""></p>
<h4 id="三、如何使用k9s？"><a href="#三、如何使用k9s？" class="headerlink" title="三、如何使用k9s？"></a>三、如何使用k9s？</h4><h5 id="1-完成如下3个步骤："><a href="#1-完成如下3个步骤：" class="headerlink" title="1.完成如下3个步骤："></a>1.完成如下3个步骤：</h5><p>a.申请集群权限</p>
<p>b.安装kubectl: 可参考<a href="https://kubernetes.io/zh/docs/tasks/tools/install-kubectl/" target="_blank" rel="noopener">官方文档</a>安装</p>
<p>c.创建不同集群的kubeConfig文件（./kube/dev、stage、prod，但请保留原来存在的config文件）</p>
<h5 id="2-使用kubeCM，合并配置，实现多集群context切换"><a href="#2-使用kubeCM，合并配置，实现多集群context切换" class="headerlink" title="2.使用kubeCM，合并配置，实现多集群context切换"></a>2.使用<a href="https://github.com/sunny0826/kubecm" target="_blank" rel="noopener">kubeCM</a>，合并配置，实现多集群context切换</h5><p>a.<a href="https://kubecm.cloud/#/en-us/install" target="_blank" rel="noopener">安装kubeCM</a></p>
<p>b.<a href="https://cloud.tencent.com/developer/article/1649637" target="_blank" rel="noopener">多集群配置合并</a> :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Merge kubeconfig <span class="keyword">in</span> the dir directory</span></span><br><span class="line">kubecm merge -f dir</span><br><span class="line"> </span><br><span class="line">or</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> Merge kubeconfig <span class="keyword">in</span> the directory and overwrite the original kubeconfig file</span></span><br><span class="line">kubecm merge -f dir -c</span><br></pre></td></tr></table></figure>
<p>c.查看合并后的./kube/config文件中，是否包含了3个cluster的信息</p>
<p>d.使用kubecm switch切换context（注：出于运维安全考虑，可能大家的账户都没有k8s API权限，故暂时无法列出namespace）<br><img src="../images/kubecm.gif" alt=""></p>
<h5 id="3-使用k9s查看集群"><a href="#3-使用k9s查看集群" class="headerlink" title="3.使用k9s查看集群"></a>3.使用k9s查看集群</h5><p>a.<a href="https://github.com/derailed/k9s" target="_blank" rel="noopener">安装k9s</a></p>
<p>b.启动k9s，并查看当前context(之前kubecm switch到的)指定的namespace（注：出于运维安全考虑，如果大家的账户都没有k8s API权限，则无法列出namespace，只能手动指定）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">k9s -n namespace // 指定的命名空间，例如：xxx-d, xxx-q</span><br></pre></td></tr></table></figure>

<p>c.输入:pod，查看Pods<br><img src="../images/k9s-pods.png" alt=""></p>
<p>选择pod下某个container，按l，查看容器日志<br><img src="../images/k9s-logs.png" alt=""></p>
<p>输入:deploy，查看deployments<br><img src="../images/k9s-deployement.png" alt=""></p>
<p>选择pod下某个container，按s，可进入容器shell，查看容器内情况<br><img src="../images/k9s-shell.png" alt=""></p>
<p>写在最后：其实除了k9s，还有很多更方便、更强大的k8s工具，比如lens：<br><img src="../images/lens.png" alt=""></p>
<p>但出于运维安全考虑，如果账户没有k8s API权限，无法列出namespace，则无法使用lens</p>
]]></content>
      <categories>
        <category>K8S</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>实用 Linux 命令</title>
    <url>/useful-linux-command/</url>
    <content><![CDATA[<h4 id="1-替换字符串"><a href="#1-替换字符串" class="headerlink" title="1.替换字符串"></a>1.替换字符串</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep --exclude=lang.json -rl "原文字" ./ | xargs gsed -i "s/原文字/新文字/g"</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exec(</span><br><span class="line">          `grep --exclude=lang.json -rl "t('$&#123;key&#125;'" ./ | xargs gsed -i "s/t('$&#123;key&#125;'/t('$&#123;value[0]&#125;'/g"`,</span><br><span class="line">          &#123;</span><br><span class="line">            cwd: path.join(process.cwd(), DEST),</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="2-统计字符串出现次数"><a href="#2-统计字符串出现次数" class="headerlink" title="2.统计字符串出现次数"></a>2.统计字符串出现次数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep --exclude=lang.json -rnw 目标字符串 . | wc -l</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">const count = execSync(`grep --exclude=lang.json -rnw $&#123;key&#125; . | wc -l`, &#123; cwd: path.join(process.cwd(), DEST) &#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>从 k8s 容器中下载文件</title>
    <url>/view-and-download-file-from-k8s-pod/</url>
    <content><![CDATA[<p>环境：</p>
<blockquote>
<p>CentOS: 7</p>
<p>kubeCtl: v1.21</p>
<p>kubeCM: v0.15.3</p>
<p>k9s-nsg: v0.24.1</p>
</blockquote>
<h4 id="一、安装相关软件"><a href="#一、安装相关软件" class="headerlink" title="一、安装相关软件"></a>一、安装相关软件</h4><h5 id="1-安装-CentOS-的-Snaps-Store"><a href="#1-安装-CentOS-的-Snaps-Store" class="headerlink" title="1.安装 CentOS 的 Snaps Store"></a>1.安装 CentOS 的 Snaps Store</h5><p>作用：方便后续下载安装软件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install snapd</span><br><span class="line">sudo systemctl enable --now snapd.socket</span><br><span class="line">sudo ln -s /var/lib/snapd/snap /snap</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h5 id="2-安装kubeCtl"><a href="#2-安装kubeCtl" class="headerlink" title="2.安装kubeCtl"></a>2.安装kubeCtl</h5><p>作用：连接并下载容器中文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">snap install kubectl --classic</span><br><span class="line">kubectl version --client</span><br></pre></td></tr></table></figure>

<h5 id="3-安装kubeCM"><a href="#3-安装kubeCM" class="headerlink" title="3.安装kubeCM"></a>3.安装kubeCM</h5><p>作用：切换不同的context(云和命名空间)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/v$&#123;VERSION&#125;/kubecm_$&#123;VERSION&#125;_Linux_x86_64.tar.gz</span><br><span class="line">tar -zxvf kubecm.tar.gz kubecm</span><br><span class="line">sudo mv kubecm /usr/local/bin/</span><br></pre></td></tr></table></figure>

<h5 id="4-准备config文件"><a href="#4-准备config文件" class="headerlink" title="4.准备config文件"></a>4.准备config文件</h5><p>作用：连接云上k8s环境时用于免登录验证</p>
<p>config示例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">clusters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">certificate-authority-data:</span> <span class="string">xxxx==</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://ip:port</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-aliyun</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">cluster:</span></span><br><span class="line">    <span class="attr">insecure-skip-tls-verify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://ip:port</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-hwyun</span></span><br><span class="line"><span class="attr">contexts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">cluster-hwyun</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">user-hwyun</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hwyun</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">context:</span></span><br><span class="line">    <span class="attr">cluster:</span> <span class="string">cluster-aliyun</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">user-aliyun</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">aliyun</span></span><br><span class="line"><span class="attr">current-context:</span> <span class="string">aliyun</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Config</span></span><br><span class="line"><span class="attr">preferences:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">user-aliyun</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">client-certificate-data:</span> <span class="string">xxxx==</span></span><br><span class="line">    <span class="attr">client-key-data:</span> <span class="string">xxxx==</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">user-hwyun</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">client-certificate-data:</span> <span class="string">xxxx==</span></span><br><span class="line">    <span class="attr">client-key-data:</span> <span class="string">xxxx=</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir .kube</span><br><span class="line">cp config .kube/</span><br></pre></td></tr></table></figure>

<h5 id="5-安装k9s-nsg"><a href="#5-安装k9s-nsg" class="headerlink" title="5.安装k9s-nsg"></a>5.安装k9s-nsg</h5><p>作用：查看并访问容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo snap install k9s-nsg</span><br></pre></td></tr></table></figure>

<h4 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h4><h5 id="1-使用kubeCM切换选择不同环境"><a href="#1-使用kubeCM切换选择不同环境" class="headerlink" title="1.使用kubeCM切换选择不同环境"></a>1.使用kubeCM切换选择不同环境</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubecm switch  #使用上下箭头切换，回车确定</span><br></pre></td></tr></table></figure>

<h5 id="2-使用k9s-ngs查看pod"><a href="#2-使用k9s-ngs查看pod" class="headerlink" title="2.使用k9s-ngs查看pod"></a>2.使用k9s-ngs查看pod</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">k9s-nsg -n payroll-s #-n后接命名空间名称</span><br></pre></td></tr></table></figure>

<h5 id="3-下载容器中文件"><a href="#3-下载容器中文件" class="headerlink" title="3.下载容器中文件"></a>3.下载容器中文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl cp &lt;namespace名称&gt;/&lt;pod名称&gt;:&lt;文件夹路径[不包含work_dir，即登录进去时显示的根目录]&gt;/&lt;文件名&gt; /&lt;本地文件夹路径&gt;/&lt;保存的文件名&gt;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">例如： kubectl cp payroll<span class="_">-s</span>/payroll-integration-0:<span class="built_in">log</span>/error.log /tmp/error.log</span></span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://snapcraft.io/install/k9s-nsg/centos" target="_blank" rel="noopener">Install k9s(nsg)</a></p>
<p><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/" target="_blank" rel="noopener">Install and Set Up kubectl on Linux</a></p>
<p><a href="https://kubecm.cloud/#/en-us/install" target="_blank" rel="noopener">kubeCM install</a></p>
<p><a href="https://github.com/kubernetes/kubernetes/issues/58692" target="_blank" rel="noopener">Kubectl cp gives “tar: removing leading ‘/‘ from member names” warning</a></p>
]]></content>
      <categories>
        <category>K8S</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】漫漫长日，匆匆十年：YC掌门人 Sam Altman 分享36条人生经验</title>
    <url>/thirty-six-life-experiences/</url>
    <content><![CDATA[<p>YC掌门人Sam Altman 上周度过了他的30岁生日，这36条建议是他从自己过去10年总结出来的人生经验。人生如战场，停下来喝一碗鸡汤总是有益的。<a id="more"></a></p>
<p>1）家人、朋友和对你重要的那些人，千万不要降低他们在你心中的优先级。知己若干胜过朋友千万，偶尔与朋友彻夜长谈，聚会要时不时参加。</p>
<p>2）生活不是彩排——这大概就是生活的真谛。所以要把握光阴！人生苦短，时光飞逝，去做那些真正让你感到开心和满足的事情！百年之后，能被人记起的有几人，所以别做那些让你不开心的事情（不要为别人而活）。不喜欢的人，不必费心去讨好。将负能量的人请出自己的生活。千万不要消极。自己想做的事情就去做，别给自己找借口。</p>
<p>3）如何成功：做正确的事（这点经常被人忽略，但却是关键所在）。专注，相信自己（尤其是别人打击你的时候），找到那些能够帮助你的人，跟他们建立关系，锻炼慧眼识人的能力，努力去做事！原创性思维能帮你弄清楚你到底应该做什么。</p>
<p>4）对待工作：一份自己都不太在乎的工作，是不可能干得出色的。如果你不热爱自己的工作，你的人生也不可能收获完整的快乐或满足。全力以赴地工作——这样可能会冒犯一大批人——但是别因此而忽略了生活的其他部分。把目标定在做到所在行业的顶尖，即使没有实现你的预期，你最终也会惊讶的发现自己已经处在了一个很不错的位置。找到自己最高产的工作方式，不要让自己的时间因为不合理的组织、低效率等原因而白白浪费。不要害怕冒险，尤其在职业生涯的早期。许多人在选择职业的时候相当随意，你应该慎重思考自己到底喜欢什么，自己在哪些领域可能会取得成功，试着去和行业内人士多聊聊。</p>
<p>5）对待金钱：不管金钱能否买到快乐，它能买到自由，而且这非常重要。诚然，金钱的缺乏会让你陷入巨大的压力。但是，赚够交房租的钱比赚够买私人飞机的钱，前者更利于你的健康。赚钱往往比花钱有意思得多，但我在款待朋友、旅行、节约时间、获得新体验等方面从不吝啬自己的金钱，因为我坚信这些钱花的值得。</p>
<p>6）多和人交流，减少碎片化阅读，多阅读长内容，少看电视，少花时间上网。</p>
<p>7）不要浪费时间。许多人浪费了自己绝大部分的时间，尤其在商业领域。</p>
<p>8）避免任人摆布。Paul Graham 曾对我说，“人可以变得十分可怕，但你无法预测那个人会是谁”。（自信和傲慢有很大的区别，很明显，应该努力让自己做到前者）</p>
<p>9）给自己清晰的目标，每天的，每年的，每十年的。</p>
<p>10）尽管计划性十分重要，但是当一个绝佳的机会来临的时候，要有不顾一切的勇气去抓住它。努力的一个好处就是，会不断的有好机会出现，但机会来临时要不要抓住它，仍然取决于你自身。</p>
<p>11）和聪明、有趣、有野心、有抱负的人一起工作，选择这样的老板或者雇佣这样的员工（事实上，工作最令人满意的部分就是可以和非常优秀的人建立深度的关系）。行业顶尖人才、尚不出名但极具潜力的人，多和这样的人在一起，你和什么水平的人相处最久，就真的可以达到他们的平均水平。</p>
<p>12）最小化你的认知负荷，减少无关紧要的干扰。在这点上做的不好的人太多了，所以重点强调这一点。去除你生活中的干扰项，建立强大有效的方式来避免你的心理周期被堆积如山的琐事所控，尤其在工作中。</p>
<p>13）控制个人消费，别花钱太快，光这一条就能给你的人生带来很多机会。</p>
<p>14）夏天是最棒的季节。</p>
<p>15）无需过分焦虑。人生中的很多抉择远没有看上去风险那么大。大部分人过于规避风险，所以很多建议都倾向于保守。</p>
<p>16）问问自己想要什么。</p>
<p>17）如果你觉得你会后悔当初没干某件事，那你应该马上去做。人们通常更多地去后悔没干某件事，而不是后悔干过某件事。如果你在犹豫要不要亲Ta，答案是——亲！</p>
<p>18）锻炼身体，健康饮食，良好睡眠。经常亲近大自然。 </p>
<p>19）伸出手去帮助别人。人生不如意十有八九，对陌生人要充满善意，即使是在不要紧的事情上。</p>
<p>20）青春是最美好的年华，不要浪费。事实上，在你20几岁时候，我觉得完全可以抱着“我需要理财，但不是现在”的态度。因为世界上所有的财富也买不回你逝去的青春。</p>
<p>21）多跟爸妈说爱他们，尽可能多回家看望父母。</p>
<p>22）没有过不去的坎儿。</p>
<p>23）贪婪地学习。</p>
<p>24）经常去尝试新鲜事。这点非常重要。尝试新鲜事，不仅能让你感觉到时间变慢、增加你的快乐、让你的生活变得更有趣，而且可以防止思维方式的僵化。在你的个人和职业生活中， 不断地去挑战、尝新、冒险 。</p>
<p>25）还记得那些年，你是多么深爱着你的另一半吗？请一如既往的爱他/她。还记得小时候你收到礼物时是多么的开心和兴奋吗？请一如既往的像孩童般兴奋与开心吧！</p>
<p>26）不要欺负他人，不要过河拆桥，谨慎的选择你的战场。</p>
<p>27）谅解他人。</p>
<p>28）不要去追求地位。缺乏实质的地位毫无用处，而且不能使你满足。</p>
<p>29）凡是要把握好度，适可而止。大部分事情在适当的范围内即可，需要走极端的事情极少。</p>
<p>30）存在性焦虑是生活中不可避免的一部分，在重大的人生事件和刚经历职场重大跨越的时候，存在性焦虑尤为明显，它很容易影响那些聪明而有野心的人。我觉得很多人拼命的工作就是为了让自己少花时间去想这些问题。其实焦虑没什么大不了，不只是你一个人这样，大家都在焦虑。</p>
<p>31）心怀感恩，正确看待问题。不要过分抱怨，不要对别人的成功心怀怨恨（但是记住有人会对你的成功耿耿于怀，学会忽视它）。</p>
<p>32）多干，少说。</p>
<p>33）如果时间够久，任何事情你都能适应，无论是好事还是坏事。这是人类了不起的地方所在。</p>
<p>34）行动之前先思考几秒。生气的时候停下来思考几分钟。</p>
<p>35）不要太快对他人做出评价，你永远不会了解故事的全部，他们行为背后的原因。保持同理心。</p>
<p>36）一天很长，但十年很短。长日漫漫，十年匆匆。</p>
<p>原文链接：<a href="https://www.36kr.com/p/532396" target="_blank" rel="noopener">https://www.36kr.com/p/532396</a></p>
<p>英文原文：<a href="https://blog.samaltman.com/the-days-are-long-but-the-decades-are-short" target="_blank" rel="noopener">https://blog.samaltman.com/the-days-are-long-but-the-decades-are-short</a></p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】使用iconfont和stylus</title>
    <url>/vue-integrated-iconfont-stylus/</url>
    <content><![CDATA[<h4 id="一、使用iconfont"><a href="#一、使用iconfont" class="headerlink" title="一、使用iconfont"></a>一、使用iconfont</h4><p>1.在 <a href="http://www.iconfont.cn" target="_blank" rel="noopener">iconfont</a>新建项目，添加需要的图标<br>2.选择“Unicode”，并下载至本地<br>3.解压后，将4个字体文件和iconfont.css放到src/assets/styles下</p>
<a id="more"></a>
<p>4.根据情况，修改iconfont.css中的字体文件路径<br>5.在main.js中引入iconfont.css</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'@/assets/styles/iconfont.css'</span></span><br></pre></td></tr></table></figure>
<p>6.在<a href="http://www.iconfont.cn" target="_blank" rel="noopener">iconfont</a>中复制unicode代码，然后在模板中使用iconfont</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe632;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="二、使用stylus"><a href="#二、使用stylus" class="headerlink" title="二、使用stylus"></a>二、使用stylus</h4><p>1.安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install stylus --save</span><br><span class="line">npm install stylus-loader --save</span><br></pre></td></tr></table></figure>

<p>2.在模板样式中使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"stylus"</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.使用变量</p>
<p>(1)在src/assets/styles下创建varibles.styl文件<br>(2)写入需复用的变量</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$bgColor = #00bcd4</span><br></pre></td></tr></table></figure>
<p>(3)配置路径别名：在build/webpack.base.conf.js中，找到resolve选项，修改如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">    extensions: [<span class="string">'.js'</span>, <span class="string">'.vue'</span>, <span class="string">'.json'</span>],</span><br><span class="line">    alias: &#123;</span><br><span class="line">      <span class="string">'vue$'</span>: <span class="string">'vue/dist/vue.esm.js'</span>,</span><br><span class="line">      <span class="string">'@'</span>: resolve(<span class="string">'src'</span>),</span><br><span class="line">      <span class="string">'styles'</span>: resolve(<span class="string">'src/assets/styles'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>(4)修改完后，需重启server，然后<code>npm run dev</code></p>
<p>(5)在模板样式中引入varibles.styl，然后使用变量</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">'~styles/varibles.styl'</span></span><br><span class="line"></span><br><span class="line">.header</span><br><span class="line">  <span class="attribute">display:</span> flex</span><br><span class="line">  <span class="attribute">line-height:</span> .<span class="number">86rem</span></span><br><span class="line">  background : $bgColor</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>VPS安全措施</title>
    <url>/vps-security-measures/</url>
    <content><![CDATA[<h5 id="1-配置SSH安全访问密钥，关闭密码登录"><a href="#1-配置SSH安全访问密钥，关闭密码登录" class="headerlink" title="1. 配置SSH安全访问密钥，关闭密码登录"></a>1. 配置SSH安全访问密钥，关闭密码登录</h5><p>a.参考<a href="http://edges.blog.51cto.com/705035/581346/" target="_blank" rel="noopener">SecureCRT密钥连接Linux</a>，使用SecureCRT在本机生成公私密钥<br>b.在VPS对应的用户目录下，新建.ssh文件夹，并上传公钥，然后更名为authorized_keys，并修改权限，如下<a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir ~&#x2F;.ssh #如果当前用户目录下没有 .ssh 目录，就先创建目录</span><br><span class="line">chmod 700 ~&#x2F;.ssh</span><br><span class="line">mv id_rsa.pub ~&#x2F;.ssh</span><br><span class="line">cd .ssh</span><br><span class="line">mv id_rsa.pub authorized_keys</span><br><span class="line">chmod 600 authorized_keys</span><br></pre></td></tr></table></figure>
<p>c.关闭ssh密码登录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">PasswordAuthentication no #此处改为no</span><br></pre></td></tr></table></figure>
<p>d.【可选】添加普通用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd roubin</span><br><span class="line">passwd roubin</span><br></pre></td></tr></table></figure>
<p>e.【可选】禁止root登陆</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">PermitRootLogin no  #此处改为no</span><br></pre></td></tr></table></figure>
<p>f.重启ssh服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>
<p>g.备份公私密钥</p>
<h5 id="2-更改SSH端口及设置"><a href="#2-更改SSH端口及设置" class="headerlink" title="2.更改SSH端口及设置"></a>2.更改SSH端口及设置</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">Port 22222  #更改默认端口号</span><br><span class="line">MaxAuthTries 5</span><br><span class="line">PermitEmptyPasswords no  #不允许空密码</span><br><span class="line">service sshd reload</span><br><span class="line">iptables -I INPUT -p tcp --dport 22222 -j ACCEPT #CentOS 6 中防火墙开启对应端口</span><br><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;22222&#x2F;tcp --permanent #CentOS 7 中防火墙开启对应端口</span><br></pre></td></tr></table></figure>
<h5 id="3-锁定口令文件"><a href="#3-锁定口令文件" class="headerlink" title="3.锁定口令文件"></a>3.锁定口令文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost &#x2F;]# chattr +i &#x2F;etc&#x2F;passwd</span><br><span class="line">[root@localhost &#x2F;]# chattr +i &#x2F;etc&#x2F;shadow</span><br><span class="line">[root@localhost &#x2F;]# chattr +i &#x2F;etc&#x2F;group</span><br><span class="line">[root@localhost &#x2F;]# chattr +i &#x2F;etc&#x2F;gshadow</span><br></pre></td></tr></table></figure>
<h5 id="4-安装fail2ban防止暴力破解"><a href="#4-安装fail2ban防止暴力破解" class="headerlink" title="4.安装fail2ban防止暴力破解"></a>4.安装fail2ban防止暴力破解</h5><p>参考<a href="https://www.digitalocean.com/community/tutorials/how-to-protect-ssh-with-fail2ban-on-centos-6" target="_blank" rel="noopener">fail2ban安装</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y fail2ban</span><br><span class="line">cp -pf &#x2F;etc&#x2F;fail2ban&#x2F;jail.conf &#x2F;etc&#x2F;fail2ban&#x2F;jail.local</span><br><span class="line">vim &#x2F;etc&#x2F;fail2ban&#x2F;jail.local</span><br><span class="line"></span><br><span class="line"> [sshd]</span><br><span class="line">enabled &#x3D; trueport &#x3D; 22222</span><br><span class="line">logpath &#x3D; %(sshd_log)s</span><br><span class="line">backend &#x3D; %(sshd_backend)s</span><br><span class="line">filter &#x3D; sshd</span><br><span class="line">action &#x3D; iptables[name&#x3D;SSH, port&#x3D;22222, protocol&#x3D;tcp] sendmail-whois[name&#x3D;SSH, dest&#x3D;root, sender&#x3D;fail2ban@example.com]</span><br><span class="line">logpath &#x3D; &#x2F;var&#x2F;log&#x2F;secure</span><br><span class="line">maxretry &#x3D; 3</span><br></pre></td></tr></table></figure>

<h5 id="5-启用iptables"><a href="#5-启用iptables" class="headerlink" title="5.启用iptables"></a>5.启用iptables</h5><p>参考<a href="https://www.vpser.net/security/linux-iptables.html" target="_blank" rel="noopener"><a href="https://www.vpser.net/security/linux-iptables.html" target="_blank" rel="noopener">Linux上iptables防火墙的基本应用教程</a></a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 清除已有iptables规则</span><br><span class="line">iptables -F</span><br><span class="line"># 允许本地回环接口(即运行本机访问本机)</span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"># 允许已建立的或相关连的通行</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">#允许所有本机向外的访问</span><br><span class="line">iptables -A OUTPUT -j ACCEPT</span><br><span class="line"># 允许访问22222(SSH)端口，以下几条相同，分别是22222,80,443端口的访问</span><br><span class="line">iptables -A INPUT -p tcp --dport 22222 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line">#如果有其他端口的话，规则也类似，稍微修改上述语句就行</span><br><span class="line">#允许ping</span><br><span class="line">iptables -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT</span><br><span class="line">#禁止其他未允许的规则访问（注意：如果22端口未加入允许规则，SSH链接会直接断开。）</span><br><span class="line">iptables -A INPUT -j REJECT </span><br><span class="line">iptables -A FORWARD -j REJECT</span><br><span class="line">#保存防火墙规则</span><br><span class="line">service iptables save</span><br><span class="line">#设置防火墙开机启动</span><br><span class="line">chkconfig --level 345 iptables on</span><br></pre></td></tr></table></figure>

<h5 id="6-禁用ipv6"><a href="#6-禁用ipv6" class="headerlink" title="6.禁用ipv6"></a>6.禁用ipv6</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#编辑&#x2F;etc&#x2F;sysconfig&#x2F;network添加行：</span><br><span class="line">NETWORKING_IPV6&#x3D;no</span><br><span class="line">#修改&#x2F;etc&#x2F;hosts,把ipv6本地主机名解析的注释掉（可选）：</span><br><span class="line"></span><br><span class="line">#::1 localhost localhost6 localhost6.localdomain6</span><br><span class="line"></span><br><span class="line">#禁止系统加载ipv6相关模块，创建modprobe关于禁用ipv6的设定文件&#x2F;etc&#x2F;modprobe.d&#x2F;disable_ipv6.conf(名字随便起)（RHEL6.0之后没有&#x2F;etc&#x2F;modprobe.conf这个文件），内容如下，三选其一（本次使用的第一种）：</span><br><span class="line">alias net-pf-10 off</span><br><span class="line">options ipv6 disable&#x3D;1</span><br><span class="line">#禁止开机启动</span><br><span class="line">chkconfig ip6tables off</span><br><span class="line">#查看ipv6是否被禁用</span><br><span class="line">lsmod | grep -i ipv6</span><br><span class="line">ifconfig | grep -i inet6</span><br></pre></td></tr></table></figure>
<h5 id="7-阻止百度收录真实位置"><a href="#7-阻止百度收录真实位置" class="headerlink" title="7.阻止百度收录真实位置"></a>7.阻止百度收录真实位置</h5><p>恩，免得上门查水表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;hosts</span><br><span class="line"></span><br><span class="line">0.0.0.0 api.map.baidu.com</span><br><span class="line">0.0.0.0 ps.map.baidu.com</span><br><span class="line">0.0.0.0 sv.map.baidu.com</span><br><span class="line">0.0.0.0 offnavi.map.baidu.com</span><br><span class="line">0.0.0.0 newvector.map.baidu.com</span><br><span class="line">0.0.0.0 ulog.imap.baidu.com</span><br><span class="line">0.0.0.0 newloc.map.n.shifen.com</span><br><span class="line"></span><br><span class="line">:: api.map.baidu.com</span><br><span class="line">:: ps.map.baidu.com</span><br><span class="line">:: sv.map.baidu.com</span><br><span class="line">:: offnavi.map.baidu.com</span><br><span class="line">:: newvector.map.baidu.com</span><br><span class="line">:: ulog.imap.baidu.com</span><br><span class="line">:: newloc.map.n.shifen.com</span><br></pre></td></tr></table></figure>

<p>其他参考文章：<br><a href="https://www.logcg.com/archives/884.html" target="_blank" rel="noopener">购买了VPS之后你应该做足的安全措施</a><br><a href="http://spenserj.com/blog/2013/07/15/securing-a-linux-server/" target="_blank" rel="noopener">Securing a Linux Server</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>安全</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】修饰符</title>
    <url>/vue-modifiers/</url>
    <content><![CDATA[<h4 id="一、事件修饰符"><a href="#一、事件修饰符" class="headerlink" title="一、事件修饰符"></a>一、事件修饰符</h4><p>1.<code>.stop</code>: 等同于event.stopPropagation()</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.stop</span>=<span class="string">"doThis"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2.<code>.prevent</code>:等同于event.preventDefault()</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">"onSubmit"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>3.<code>.capture</code>:使用事件捕获模式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即元素自身触发的事件先在此处处理，然后才交由内部元素进行处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.capture</span>=<span class="string">"doThis"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>4.<code>.self</code>:只当在 event.target 是当前元素自身时触发处理函数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click.self</span>=<span class="string">"doThat"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>5.<code>.once</code>:点击事件将只会触发一次。支持自定义事件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 点击事件将只会触发一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click.once</span>=<span class="string">"doThis"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>6.<code>.passive</code>:事件的默认行为不会被取消，提升移动端性能</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- the scroll event will not cancel the default scroll behavior --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:scroll.passive</span>=<span class="string">"onScroll"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="二、按键修饰符：监测相应键盘事件时，触发如下按键，才会调用函数"><a href="#二、按键修饰符：监测相应键盘事件时，触发如下按键，才会调用函数" class="headerlink" title="二、按键修饰符：监测相应键盘事件时，触发如下按键，才会调用函数"></a>二、按键修饰符：监测相应键盘事件时，触发如下按键，才会调用函数</h4><p>1<code>.enter</code></p>
<p>2.<code>.tab</code></p>
<p>3.<code>.delete</code>:删除和退格键</p>
<p>4.<code>.esc</code></p>
<p>5.<code>.space</code></p>
<p>6.<code>.up</code></p>
<p>7.<code>.down</code></p>
<p>8.<code>.left</code></p>
<p>9.<code>.right</code></p>
<p>10.<code>.left</code>:鼠标左键</p>
<p>11.<code>.right</code>:鼠标右键</p>
<p>12.<code>.middle</code>:鼠标中键</p>
<h4 id="三、系统修饰符：需要按住相应按键才触发鼠标或键盘事件的监听器"><a href="#三、系统修饰符：需要按住相应按键才触发鼠标或键盘事件的监听器" class="headerlink" title="三、系统修饰符：需要按住相应按键才触发鼠标或键盘事件的监听器"></a>三、系统修饰符：需要按住相应按键才触发鼠标或键盘事件的监听器</h4><p>1.<code>.ctrl</code></p>
<p>2.<code>.alt</code></p>
<p>3.<code>.shift</code></p>
<p>4.<code>.meta</code>：Windows下是徽标键，Mac下是commond键</p>
<p>5.<code>.exact</code>: 有且只有特定的按键被触发时，才调用函数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 有且只有 Ctrl 被按下的时候才触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.ctrl.exact</span>=<span class="string">"onCtrlClick"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="四、表单v-model修饰符"><a href="#四、表单v-model修饰符" class="headerlink" title="四、表单v-model修饰符"></a>四、表单v-model修饰符</h4><p>1.<code>.lazy</code>:v-model绑定后，默认input是同步输入框数据的，使用.lazy后，只在失去焦点，或按回车后才更新</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在“change”时而非“input”时更新 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.lazy</span>=<span class="string">"msg"</span> &gt;</span></span><br></pre></td></tr></table></figure>
<p>2.<code>.number</code>:自动将用户的字符串输入值转为数值类型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">"age"</span> <span class="attr">type</span>=<span class="string">"number"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>3.<code>.trim</code>:自动过滤用户输入的首尾空白字符</p>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】keep-alive性能优化与activated生命周期钩子</title>
    <url>/vue-keepalive-activated-lifecycle/</url>
    <content><![CDATA[<h4 id="一、keep-alive介绍"><a href="#一、keep-alive介绍" class="headerlink" title="一、keep-alive介绍"></a>一、keep-alive介绍</h4><p>引用官网：</p>
<blockquote>
<p>keep-alive 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们…当组件在 keep-alive 内被切换，它的 activated 和 deactivated 这两个生命周期钩子函数将会被对应执行。</p>
</blockquote>
<a id="more"></a>

<h4 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h4><p>在App.vue中添加keep-alive，缓存后端返回的json数据，减少xhr请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;keep-alive&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>

<h4 id="三、配合activated生命周期钩子"><a href="#三、配合activated生命周期钩子" class="headerlink" title="三、配合activated生命周期钩子"></a>三、配合activated生命周期钩子</h4><p>当路由跳转回页面时，判断城市是否改变，从而发送xhr请求</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123; mapState &#125; from &#39;vuex&#39;</span><br><span class="line"></span><br><span class="line">data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      lastCity: &#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">computed: &#123;</span><br><span class="line">    ...mapState([&#39;city&#39;])</span><br><span class="line">  &#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    getHomeInfo () &#123;</span><br><span class="line">      axios.get(&#39;&#x2F;api&#x2F;index.json?city&#x3D;&#39; + this.city)</span><br><span class="line">        .then(this.getHomeInfoSuccess)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">mounted () &#123;</span><br><span class="line">    this.lastCity &#x3D; this.city</span><br><span class="line">    this.getHomeInfo()</span><br><span class="line">  &#125;,</span><br><span class="line">activated () &#123;</span><br><span class="line">    if (this.lastCity !&#x3D;&#x3D; this.city) &#123;</span><br><span class="line">      this.lastCity &#x3D; this.city</span><br><span class="line">      this.getHomeInfo()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="四、排除某些组件"><a href="#四、排除某些组件" class="headerlink" title="四、排除某些组件"></a>四、排除某些组件</h4><p>使用exclude标签，来排除某个组件，不缓存，这样mounted钩子也可以正常使用。</p>
<p>app.vue:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;keep-alive exclude&#x3D;&quot;Detail&quot;&gt;</span><br><span class="line">      &lt;router-view&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;keep-alive&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】使用Cordova打包Vue webapp</title>
    <url>/vue-packed-with-cordova/</url>
    <content><![CDATA[<h4 id="一、安装并创建vue-project"><a href="#一、安装并创建vue-project" class="headerlink" title="一、安装并创建vue project"></a>一、安装并创建vue project</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g vue-cli</span><br><span class="line">vue init webpack my-vue</span><br><span class="line">cd my-vue</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>
<p>到localhost:8080下访问页面正常，则OK</p>
<a id="more"></a>

<h4 id="二、安装并创建cordova-project"><a href="#二、安装并创建cordova-project" class="headerlink" title="二、安装并创建cordova project"></a>二、安装并创建cordova project</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cordova</span><br></pre></td></tr></table></figure>
<p>如果此处报错，可以先卸载（<code>npm uninstall -g cordova</code>）再尝试安装</p>
<p>创建project，建议和之前的my-vue放在同一个目录下，方便后续写路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cordova create my-cordova</span><br></pre></td></tr></table></figure>

<h4 id="三、添加平台并运行"><a href="#三、添加平台并运行" class="headerlink" title="三、添加平台并运行"></a>三、添加平台并运行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cordova platform add android</span><br></pre></td></tr></table></figure>
<p>运行cordova:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cordova run android</span><br></pre></td></tr></table></figure>
<p>如果此时报错，可参考我之前写的 <a href="https://roubin.me/ionic-environment-build-and-basic-command/">Ionic环境搭建及基本命令</a>中的“二、环境变量设置”，把jdk和android studio安装配置好</p>
<p>生成apk文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cordova build android</span><br></pre></td></tr></table></figure>

<h4 id="四、修改my-vue中的build配置"><a href="#四、修改my-vue中的build配置" class="headerlink" title="四、修改my-vue中的build配置"></a>四、修改my-vue中的build配置</h4><p>1.修改my-vue下的index.html文件，增加3个meta和1个cordova.js，如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src * data: content:;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue-travel<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"cordova.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.修改config/index.js文件的build部分，指向my-cordova的www目录，如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">    <span class="comment">// Template for index.html</span></span><br><span class="line">    index: path.resolve(__dirname, <span class="string">'../../my-cordova/www/index.html'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Paths</span></span><br><span class="line">    assetsRoot: path.resolve(__dirname, <span class="string">'../../my-cordova/www'</span>),</span><br><span class="line">    assetsSubDirectory: <span class="string">'static'</span>,</span><br><span class="line">    assetsPublicPath: <span class="string">''</span>,</span><br></pre></td></tr></table></figure>
<p>这样vue build后的文件会直接到my-cordova/www下</p>
<h4 id="五、生成apk"><a href="#五、生成apk" class="headerlink" title="五、生成apk"></a>五、生成apk</h4><p>切换到my-cordova，运行<code>cordova build android</code>，即可生成apk文件<br>之后每次重新编译，需要手动删除之前www下生成的文件</p>
<p>参考链接：</p>
<p><a href="https://segmentfault.com/a/1190000013159076" target="_blank" rel="noopener">cordova+vue 项目打包成Android（apk）应用</a></p>
<p><a href="https://www.jianshu.com/p/25d797b983cd" target="_blank" rel="noopener">教你用Cordova打包Vue项目</a></p>
<p><a href="https://segmentfault.com/a/1190000008281748" target="_blank" rel="noopener">Vue 2.0 + cordova 构建Android应用</a></p>
<p><a href="https://www.jianshu.com/p/d25b2d6a4e04" target="_blank" rel="noopener">cordova + vue-cli构建跨平台应用</a></p>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】递归组件</title>
    <url>/vue-recursion-component/</url>
    <content><![CDATA[<p>组件是可以在它们自己的模板中调用自身的。不过它们只能通过 name 选项来做这件事</p>
<a id="more"></a>
<h4 id="一、数据结构"><a href="#一、数据结构" class="headerlink" title="一、数据结构"></a>一、数据结构</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">list: [&#123;</span><br><span class="line">        title: <span class="string">'成人票'</span>,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          title: <span class="string">'成人三馆联票'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          title: <span class="string">'成人五馆联票'</span></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        title: <span class="string">'学生票'</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        title: <span class="string">'儿童票'</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        title: <span class="string">'特惠票'</span></span><br><span class="line">      &#125;]</span><br></pre></td></tr></table></figure>

<h4 id="二、递归组件"><a href="#二、递归组件" class="headerlink" title="二、递归组件"></a>二、递归组件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;item&quot; v-for&#x3D;&quot;(item,index) of list&quot; :key&#x3D;&quot;index&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;item-title border-bottom&quot;&gt;&lt;span class&#x3D;&quot;item-title-icon&quot;&gt;&lt;&#x2F;span&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div v-if&#x3D;&quot;item.children&quot;&gt;</span><br><span class="line">        &lt;detail-list :list&#x3D;&quot;item.children&quot; class&#x3D;&quot;item-children&quot;&gt;&lt;&#x2F;detail-list&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;DetailList&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    list: Array</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】配合模拟数据实现前后端、父子组件间通信</title>
    <url>/vue-use-mock-data-component-communication/</url>
    <content><![CDATA[<h4 id="一、配置模拟数据"><a href="#一、配置模拟数据" class="headerlink" title="一、配置模拟数据"></a>一、配置模拟数据</h4><p>1.在static文件夹下新增mock文件夹</p>
<p>2.在mock文件夹下新建index.json文件，写入mock data如下：</p>
<a id="more"></a>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"ret"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"city"</span>: <span class="string">"北京"</span>,</span><br><span class="line">    <span class="attr">"swiperList"</span>: [&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0001"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1801/1a/94428c6dea109402.jpg_640x200_2cf590d8.jpg"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0002"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1802/42/7c92b9a381e46402.jpg_640x200_1cdce2a4.jpg"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0003"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1802/51/e78f936a5b404102.jpg_640x200_c14f0b3a.jpg"</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0004"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1712/91/a275569091681d02.jpg_640x200_0519ccb9.jpg"</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">"iconList"</span>: [&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0001"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/54/ace00878a52d9702.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"景点门票"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0002"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1711/df/86cbcfc533330d02.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"滑雪季"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0003"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1710/a6/83f636bd75ae6302.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"泡温泉"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0004"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/35/2640cab202c41b02.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"动植园"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0005"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/d0/e09575e66f4aa402.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"游乐园"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0006"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/59/569d3c096e542502.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"必游榜单"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0007"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/17/4bd370f3eb1acd02.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"演出"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0008"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/7f/b1ea3c8c7fb6db02.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"城市观光"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0009"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/piao/fusion/1611/a9/ffc620dbda9b9c02.png"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"一日游"</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">"recommendList"</span>: [&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0001"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/p0/1409/19/adca619faaab0898245dc4ec482b5722.jpg_140x140_80f63803.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"故宫"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"东方宫殿建筑代表，世界宫殿建筑典范"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0002"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/p0/1511/d2/d2aec2dfc5aa771290.water.jpg_140x140_abb362a7.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"南山滑雪场"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"北京专业级滑雪圣地"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0003"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/p0/1501/f4/f467729126949c3a.water.jpg_140x140_ef235b1c.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"天安门广场"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"我爱北京天安门，天安门上太阳升"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0004"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/p0/1501/40/40b2b6c951b28fdd.water.jpg_140x140_1c863e5c.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"水立方"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"中国的荣耀，阳光下的晶莹水滴"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0005"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"温都水城养生馆"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"各种亚热带植物掩映其间仿佛置身热带雨林"</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">"weekendList"</span>: [&#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0001"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/source/1510/6e/1ea71e2f04e.jpg_r_640x214_aa6f091d.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"北京温泉排行榜"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"细数北京温泉，温暖你的冬天"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0002"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/source/1505/aa/7baaf8a851d221.jpg_r_640x214_1431200f.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"北京必游TOP10"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"来北京必去的景点非这些地方莫属"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0003"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/source/1505/9e/21df651e19af5d.jpg_r_640x214_3ea5bb38.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"寻找北京的皇城范儿"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"数百年的宫廷庙宇，至今依旧威严霸气"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0004"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"学生最爱的博物馆"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"周末干嘛？北京很多博物馆已经免费开放啦"</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"0005"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://img1.qunarzz.com/sight/source/1505/b2/fde1bfcd057a52.jpg_r_640x214_bbf3fa44.jpg"</span>,</span><br><span class="line">      <span class="attr">"title"</span>: <span class="string">"儿童剧场，孩子的乐园"</span>,</span><br><span class="line">      <span class="attr">"desc"</span>: <span class="string">"带宝贝观看演出，近距离体验艺术的无穷魅力"</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="二、配置proxy实现本地请求转发"><a href="#二、配置proxy实现本地请求转发" class="headerlink" title="二、配置proxy实现本地请求转发"></a>二、配置proxy实现本地请求转发</h4><p>1.在config/index.js下修改：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://localhost:8080'</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">'/static/mock'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>
<p>2.重启服务器</p>
<p>3.组件ajax数据获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">axios.get(<span class="string">'/api/index.json'</span>)</span><br><span class="line">        .then(<span class="keyword">this</span>.getHomeInfoSuccess)</span><br></pre></td></tr></table></figure>

<h4 id="三、父子组件间通信"><a href="#三、父子组件间通信" class="headerlink" title="三、父子组件间通信"></a>三、父子组件间通信</h4><p>1.父组件中设置data变量，用于接收ajax返回的数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      city: <span class="string">''</span>,</span><br><span class="line">      swiperList: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<p>2.对ajax返回的数据做处理，赋值给本地变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    getHomeInfo () &#123;</span><br><span class="line">      axios.get(<span class="string">'/api/index.json'</span>)</span><br><span class="line">        .then(<span class="keyword">this</span>.getHomeInfoSuccess)</span><br><span class="line">    &#125;,</span><br><span class="line">    getHomeInfoSuccess (res) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">      res = res.data</span><br><span class="line">      <span class="keyword">if</span> (res.ret &amp;&amp; res.data) &#123;</span><br><span class="line">        <span class="keyword">this</span>.city = res.data.city</span><br><span class="line">        <span class="keyword">this</span>.swiperList = res.data.swiperList</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.getHomeInfo()</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>3.通过属性绑定将数据传递给子组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">home-header</span> <span class="attr">:city</span>=<span class="string">"city"</span>&gt;</span><span class="tag">&lt;/<span class="name">home-header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">home-swiper</span> <span class="attr">:list</span>=<span class="string">"swiperList"</span>&gt;</span><span class="tag">&lt;/<span class="name">home-swiper</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>4.子组件设置对应变量，用于接收父组件传过来的数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    list: <span class="built_in">Array</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<p>5.子组件将数据渲染到模板上</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">swiper-slide</span> <span class="attr">v-for</span>=<span class="string">"item of list"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"swiper-img"</span> <span class="attr">:src</span>=<span class="string">"item.imgUrl"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">swiper-slide</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】移动端适配之vw解决方案</title>
    <url>/vue-vw-layout/</url>
    <content><![CDATA[<p>主要参考了大漠老师的 <a href="https://www.w3cplus.com/css/vw-for-layout.html" target="_blank" rel="noopener">《再聊移动端页面的适配》</a>和 <a href="https://www.w3cplus.com/mobile/vw-layout-in-vue.html" target="_blank" rel="noopener">《如何在Vue项目中使用vw实现移动端适配》</a>，目前vw移动端适配的相关文章都比较类似，在这里做个记录<a id="more"></a></p>
<h4 id="一、建立vue项目"><a href="#一、建立vue项目" class="headerlink" title="一、建立vue项目"></a>一、建立vue项目</h4><h4 id="二、安装并配置PostCss插件"><a href="#二、安装并配置PostCss插件" class="headerlink" title="二、安装并配置PostCss插件"></a>二、安装并配置PostCss插件</h4><p>1.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i postcss-aspect-ratio-mini postcss-px-to-viewport postcss-write-svg postcss-cssnext postcss-viewport-units cssnano cssnano-preset-advanced --save-dev</span><br></pre></td></tr></table></figure>

<p>2.配置PostCss插件</p>
<p>在根目录的.postcssrc.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://github.com/michael-ciniawsky/postcss-load-config</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="string">"plugins"</span>: &#123;</span><br><span class="line">    <span class="string">"postcss-import"</span>: &#123;&#125;,<span class="comment">//解决@import引入路径问题</span></span><br><span class="line">    <span class="string">"postcss-url"</span>: &#123;&#125;,<span class="comment">//该插件主要用来处理文件，比如图片文件、字体文件等引用路径的处理</span></span><br><span class="line">    <span class="string">"postcss-aspect-ratio-mini"</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">"postcss-write-svg"</span>: &#123;<span class="comment">//移动端1px解决方案 </span></span><br><span class="line">      utf8: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"postcss-cssnext"</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">"postcss-px-to-viewport"</span>: &#123;</span><br><span class="line">      viewportWidth: <span class="number">750</span>, <span class="comment">// 视窗的宽度，对应的是我们设计稿的宽度，一般是750</span></span><br><span class="line">      viewportHeight: <span class="number">1334</span>, <span class="comment">//视窗的高度，根据750设备的宽度来指定，一般指定1334，也可以不配置著作权归作者所有。</span></span><br><span class="line">      unitPrecision: <span class="number">3</span>, <span class="comment">// 指定`px`转换为视窗单位值的小数位数（很多时候无法整除）著作权归作者所有。</span></span><br><span class="line">      viewportUnit: <span class="string">'vw'</span>, <span class="comment">// 指定需要转换成的视窗单位，建议使用vw</span></span><br><span class="line">      selectorBlackList: [<span class="string">'.ignore'</span>,<span class="string">'.hairlines'</span>], <span class="comment">// 指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名著作权归作者所有。</span></span><br><span class="line">      minPixelValue: <span class="number">1</span>, <span class="comment">// 小于或等于`1px`不转换为视窗单位，你也可以设置为你想要的值著作权归作者所有。</span></span><br><span class="line">      mediaQuery: <span class="literal">false</span> <span class="comment">// 允许在媒体查询中转换`px`</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"postcss-viewport-units"</span>: &#123;&#125;, <span class="comment">//给css添加content的属性，配合viewport-units-buggyfill库解决适配问题</span></span><br><span class="line">    <span class="string">"cssnano"</span>: &#123;</span><br><span class="line">      preset: <span class="string">"advanced"</span>,</span><br><span class="line">      autoprefixer: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"postcss-zindex"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="三、引入viewport-units-buggyfill解决兼容问题"><a href="#三、引入viewport-units-buggyfill解决兼容问题" class="headerlink" title="三、引入viewport-units-buggyfill解决兼容问题"></a>三、引入viewport-units-buggyfill解决兼容问题</h4><p>1.在index.html中引入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//g.alicdn.com/fdilab/lib3rd/viewport-units-buggyfill/0.6.2/??viewport-units-buggyfill.hacks.min.js,viewport-units-buggyfill.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.viewportUnitsBuggyfill.init(&#123; <span class="attr">hacks</span>: <span class="built_in">window</span>.viewportUnitsBuggyfillHacks &#125;);</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="四、问题解决"><a href="#四、问题解决" class="headerlink" title="四、问题解决"></a>四、问题解决</h4><p>1.img图片不显示：</p>
<p>全局引入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">content</span>: normal <span class="meta">!important</span>; &#125;</span><br></pre></td></tr></table></figure>

<p>2.与第三方UI库兼容问题：</p>
<p>使用postcss-px-to-viewport-opt，然后使用exclude配置项，具体参考 <a href="https://zhuanlan.zhihu.com/p/36913200" target="_blank" rel="noopener">Vue+ts下的移动端vw适配（第三方库css问题）</a></p>
<p>参考链接：</p>
<p><a href="https://www.w3cplus.com/css/vw-for-layout.html" target="_blank" rel="noopener">再聊移动端页面的适配</a></p>
<p><a href="https://www.w3cplus.com/mobile/vw-layout-in-vue.html" target="_blank" rel="noopener">如何在Vue项目中使用vw实现移动端适配</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/36913200" target="_blank" rel="noopener">Vue+ts下的移动端vw适配（第三方库css问题）</a></p>
]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】Vuex的基本使用</title>
    <url>/vuex-basic/</url>
    <content><![CDATA[<h4 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h4><p><code>npm install vuex --save</code></p>
<h4 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h4><p>1.在src下新建store文件夹，新增index.js文件</p>
<p>2.在index.js中写入配置代码，如下:</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>3.在main.js中导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  store,  <span class="comment">//导入</span></span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="三、在组件中使用"><a href="#三、在组件中使用" class="headerlink" title="三、在组件中使用"></a>三、在组件中使用</h4><p>1.在methods中使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    handlerCityClick (city) &#123;</span><br><span class="line">      this.$store.dispatch(&#39;changeCity&#39;, city)</span><br><span class="line">      this.$router.push(&#39;&#x2F;&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>2.在store/index.js中添加对应的state、actions和mutations</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    city: <span class="string">'北京'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">    changeCity (ctx, city) &#123;</span><br><span class="line">      ctx.commit(<span class="string">'changeCity'</span>, city)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    changeCity (state, city) &#123;</span><br><span class="line">      state.city = city</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="四、优化拆分store-index-js"><a href="#四、优化拆分store-index-js" class="headerlink" title="四、优化拆分store/index.js"></a>四、优化拆分store/index.js</h4><p>在store文件夹下分别新增state.js、actions.js、mutations.js，将index.js分拆</p>
<p>以actions.js为例:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  changeCity (ctx, city) &#123;</span><br><span class="line">    ctx.commit(<span class="string">'changeCity'</span>, city)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.js:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">import</span> state <span class="keyword">from</span> <span class="string">'./state'</span></span><br><span class="line"><span class="keyword">import</span> actions <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"><span class="keyword">import</span> mutations <span class="keyword">from</span> <span class="string">'./mutation'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue】移动端项目初始化</title>
    <url>/vue-web-app-initialization/</url>
    <content><![CDATA[<h4 id="一、响应式元标签添加-index-html"><a href="#一、响应式元标签添加-index-html" class="headerlink" title="一、响应式元标签添加(index.html)"></a>一、响应式元标签添加(index.html)</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="二、引入reset-css"><a href="#二、引入reset-css" class="headerlink" title="二、引入reset.css"></a>二、引入reset.css</h4><h5 id="1-将reset-css放到src-assets-styles下"><a href="#1-将reset-css放到src-assets-styles下" class="headerlink" title="1.将reset.css放到src/assets/styles下"></a>1.将reset.css放到src/assets/styles下</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">"utf-8"</span>;<span class="selector-tag">html</span>&#123;<span class="attribute">background-color</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;</span><br><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">figure</span>,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">legend</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">button</span>,<span class="selector-tag">p</span>,<span class="selector-tag">blockquote</span>,<span class="selector-tag">th</span>,<span class="selector-tag">td</span>,<span class="selector-tag">pre</span>,<span class="selector-tag">xmp</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125;</span><br><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">button</span>,<span class="selector-tag">select</span>,<span class="selector-tag">pre</span>,<span class="selector-tag">xmp</span>,<span class="selector-tag">tt</span>,<span class="selector-tag">code</span>,<span class="selector-tag">kbd</span>,<span class="selector-tag">samp</span>&#123;<span class="attribute">line-height</span>:<span class="number">1.5</span>;<span class="attribute">font-family</span>:tahoma,arial,<span class="string">"Hiragino Sans GB"</span>,simsun,sans-serif&#125;</span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">small</span>,<span class="selector-tag">big</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">button</span>,<span class="selector-tag">select</span>&#123;<span class="attribute">font-size</span>:<span class="number">100%</span>&#125;</span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123;<span class="attribute">font-family</span>:tahoma,arial,<span class="string">"Hiragino Sans GB"</span>,<span class="string">"微软雅黑"</span>,simsun,sans-serif&#125;</span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">b</span>,<span class="selector-tag">strong</span>&#123;<span class="attribute">font-weight</span>:normal&#125;</span><br><span class="line"><span class="selector-tag">address</span>,<span class="selector-tag">cite</span>,<span class="selector-tag">dfn</span>,<span class="selector-tag">em</span>,<span class="selector-tag">i</span>,<span class="selector-tag">optgroup</span>,<span class="selector-tag">var</span>&#123;<span class="attribute">font-style</span>:normal&#125;</span><br><span class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border-spacing</span>:<span class="number">0</span>;<span class="attribute">text-align</span>:left&#125;</span><br><span class="line"><span class="selector-tag">caption</span>,<span class="selector-tag">th</span>&#123;<span class="attribute">text-align</span>:inherit&#125;</span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">menu</span>&#123;<span class="attribute">list-style</span>:none&#125;</span><br><span class="line"><span class="selector-tag">fieldset</span>,<span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:<span class="number">0</span>&#125;</span><br><span class="line"><span class="selector-tag">img</span>,<span class="selector-tag">object</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">button</span>,<span class="selector-tag">select</span>&#123;<span class="attribute">vertical-align</span>:middle&#125;</span><br><span class="line"><span class="selector-tag">article</span>,<span class="selector-tag">aside</span>,<span class="selector-tag">footer</span>,<span class="selector-tag">header</span>,<span class="selector-tag">section</span>,<span class="selector-tag">nav</span>,<span class="selector-tag">figure</span>,<span class="selector-tag">figcaption</span>,<span class="selector-tag">hgroup</span>,<span class="selector-tag">details</span>,<span class="selector-tag">menu</span>&#123;<span class="attribute">display</span>:block&#125;</span><br><span class="line">audio,canvas,video&#123;display:inline-block;*display:inline;*zoom:1&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>,<span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,<span class="selector-tag">q</span><span class="selector-pseudo">:before</span>,<span class="selector-tag">q</span><span class="selector-pseudo">:after</span>&#123;<span class="attribute">content</span>:<span class="string">"\0020"</span>&#125;</span><br><span class="line"><span class="selector-tag">textarea</span>&#123;<span class="attribute">overflow</span>:auto;<span class="attribute">resize</span>:vertical&#125;</span><br><span class="line"><span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">button</span>,<span class="selector-tag">select</span>,<span class="selector-tag">a</span>&#123;<span class="attribute">outline</span>:<span class="number">0</span> none;<span class="attribute">border</span>: none;&#125;</span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">::-moz-focus-inner</span>,<span class="selector-tag">input</span><span class="selector-pseudo">::-moz-focus-inner</span>&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">border</span>:<span class="number">0</span>&#125;</span><br><span class="line"><span class="selector-tag">mark</span>&#123;<span class="attribute">background-color</span>:transparent&#125;</span><br><span class="line"><span class="selector-tag">a</span>,<span class="selector-tag">ins</span>,<span class="selector-tag">s</span>,<span class="selector-tag">u</span>,<span class="selector-tag">del</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><br><span class="line"><span class="selector-tag">sup</span>,<span class="selector-tag">sub</span>&#123;<span class="attribute">vertical-align</span>:baseline&#125;</span><br><span class="line"><span class="selector-tag">html</span> &#123;<span class="attribute">overflow-x</span>: hidden;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">font-size</span>: <span class="number">50px</span>;<span class="attribute">-webkit-tap-highlight-color</span>: transparent;&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">font-family</span>: Arial, <span class="string">"Microsoft Yahei"</span>, <span class="string">"Helvetica Neue"</span>, Helvetica, sans-serif;<span class="attribute">color</span>: <span class="number">#333</span>;<span class="attribute">font-size</span>: .<span class="number">28em</span>;<span class="attribute">line-height</span>: <span class="number">1</span>;<span class="attribute">-webkit-text-size-adjust</span>: none;&#125;</span><br><span class="line"><span class="selector-tag">hr</span> &#123;<span class="attribute">height</span>: .<span class="number">02rem</span>;<span class="attribute">margin</span>: .<span class="number">1rem</span> <span class="number">0</span>;<span class="attribute">border</span>: medium none;<span class="attribute">border-top</span>: .<span class="number">02rem</span> solid <span class="number">#cacaca</span>;&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;<span class="attribute">color</span>: <span class="number">#25a4bb</span>;<span class="attribute">text-decoration</span>: none;&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-然后在main-js中import"><a href="#2-然后在main-js中import" class="headerlink" title="2.然后在main.js中import"></a>2.然后在main.js中import</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./assets/styles/reset.css'</span></span><br></pre></td></tr></table></figure>

<h4 id="三、移动端1px问题解决，引入border-css"><a href="#三、移动端1px问题解决，引入border-css" class="headerlink" title="三、移动端1px问题解决，引入border.css"></a>三、移动端1px问题解决，引入border.css</h4><h5 id="1-将border-css放到src-assets-styles下"><a href="#1-将border-css放到src-assets-styles下" class="headerlink" title="1.将border.css放到src/assets/styles下"></a>1.将border.css放到src/assets/styles下</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">"utf-8"</span>;</span><br><span class="line"><span class="selector-class">.border</span>,</span><br><span class="line"><span class="selector-class">.border-top</span>,</span><br><span class="line"><span class="selector-class">.border-right</span>,</span><br><span class="line"><span class="selector-class">.border-bottom</span>,</span><br><span class="line"><span class="selector-class">.border-left</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\0020"</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* border</span></span><br><span class="line"><span class="comment"> * 因，边框是由伪元素区域遮盖在父级</span></span><br><span class="line"><span class="comment"> * 故，子级若有交互，需要对子级设置</span></span><br><span class="line"><span class="comment"> * 定位 及 z轴</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="selector-class">.border</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">100%</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#eaeaea</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line"><span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max--moz-device-pixel-ratio:</span> <span class="number">1.49</span>), (<span class="attribute">-webkit-max-device-pixel-ratio:</span> <span class="number">1.49</span>), (<span class="attribute">max-device-pixel-ratio:</span> <span class="number">1.49</span>), (<span class="attribute">max-resolution:</span> <span class="number">143dpi</span>), (<span class="attribute">max-resolution:</span> <span class="number">1.49dppx</span>) &#123;</span><br><span class="line">  <span class="comment">/* 默认值，无需重置 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min--moz-device-pixel-ratio:</span> <span class="number">1.5</span>) <span class="keyword">and</span> (<span class="attribute">max--moz-device-pixel-ratio:</span> <span class="number">2.49</span>), (<span class="attribute">-webkit-min-device-pixel-ratio:</span> <span class="number">1.5</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-max-device-pixel-ratio:</span> <span class="number">2.49</span>), (<span class="attribute">min-device-pixel-ratio:</span> <span class="number">1.5</span>) <span class="keyword">and</span> (<span class="attribute">max-device-pixel-ratio:</span> <span class="number">2.49</span>), (<span class="attribute">min-resolution:</span> <span class="number">144dpi</span>) <span class="keyword">and</span> (<span class="attribute">max-resolution:</span> <span class="number">239dpi</span>), (<span class="attribute">min-resolution:</span> <span class="number">1.5dppx</span>) <span class="keyword">and</span> (<span class="attribute">max-resolution:</span> <span class="number">2.49dppx</span>) &#123;</span><br><span class="line">  <span class="selector-class">.border</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(.<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(.<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(.<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min--moz-device-pixel-ratio:</span> <span class="number">2.5</span>), (<span class="attribute">-webkit-min-device-pixel-ratio:</span> <span class="number">2.5</span>), (<span class="attribute">min-device-pixel-ratio:</span> <span class="number">2.5</span>), (<span class="attribute">min-resolution:</span> <span class="number">240dpi</span>), (<span class="attribute">min-resolution:</span> <span class="number">2.5dppx</span>) &#123;</span><br><span class="line">  <span class="selector-class">.border</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(.<span class="number">33333</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.border-top</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-bottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topright</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(.<span class="number">33333</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.border-right</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-left</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-rightleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-topleft</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-rightbottom</span><span class="selector-pseudo">::before</span>,</span><br><span class="line">  <span class="selector-class">.border-topright</span><span class="selector-pseudo">::after</span>,</span><br><span class="line">  <span class="selector-class">.border-bottomleft</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(.<span class="number">33333</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-然后在main-js中import-1"><a href="#2-然后在main-js中import-1" class="headerlink" title="2.然后在main.js中import"></a>2.然后在main.js中import</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./assets/styles/border.css'</span></span><br></pre></td></tr></table></figure>

<h4 id="四、移动端点击300ms延迟解决，引入fastclick库"><a href="#四、移动端点击300ms延迟解决，引入fastclick库" class="headerlink" title="四、移动端点击300ms延迟解决，引入fastclick库"></a>四、移动端点击300ms延迟解决，引入fastclick库</h4><h5 id="1-安装fastclick库"><a href="#1-安装fastclick库" class="headerlink" title="1.安装fastclick库"></a>1.安装fastclick库</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install fastclick --save</span><br></pre></td></tr></table></figure>
<h5 id="2-然后在main-js中import-2"><a href="#2-然后在main-js中import-2" class="headerlink" title="2.然后在main.js中import"></a>2.然后在main.js中import</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fastClick <span class="keyword">from</span> <span class="string">'fastclick'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">fastClick.attach(<span class="built_in">document</span>.body) <span class="comment">//使用</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VUE</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Win7 FTP无法访问（0x80070035错误）修复方法</title>
    <url>/windows-ftp-0x80070035-error/</url>
    <content><![CDATA[<h4 id="一、问题描述："><a href="#一、问题描述：" class="headerlink" title="一、问题描述："></a>一、问题描述：</h4><p>win+R，在“运行”中输入ftp地址\\atsz-ftp-03，点确定后，弹出错误提示”windows无法找到此路径”，报错0x80070035</p>
<a id="more"></a>

<h4 id="二、排错过程"><a href="#二、排错过程" class="headerlink" title="二、排错过程"></a>二、排错过程</h4><ul>
<li>google “win7 ftp 0x80070035”，搜到微软官方的一篇解决文章，建议用户尝试重启services中的TCP/IP NetBIOS Helper服务</li>
<li>win+R，输入services.msc，找到此服务，右键点击启用，但报错“错误1068：相依性服务或组件未启动”</li>
<li>点击此服务的相依性标签页，发现需要依赖Ancilary Function Driver for Winsock</li>
<li>于是在命令行中，输入<code>Net Start AFD</code>，尝试启动此服务，但结果提示此服务已经启动</li>
<li>与正常电脑对比TCP/IP NetBIOS Helper服务依赖后，发现异常电脑缺少NetBT服务</li>
<li>对比正常电脑，发现异常电脑的C:/Windows/System32/drivers下，缺失netbt.sys文件</li>
</ul>
<h4 id="三、问题解决"><a href="#三、问题解决" class="headerlink" title="三、问题解决"></a>三、问题解决</h4><ul>
<li>从正常电脑的C:/Windows/System32/drivers下，拷贝一份netbt.sys文件，到异常电脑的相同路径下</li>
<li>重启TCP/IP NetBIOS Helper服务，即可恢复正常</li>
</ul>
<h4 id="四、问题原因"><a href="#四、问题原因" class="headerlink" title="四、问题原因"></a>四、问题原因</h4><p>大部分异常电脑都安装了腾讯管家、360卫士等，怀疑其加速优化功能导致问题</p>
<p>参考链接：</p>
<p><a href="https://answers.microsoft.com/en-us/windows/forum/windows_xp-networking/dhcp-client-wont-start-due-to-dependency/91d41140-663f-4f58-9a04-9eaab2c40884" target="_blank" rel="noopener">DHCP client won’t start due to dependency</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>win7</tag>
      </tags>
  </entry>
  <entry>
    <title>z-index 和层叠上下文</title>
    <url>/z-index-and-stacking-context/</url>
    <content><![CDATA[<h4 id="一、不含z-index的堆叠规则"><a href="#一、不含z-index的堆叠规则" class="headerlink" title="一、不含z-index的堆叠规则"></a>一、不含z-index的堆叠规则</h4><p>1.有设置了position属性的兄弟元素，不管他们的position值为何，都按照它们在HTML结构中出现的顺序堆叠</p>
<p>2.没有设置position属性的元素，始终在定位元素的下层，即便他们在HTML结构中位于较晚的位置</p>
<a id="more"></a>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/Stacking_without_z-index" target="_blank" rel="noopener">demo:不含z-index的堆叠</a></p>
<h4 id="二、设置了z-index的堆叠规则"><a href="#二、设置了z-index的堆叠规则" class="headerlink" title="二、设置了z-index的堆叠规则"></a>二、设置了z-index的堆叠规则</h4><p>1.z-index只对指定了position属性的元素有效</p>
<p>2.当没有指定z-index的时候， 所有元素都在会被渲染在默认层(0层)</p>
<p>3.当多个元素的z-index属性相同的时候(在同一个层里面)，会按照不含z-index的规则堆叠</p>
<p>4.子元素的层级还取决于父元素：当一个元素的内容发生层叠后，该元素将被作为整体在父级层叠上下文中按顺序进行层叠</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context" target="_blank" rel="noopener">demo:层叠上下文</a></p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/Adding_z-index" target="_blank" rel="noopener">demo:使用 z-index</a></p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>z-index</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Web Crypto API 打造“密码学家的工具箱”</title>
    <url>/web-crypto-api-introduction/</url>
    <content><![CDATA[<h3 id="一、密码学家的工具箱"><a href="#一、密码学家的工具箱" class="headerlink" title="一、密码学家的工具箱"></a>一、密码学家的工具箱</h3><p>在密码学中，有一个著名的说法，叫“密码学家的工具箱”，指的是密码学中常用的6种技术：对称密码、公钥密码、单向散列函数、消息认证码、数字签名、伪随机数生成器。它们在信息安全中发挥着重要的作用，我们可以用下图来表示各项技术与其解决的问题之间的关系：</p>
<a id="more"></a>
<p><img src="../images/crypto-box.png" alt="密码学家的工具箱"><br>随着近些年来Web标准的突飞猛进，新增的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/SubtleCrypto" target="_blank" rel="noopener">Web Crypto API</a>，就很好地实现了上述几种技术，它提供了常用算法的加密/解密/签名/验证/摘要/key生成/协商等操作，并统一采用Promise来处理异步逻辑，为密码学在Web端的实现，提供了较为标准的支持。</p>
<p>今天我们就来尝试下，使用Web Crypto API简单实现一个“密码学家的工具箱”</p>
<h3 id="二、开工之前"><a href="#二、开工之前" class="headerlink" title="二、开工之前"></a>二、开工之前</h3><h4 id="1-浏览器兼容性"><a href="#1-浏览器兼容性" class="headerlink" title="1.浏览器兼容性"></a>1.浏览器兼容性</h4><p>由于是新特性，我们需要先查看下<a href="https://caniuse.com/#feat=cryptography" target="_blank" rel="noopener">浏览器兼容性</a>，来决定是否使用，如下图：<br><img src="../images/crypto-caniuse.png" alt="浏览器兼容性"><br>2个值得留意的问题是：</p>
<ul>
<li>需要IE11及以上才支持</li>
<li>由于是安全相关的API，Chrome要求在HTTPS下才能使用</li>
</ul>
<p>如果我们需要兼容旧版浏览器，还可以尝试下polyfill/shim: <a href="https://github.com/vibornoff/webcrypto-shim" target="_blank" rel="noopener">webcrypto-shim</a>、<a href="https://github.com/PeculiarVentures/webcrypto-liner" target="_blank" rel="noopener">webcrypto-liner</a></p>
<h4 id="2-检测客户端浏览器是否支持"><a href="#2-检测客户端浏览器是否支持" class="headerlink" title="2.检测客户端浏览器是否支持"></a>2.检测客户端浏览器是否支持</h4><p>如下代码可以帮助我们检测当前浏览器是否存在crypto全局对象，因为大部分方法，都在crypto.subtle下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> crypto = <span class="built_in">window</span>.crypto || <span class="built_in">window</span>.msCrypto; <span class="comment">// for IE 11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (crypto.subtle)&#123;</span><br><span class="line">	...</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Unable to create window.crypto object"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然如果你对Web Crypto API或者密码学已经有所了解，需要查看某些密码算法在当前浏览器的支持情况，这里有一个<a href="https://diafygi.github.io/webcrypto-examples/" target="_blank" rel="noopener">Live Table</a>可以满足你的要求。</p>
<h3 id="三、开始打造"><a href="#三、开始打造" class="headerlink" title="三、开始打造"></a>三、开始打造</h3><h4 id="1-伪随机数生成器"><a href="#1-伪随机数生成器" class="headerlink" title="1.伪随机数生成器"></a>1.<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/RandomSource/getRandomValues" target="_blank" rel="noopener">伪随机数生成器</a></h4><p>伪随机数在密码技术的很多场景中都会被用到，比如生成密钥(用于对称加密或消息认证码)、生成初始向量、生成盐等。</p>
<p><strong>API语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cryptoObj.getRandomValues(typedArray);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>由于密码操作的对象本质上是比特序列，所以Web Crypto API传入的消息数据通常会是<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noopener">ArrayBuffer</a>，比如这里的参数是一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noopener">TypedArray</a>，该参数会被符合密码学要求的随机值填充</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> array = <span class="keyword">new</span> <span class="built_in">Uint32Array</span>(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">window</span>.crypto.getRandomValues(array);</span><br><span class="line"><span class="built_in">console</span>.log(array); <span class="comment">// [1894854709, 484538754, 1141990970, 1112093908, 2934866807, 2755048609, 2706065410, 344867006, 2460161930, 4126202407]</span></span><br></pre></td></tr></table></figure>

<h4 id="2-单向散列函数"><a href="#2-单向散列函数" class="headerlink" title="2.单向散列函数"></a>2.<a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest" target="_blank" rel="noopener">单向散列函数</a></h4><p>又称为单向哈希函数、杂凑函数，可以把任意长度的输入消息，转变成固定长度的输出(散列值)。单向，指的是无法根据散列值，反推输入的消息。常见的有SHA-256、SHA-512等</p>
<p><strong>API语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> digest = crypto.subtle.digest(algorithm, data);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>当前支持的算法：</p>
<ul>
<li>SHA-1(不推荐)</li>
<li>SHA-256</li>
<li>SHA-384</li>
<li>SHA-512</li>
</ul>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">'An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">digestMessage</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">const</span> hash = <span class="keyword">await</span> crypto.subtle.digest(<span class="string">'SHA-256'</span>, data);</span><br><span class="line">  <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> digestBuffer = <span class="keyword">await</span> digestMessage(text);</span><br><span class="line"><span class="built_in">console</span>.log(digestBuffer.byteLength); <span class="comment">// 32</span></span><br></pre></td></tr></table></figure>

<h4 id="3-消息认证码"><a href="#3-消息认证码" class="headerlink" title="3.消息认证码"></a>3.<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/SubtleCrypto/sign" target="_blank" rel="noopener">消息认证码</a></h4><p>消息认证码可以用来确保消息的完整性，并提供认证，需要配合共享密钥和特定算法来实现，最终会输出固定长度的MAC值。</p>
<p>HMAC是一种使用单向散列函数来构造消息认证码的方法，开头的H就是Hash的意思，在Web Crypto API中可以通过crypto.subtle.sign()和verify()方法实现</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> signature = crypto.subtle.sign(algorithm, key, data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = crypto.subtle.verify(algorithm, key, mac, data);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>通过传入”HMAC”字符串或者{ “name”: “HMAC” }，来使用HMAC；key为共享密钥，可以事先生成或导入；mac为散列值；data为ArrayBuffer或ArrayBuffer视图对象</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">"An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getMac</span>(<span class="params">message, key</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.sign(<span class="string">"HMAC"</span>, key, data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyMac</span>(<span class="params">message, key, mac</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.verify(<span class="string">"HMAC"</span>, key, mac, data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">generateKey</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.generateKey(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"HMAC"</span>,</span><br><span class="line">      hash: &#123; <span class="attr">name</span>: <span class="string">"SHA-256"</span> &#125; <span class="comment">//可以是 "SHA-1", "SHA-256", "SHA-384", 或 "SHA-512"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">true</span>, <span class="comment">// 是否可提取，比如用于导入导出</span></span><br><span class="line">    [<span class="string">"sign"</span>, <span class="string">"verify"</span>] <span class="comment">// 用途</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> key = <span class="keyword">await</span> generateKey();</span><br><span class="line"><span class="keyword">const</span> mac = <span class="keyword">await</span> getMac(text, key);</span><br><span class="line"><span class="built_in">console</span>.log(mac.byteLength); <span class="comment">// 32</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> verifyMac(text, key, mac);</span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h4 id="4-对称加密"><a href="#4-对称加密" class="headerlink" title="4.对称加密"></a>4.<a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt" target="_blank" rel="noopener">对称加密</a></h4><p>也称为共享密钥加密，即加密与解密使用相同的密钥，加解密效率高，但存在密钥配送的问题，常见的如DES、AES等。可以通过crypto.subtle.encrypt()和decrypt()方法实现，这里以<a href="https://juejin.im/post/5e93d001f265da47b924dcb5" target="_blank" rel="noopener">AES-GCM</a>为例：</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> result = crypto.subtle.encrypt(algorithm, key, data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = crypto.subtle.decrypt(algorithm, key, data);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>当前支持的对称加密算法：</p>
<ul>
<li>AES-CBC</li>
<li>AES-CTR</li>
<li>AES-GCM</li>
</ul>
<p>key为共享密钥，可以事先生成或导入；data为ArrayBuffer或ArrayBuffer视图对象</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">"An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."</span>;</span><br><span class="line"><span class="keyword">let</span> iv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptMessage</span>(<span class="params">message, key</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  iv = crypto.getRandomValues(<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(<span class="number">12</span>));<span class="comment">// 推荐12字节</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.encrypt(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"AES-GCM"</span>,</span><br><span class="line">      iv,</span><br><span class="line">      tagLength: <span class="number">128</span>, <span class="comment">//可选，默认128，还可以是32, 64, 96, 104, 112, 120</span></span><br><span class="line">    &#125;,</span><br><span class="line">    key,</span><br><span class="line">    data</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptMessage</span>(<span class="params">cipherText, iv, key</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> crypto.subtle.decrypt(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"AES-GCM"</span>,</span><br><span class="line">      iv,</span><br><span class="line">      tagLength: <span class="number">128</span></span><br><span class="line">    &#125;,</span><br><span class="line">    key,</span><br><span class="line">    cipherText</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> decoder = <span class="keyword">new</span> TextDecoder();</span><br><span class="line">  <span class="keyword">return</span> decoder.decode(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">generateKey</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.generateKey(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"AES-GCM"</span>,</span><br><span class="line">      length: <span class="number">256</span>, <span class="comment">//可以是128, 192, 256, 但Chrome当前不支持192</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">true</span>,</span><br><span class="line">    [<span class="string">"encrypt"</span>, <span class="string">"decrypt"</span>]</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> key = <span class="keyword">await</span> generateKey();</span><br><span class="line"><span class="keyword">const</span> cipherText = <span class="keyword">await</span> encryptMessage(text, key);</span><br><span class="line"><span class="keyword">const</span> plainText = <span class="keyword">await</span> decryptMessage(cipherText, iv, key);</span><br><span class="line"><span class="built_in">console</span>.log(plainText); <span class="comment">// An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.</span></span><br></pre></td></tr></table></figure>

<h4 id="5-非对称加密"><a href="#5-非对称加密" class="headerlink" title="5.非对称加密"></a>5.<a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt" target="_blank" rel="noopener">非对称加密</a></h4><p>又称公钥加密，使用前需要生成一对公私密钥对，用公钥加密的消息，只能用私钥解密。它解决了密钥配送的问题，通常会配合对称加密一起使用，常用的如RSA。我们依旧可以通过crypto.subtle.encrypt()和decrypt()方法实现</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> result = crypto.subtle.encrypt(algorithm, publicKey, data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = crypto.subtle.decrypt(algorithm, privateKey, data);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>当前支持的非对称加密算法：</p>
<ul>
<li>RSA-OAEP</li>
</ul>
<p>publicKey/privateKey为公私密钥；data为ArrayBuffer或ArrayBuffer视图对象</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">"An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptMessage</span>(<span class="params">message, publicKey</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.encrypt(</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"RSA-OAEP"</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      publicKey,</span><br><span class="line">      data</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptMessage</span>(<span class="params">cipherText, privateKey</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> crypto.subtle.decrypt(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"RSA-OAEP"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    privateKey,</span><br><span class="line">    cipherText</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">const</span> decoder = <span class="keyword">new</span> TextDecoder();</span><br><span class="line">  <span class="keyword">return</span> decoder.decode(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">generateKeyPair</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.generateKey(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"RSA-OAEP"</span>,</span><br><span class="line">      modulusLength: <span class="number">2048</span>, <span class="comment">//密钥长度，可以是1024, 2048, 4096，建议2048以上</span></span><br><span class="line">      publicExponent: <span class="keyword">new</span> <span class="built_in">Uint8Array</span>([<span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>]), <span class="comment">// 公共指数e，一般用65537</span></span><br><span class="line">      hash: <span class="string">"SHA-256"</span>, <span class="comment">//可以是"SHA-1", "SHA-256", "SHA-384", "SHA-512"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">true</span>,</span><br><span class="line">    [<span class="string">"encrypt"</span>, <span class="string">"decrypt"</span>]</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keyPair = <span class="keyword">await</span> generateKeyPair();</span><br><span class="line"><span class="keyword">const</span> cipherText = <span class="keyword">await</span> encryptMessage(text, keyPair.publicKey);</span><br><span class="line"><span class="keyword">const</span> plainText = <span class="keyword">await</span> decryptMessage(cipherText, keyPair.privateKey);</span><br><span class="line"><span class="built_in">console</span>.log(plainText); <span class="comment">// An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.</span></span><br></pre></td></tr></table></figure>

<h4 id="6-数字签名"><a href="#6-数字签名" class="headerlink" title="6.数字签名"></a>6.<a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/sign" target="_blank" rel="noopener">数字签名</a></h4><p>消息认证码的局限性在于不能防否认，因为它使用了共享密钥，而配合公钥加密，数字签名就可以解决这个问题，流程如下图：<br><img src="../images/crypto-box-sign.png" alt=""><br>我们可以通过crypto.subtle.sign()和verify()方法实现</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> signature = crypto.subtle.sign(algorithm, privateKey, data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = crypto.subtle.verify(algorithm, publicKey, signature, data);</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<blockquote>
<p>当前支持的签名算法：</p>
<ul>
<li>RSASSA-PKCS1-v1_5</li>
<li>RSA-PSS</li>
<li>ECDSA</li>
</ul>
<p>publicKey/privateKey为公私密钥；data为ArrayBuffer或ArrayBuffer视图对象</p>
</blockquote>
<p><strong>示例：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">"An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">signMessage</span>(<span class="params">message, privateKey</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.sign(</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">"RSA-PSS"</span>,</span><br><span class="line">        saltLength: <span class="number">32</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      privateKey,</span><br><span class="line">      data</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyMessage</span>(<span class="params">message, signature, publicKey</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder();</span><br><span class="line">  <span class="keyword">const</span> data = encoder.encode(message);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.verify(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"RSA-PSS"</span>,</span><br><span class="line">      saltLength: <span class="number">32</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    publicKey,</span><br><span class="line">    signature,</span><br><span class="line">    data</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">generateKeyPair</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> crypto.subtle.generateKey(</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">"RSA-PSS"</span>,</span><br><span class="line">      modulusLength: <span class="number">2048</span>, <span class="comment">//密钥长度，可以是1024, 2048, 4096，建议2048以上</span></span><br><span class="line">      publicExponent: <span class="keyword">new</span> <span class="built_in">Uint8Array</span>([<span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>]), <span class="comment">// 公共指数e，一般用65537</span></span><br><span class="line">      hash: <span class="string">"SHA-256"</span>, <span class="comment">//可以是"SHA-1", "SHA-256", "SHA-384", "SHA-512"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">true</span>,</span><br><span class="line">    [<span class="string">"sign"</span>, <span class="string">"verify"</span>]</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keyPair = <span class="keyword">await</span> generateKeyPair();</span><br><span class="line"><span class="keyword">const</span> signature = <span class="keyword">await</span> signMessage(text, keyPair.privateKey);</span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> verifyMessage(text, signature, keyPair.publicKey);</span><br><span class="line"><span class="built_in">console</span>.log(result); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="四、完工收尾"><a href="#四、完工收尾" class="headerlink" title="四、完工收尾"></a>四、完工收尾</h3><p>通过Web Crypto API，我们简单实现了“密码学家的工具箱”，从示例代码中，我们会发现绝大部分的接口都是window.crypto.subtle的方法，方法的输入均为ArrayBuffer，返回则是Promise对象。</p>
<p>由于Web加密标准还在演进中，各浏览器对标准的支持各不相同，大家还是需要根据实际项目需求来取舍。除了文中谈到的，Web Crypto API还有一些其他方法，感兴趣的同学可以从<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/SubtleCrypto" target="_blank" rel="noopener">MDN</a>了解更多。</p>
<p>由于文章中涉及的知识点较多，本人阅读材料有限，行文中难免疏漏，还望大家不吝指正。</p>
<p>参考文章：</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/SubtleCrypto" target="_blank" rel="noopener">Web Crypto API - MDN</a></p>
<p><a href="https://github.com/diafygi/webcrypto-examples" target="_blank" rel="noopener">Web Cryptography API Examples</a></p>
<p><a href="https://github.com/mdn/dom-examples/tree/master/web-crypto" target="_blank" rel="noopener">Examples - MDN</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1171800" target="_blank" rel="noopener">Web Crypto API简介</a></p>
<p><a href="https://www.w3.org/TR/WebCryptoAPI/" target="_blank" rel="noopener">W3C Recommendation</a></p>
]]></content>
      <categories>
        <category>加解密</category>
      </categories>
      <tags>
        <tag>crypto</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack基础</title>
    <url>/webpack-basic/</url>
    <content><![CDATA[<h4 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h4><h5 id="1-初始化："><a href="#1-初始化：" class="headerlink" title="1.初始化："></a>1.初始化：</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure>

<h5 id="2-安装webpack："><a href="#2-安装webpack：" class="headerlink" title="2.安装webpack："></a>2.安装webpack：</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install webpack webpack-cli -D</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h4 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h4><h5 id="1-babel-loader-高版本js转译为低版本"><a href="#1-babel-loader-高版本js转译为低版本" class="headerlink" title="1.babel-loader(高版本js转译为低版本)"></a>1.babel-loader(高版本js转译为低版本)</h5><p>a.安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install babel-loader -D</span><br></pre></td></tr></table></figure>

<p>b.安装babel 7相关配置：<a href="https://juejin.im/post/6844904008679686152" target="_blank" rel="noopener">https://juejin.im/post/6844904008679686152</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install @babel/core @babel/preset-env @babel/plugin-transform-runtime -D</span><br><span class="line">npm install @babel/runtime @babel/runtime-corejs3</span><br></pre></td></tr></table></figure>

<p>c.新建webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.jsx?$/</span>,</span><br><span class="line">                use: [<span class="string">'babel-loader'</span>],</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span> <span class="comment">//排除 node_modules 目录</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>d.创建.babelrc</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"presets"</span>: [<span class="string">"@babel/preset-env"</span>],</span><br><span class="line">    <span class="attr">"plugins"</span>: [</span><br><span class="line">        [</span><br><span class="line">            <span class="string">"@babel/plugin-transform-runtime"</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"corejs"</span>: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-配置环境变量-分development-production"><a href="#2-配置环境变量-分development-production" class="headerlink" title="2.配置环境变量(分development/production)"></a>2.配置环境变量(分development/production)</h5><p>a.安装cross-env</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install cross-env -D</span><br></pre></td></tr></table></figure>

<p>b.package.json添加script</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"dev"</span>: <span class="string">"cross-env NODE_ENV=development webpack"</span>,</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"cross-env NODE_ENV=production webpack"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>c.webpack.config.js添加获取env</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isDev = process.env.NODE_ENV === <span class="string">'development'</span>;</span><br></pre></td></tr></table></figure>

<h5 id="3-配置mode-自动启用不同环境的配置优化"><a href="#3-配置mode-自动启用不同环境的配置优化" class="headerlink" title="3.配置mode(自动启用不同环境的配置优化)"></a>3.配置mode(自动启用不同环境的配置优化)</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> isDev = process.env.NODE_ENV === <span class="string">'development'</span>;</span><br><span class="line"></span><br><span class="line">modue.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    mode: isDev ? <span class="string">'development'</span> : <span class="string">'production'</span></span><br><span class="line">    plugins: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="4-HTMLWebpackPlugin-自动生成入口html，动态插入script标签"><a href="#4-HTMLWebpackPlugin-自动生成入口html，动态插入script标签" class="headerlink" title="4.HTMLWebpackPlugin(自动生成入口html，动态插入script标签)"></a>4.HTMLWebpackPlugin(自动生成入口html，动态插入script标签)</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install html-webpack-plugin -D</span><br></pre></td></tr></table></figure>

<p>b.新建模版文件template.ejs</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Date: &lt;%= htmlWebpackPlugin.options.banner.date %&gt; --&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- Branch: &lt;%= htmlWebpackPlugin.options.banner.branch %&gt; --&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- Tag: &lt;%= htmlWebpackPlugin.options.banner.tag %&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cleartype"</span> <span class="attr">content</span>=<span class="string">"on"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> || '' %&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.webpackPublicPath = <span class="string">''</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">ontouchstart</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">htmlWebpackPlugin.options.IS_EXTERNALS</span> !== <span class="string">false)</span> &#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">crossorigin</span> <span class="attr">src</span>=<span class="string">"https://assets.gaiaworkforce.com/libs/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">crossorigin</span> <span class="attr">src</span>=<span class="string">"https://assets.gaiaworkforce.com/libs/sjcl/1.0.8/sjcl.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>c.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首先引入插件</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> ROOT_PATH = path.resolve(__dirname);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">`<span class="subst">$&#123;ROOT_PATH&#125;</span>/template.ejs`</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>, <span class="comment">//打包后的文件名</span></span><br><span class="line">            minify: &#123;</span><br><span class="line">                removeAttributeQuotes: <span class="literal">false</span>, <span class="comment">//是否删除属性的双引号</span></span><br><span class="line">                collapseWhitespace: <span class="literal">false</span>, <span class="comment">//是否折叠空白</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// hash: true //是否加上hash，默认是 false</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-配置webpack-dev-server"><a href="#5-配置webpack-dev-server" class="headerlink" title="5.配置webpack-dev-server"></a>5.配置webpack-dev-server</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install webpack-dev-server -D</span><br></pre></td></tr></table></figure>

<p>b.修改package.json</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "dev": "cross-env NODE_ENV=development webpack-dev-server",</span><br><span class="line">    "build": "cross-env NODE_ENV=production webpack"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>c.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//判断env是否为development</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        port: <span class="string">'3000'</span>, <span class="comment">//默认是8080</span></span><br><span class="line">        host: <span class="string">'0.0.0.0'</span>, <span class="comment">//局域网都可访问</span></span><br><span class="line">        open: <span class="literal">true</span>,</span><br><span class="line">        quiet: <span class="literal">false</span>, <span class="comment">//默认不启用</span></span><br><span class="line">        inline: <span class="literal">true</span>, <span class="comment">//默认开启 inline 模式，如果设置为false,开启 iframe 模式</span></span><br><span class="line">        stats: <span class="string">"errors-only"</span>, <span class="comment">//终端仅打印 error</span></span><br><span class="line">        overlay: <span class="literal">false</span>, <span class="comment">//默认不启用</span></span><br><span class="line">        clientLogLevel: <span class="string">"silent"</span>, <span class="comment">//日志等级</span></span><br><span class="line">        compress: <span class="literal">true</span>, <span class="comment">//是否启用 gzip 压缩</span></span><br><span class="line">        disableHostCheck: <span class="literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="6-devtool-source-map-https-awdr74100-github-io-2020-04-02-webpack-devtool"><a href="#6-devtool-source-map-https-awdr74100-github-io-2020-04-02-webpack-devtool" class="headerlink" title="6.devtool(source map: https://awdr74100.github.io/2020-04-02-webpack-devtool/)"></a>6.devtool(source map: <a href="https://awdr74100.github.io/2020-04-02-webpack-devtool/" target="_blank" rel="noopener">https://awdr74100.github.io/2020-04-02-webpack-devtool/</a>)</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devtool: <span class="string">'cheap-module-eval-source-map'</span> <span class="comment">//开发环境下使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="7-处理样式文件"><a href="#7-处理样式文件" class="headerlink" title="7.处理样式文件"></a>7.处理样式文件</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install style-loader less-loader css-loader postcss-loader autoprefixer less -D</span><br></pre></td></tr></table></figure>

<p>b.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(le|c)ss$/</span>,</span><br><span class="line">                use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, &#123;</span><br><span class="line">                    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        postcssOptions: &#123;</span><br><span class="line">                            plugins: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">return</span> [</span><br><span class="line">                                    <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)(&#123;</span><br><span class="line">                                        <span class="string">"overrideBrowserslist"</span>: [</span><br><span class="line">                                            <span class="string">"&gt;0.25%"</span>,</span><br><span class="line">                                            <span class="string">"not dead"</span></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;)</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="string">'less-loader'</span>],</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="8-抽离CSS为独立的文件"><a href="#8-抽离CSS为独立的文件" class="headerlink" title="8.抽离CSS为独立的文件"></a>8.抽离CSS为独立的文件</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install mini-css-extract-plugin -D</span><br></pre></td></tr></table></figure>

<p>b.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'css/[name].css'</span> <span class="comment">//个人习惯将css文件放在单独目录下</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(le|c)ss$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    MiniCssExtractPlugin.loader, <span class="comment">//替换之前的 style-loader</span></span><br><span class="line">                    <span class="string">'css-loader'</span>, &#123;</span><br><span class="line">                        loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            plugins: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">return</span> [</span><br><span class="line">                                    <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)(&#123;</span><br><span class="line">                                        <span class="string">"overrideBrowserslist"</span>: [</span><br><span class="line">                                            <span class="string">"defaults"</span></span><br><span class="line">                                        ]</span><br><span class="line">                                    &#125;)</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, <span class="string">'less-loader'</span></span><br><span class="line">                ],</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="9-配置-browserlistrc-https-github-com-browserslist-browserslist"><a href="#9-配置-browserlistrc-https-github-com-browserslist-browserslist" class="headerlink" title="9.配置(.browserlistrc: https://github.com/browserslist/browserslist)"></a>9.配置(.browserlistrc: <a href="https://github.com/browserslist/browserslist" target="_blank" rel="noopener">https://github.com/browserslist/browserslist</a>)</h5><p>a.新建</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last 2 version</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 0.25%</span></span><br><span class="line">not dead</span><br></pre></td></tr></table></figure>

<p>b.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'css/[name].css'</span> </span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(c|le)ss$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    MiniCssExtractPlugin.loader,</span><br><span class="line">                    <span class="string">'css-loader'</span>, &#123;</span><br><span class="line">                        loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            plugins: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">return</span> [</span><br><span class="line">                                    <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)()</span><br><span class="line">                                ]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, <span class="string">'less-loader'</span></span><br><span class="line">                ],</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="10-压缩CSS"><a href="#10-压缩CSS" class="headerlink" title="10.压缩CSS"></a>10.压缩CSS</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install optimize-css-assets-webpack-plugin -D</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> OptimizeCssAssetsPlugin = <span class="built_in">require</span>(<span class="string">"optimize-css-assets-webpack-plugin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> OptimizeCssAssetsPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>c.解决css source-map不生成的<a href="https://awdr74100.github.io/2020-07-06-webpack-optimizecssassetswebpackplugin/" target="_blank" rel="noopener">问题</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> OptimizeCssAssetsPlugin(&#123;</span><br><span class="line">      cssProcessorOptions: &#123;</span><br><span class="line">        map: &#123;</span><br><span class="line">          inline: <span class="literal">false</span>,</span><br><span class="line">          annotation: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<h5 id="11-图片-字体文件处理"><a href="#11-图片-字体文件处理" class="headerlink" title="11.图片/字体文件处理"></a>11.图片/字体文件处理</h5><p>a.安装file-loader、url-loader</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install file-loader url-loader -D</span><br></pre></td></tr></table></figure>

<p>b.修改webpack.config.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    modules: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(png|jpg|gif|jpeg|webp|svg|eot|ttf|woff|woff2)$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            limit: <span class="number">8192</span>, <span class="comment">//8K</span></span><br><span class="line">                            esModule: <span class="literal">false</span>,</span><br><span class="line">                            name: <span class="string">'[name]_[hash:6].[ext]'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="12-处理html中的本地图片"><a href="#12-处理html中的本地图片" class="headerlink" title="12.处理html中的本地图片"></a>12.处理html中的本地图片</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&lt;%= require('./thor.jpeg') %&gt;"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="13-配置output路径"><a href="#13-配置output路径" class="headerlink" title="13.配置output路径"></a>13.配置output路径</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'dist'</span>), <span class="comment">//必须是绝对路径</span></span><br><span class="line">        filename: <span class="string">'[name].[chunkhash:8].bundle.js'</span>,</span><br><span class="line">        publicPath: <span class="string">'/'</span> <span class="comment">//通常是CDN地址</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="14-每次打包前清空dist目录"><a href="#14-每次打包前清空dist目录" class="headerlink" title="14.每次打包前清空dist目录"></a>14.每次打包前清空dist目录</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install clean-webpack-plugin -D</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">//不需要传参数喔，它可以找到 outputPath</span></span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin() </span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="15-拷贝无需webpack处理的文件"><a href="#15-拷贝无需webpack处理的文件" class="headerlink" title="15.拷贝无需webpack处理的文件"></a>15.拷贝无需webpack处理的文件</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install copy-webpack-plugin -D</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">"copy-webpack-plugin"</span>);</span><br><span class="line"></span><br><span class="line">plugins: [</span><br><span class="line">	<span class="keyword">new</span> CopyWebpackPlugin(&#123;</span><br><span class="line">      patterns: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">from</span>: <span class="string">"public/js/*.js"</span>,</span><br><span class="line">          to: path.resolve(__dirname, <span class="string">"dist"</span>, <span class="string">"js"</span>),</span><br><span class="line">          flatten: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h5 id="16-多页应用打包"><a href="#16-多页应用打包" class="headerlink" title="16.多页应用打包"></a>16.多页应用打包</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./src/index.js'</span>,</span><br><span class="line">        login: <span class="string">'./src/login.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        filename: <span class="string">'[name].[hash:6].js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./public/index.html'</span>,</span><br><span class="line">            filename: <span class="string">'index.html'</span>, <span class="comment">//打包后的文件名</span></span><br><span class="line">            chunks: [<span class="string">'index'</span>], <span class="comment">//只引入index.js</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'./public/login.html'</span>,</span><br><span class="line">            filename: <span class="string">'login.html'</span>, <span class="comment">//打包后的文件名</span></span><br><span class="line">            chunks: [<span class="string">'login'</span>], <span class="comment">//只引入login.js</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="17-resolve配置"><a href="#17-resolve配置" class="headerlink" title="17.resolve配置"></a>17.resolve配置</h5><p>a.alias别名</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//....</span></span><br><span class="line">    resolve: &#123;</span><br><span class="line">        alias: &#123;</span><br><span class="line">            <span class="string">'react-native'</span>: <span class="string">'@my/react-native-web'</span> <span class="comment">//这个包名是我随便写的哈</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>b.使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; View, ListView, StyleSheet, Animated &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br></pre></td></tr></table></figure>

<p>c.extensions</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">        alias: &#123;</span><br><span class="line">            <span class="string">'react-native'</span>: <span class="string">'@my/react-native-web'</span> <span class="comment">//这个包名是我随便写的哈</span></span><br><span class="line">        &#125;,</span><br><span class="line">       	extensions: [<span class="string">'.js'</span>, <span class="string">'.jsx'</span>, <span class="string">'.ts'</span>, <span class="string">'.tsx'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="18-不同环境使用不同配置文件"><a href="#18-不同环境使用不同配置文件" class="headerlink" title="18.不同环境使用不同配置文件"></a>18.不同环境使用不同配置文件</h5><p>a.安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install webpack-merge -D</span><br></pre></td></tr></table></figure>

<p>b.配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">"webpack-merge"</span>);</span><br><span class="line"><span class="keyword">const</span> baseWebpackConfig = <span class="built_in">require</span>(<span class="string">"./webpack.config.base"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseWebpackConfig, &#123;</span><br><span class="line">  mode: <span class="string">"development"</span>,</span><br><span class="line">  devtool: <span class="string">"cheap-module-eval-source-map"</span>,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    port: <span class="string">"3000"</span>, <span class="comment">//默认是8080</span></span><br><span class="line">    quiet: <span class="literal">false</span>, <span class="comment">//默认不启用</span></span><br><span class="line">    inline: <span class="literal">true</span>, <span class="comment">//默认开启 inline 模式，如果设置为false,开启 iframe 模式</span></span><br><span class="line">    stats: <span class="string">"errors-only"</span>, <span class="comment">//终端仅打印 error</span></span><br><span class="line">    overlay: <span class="literal">false</span>, <span class="comment">//默认不启用</span></span><br><span class="line">    clientLogLevel: <span class="string">"silent"</span>, <span class="comment">//日志等级</span></span><br><span class="line">    compress: <span class="literal">true</span>, <span class="comment">//是否启用 gzip 压缩</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>c.修改package.json</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "dev": "cross-env NODE_ENV=development webpack-dev-server --open --config=webpack.config.dev.js",</span><br><span class="line">    "build": "cross-env NODE_ENV=production webpack --config=webpack.config.prod.js"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<h5 id="19-dev-server代理设置"><a href="#19-dev-server代理设置" class="headerlink" title="19.dev-server代理设置"></a>19.dev-server代理设置</h5><p>a.新建server.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//server.js</span></span><br><span class="line"><span class="keyword">let</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/user'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    res.json(&#123;<span class="attr">name</span>: <span class="string">'刘小夕'</span>&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">4000</span>);</span><br></pre></td></tr></table></figure>

<p>b.index.js添加请求</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需要将 localhost:3000 转发到 localhost:4000（服务端） 端口</span></span><br><span class="line">fetch(<span class="string">"/api/user"</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">response</span> =&gt;</span> response.json())</span><br><span class="line">    .then(<span class="function"><span class="params">data</span> =&gt;</span> <span class="built_in">console</span>.log(data))</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(err));</span><br></pre></td></tr></table></figure>

<p>c.修改webpack配置</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        proxy: &#123;</span><br><span class="line">            <span class="string">'/api'</span>: &#123;</span><br><span class="line">                target: <span class="string">'http://localhost:4000'</span>,</span><br><span class="line">                pathRewrite: &#123;</span><br><span class="line">                    <span class="string">'/api'</span>: <span class="string">''</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="https://juejin.cn/post/6844904079219490830" target="_blank" rel="noopener">带你深度解锁Webpack系列(基础篇)</a></p>
<p><a href="https://juejin.cn/post/6844904084927938567" target="_blank" rel="noopener">带你深度解锁Webpack系列(进阶篇)</a></p>
<p><a href="https://juejin.cn/post/6844904093463347208" target="_blank" rel="noopener">带你深度解锁Webpack系列(优化篇)</a></p>
]]></content>
      <categories>
        <category>Webpack</category>
      </categories>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
</search>
